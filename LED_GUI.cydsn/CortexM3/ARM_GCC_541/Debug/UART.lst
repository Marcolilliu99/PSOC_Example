ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.UART_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	UART_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	UART_Enable, %function
  25              	UART_Enable:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC5\\UART.c"
   1:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/UART.c **** * File Name: UART.c
   3:Generated_Source\PSoC5/UART.c **** * Version 2.50
   4:Generated_Source\PSoC5/UART.c **** *
   5:Generated_Source\PSoC5/UART.c **** * Description:
   6:Generated_Source\PSoC5/UART.c **** *  This file provides all API functionality of the UART component
   7:Generated_Source\PSoC5/UART.c **** *
   8:Generated_Source\PSoC5/UART.c **** * Note:
   9:Generated_Source\PSoC5/UART.c **** *
  10:Generated_Source\PSoC5/UART.c **** ********************************************************************************
  11:Generated_Source\PSoC5/UART.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:Generated_Source\PSoC5/UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:Generated_Source\PSoC5/UART.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/UART.c **** 
  17:Generated_Source\PSoC5/UART.c **** #include "UART.h"
  18:Generated_Source\PSoC5/UART.c **** #if (UART_INTERNAL_CLOCK_USED)
  19:Generated_Source\PSoC5/UART.c ****     #include "UART_IntClock.h"
  20:Generated_Source\PSoC5/UART.c **** #endif /* End UART_INTERNAL_CLOCK_USED */
  21:Generated_Source\PSoC5/UART.c **** 
  22:Generated_Source\PSoC5/UART.c **** 
  23:Generated_Source\PSoC5/UART.c **** /***************************************
  24:Generated_Source\PSoC5/UART.c **** * Global data allocation
  25:Generated_Source\PSoC5/UART.c **** ***************************************/
  26:Generated_Source\PSoC5/UART.c **** 
  27:Generated_Source\PSoC5/UART.c **** uint8 UART_initVar = 0u;
  28:Generated_Source\PSoC5/UART.c **** 
  29:Generated_Source\PSoC5/UART.c **** #if (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED)
  30:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_txBuffer[UART_TX_BUFFER_SIZE];
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 2


  31:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_txBufferRead = 0u;
  32:Generated_Source\PSoC5/UART.c ****     uint8 UART_txBufferWrite = 0u;
  33:Generated_Source\PSoC5/UART.c **** #endif /* (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED) */
  34:Generated_Source\PSoC5/UART.c **** 
  35:Generated_Source\PSoC5/UART.c **** #if (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED))
  36:Generated_Source\PSoC5/UART.c ****     uint8 UART_errorStatus = 0u;
  37:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBuffer[UART_RX_BUFFER_SIZE];
  38:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferRead  = 0u;
  39:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferWrite = 0u;
  40:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferLoopDetect = 0u;
  41:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferOverflow   = 0u;
  42:Generated_Source\PSoC5/UART.c ****     #if (UART_RXHW_ADDRESS_ENABLED)
  43:Generated_Source\PSoC5/UART.c ****         volatile uint8 UART_rxAddressMode = UART_RX_ADDRESS_MODE;
  44:Generated_Source\PSoC5/UART.c ****         volatile uint8 UART_rxAddressDetected = 0u;
  45:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RXHW_ADDRESS_ENABLED) */
  46:Generated_Source\PSoC5/UART.c **** #endif /* (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED)) */
  47:Generated_Source\PSoC5/UART.c **** 
  48:Generated_Source\PSoC5/UART.c **** 
  49:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
  50:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Start
  51:Generated_Source\PSoC5/UART.c **** ********************************************************************************
  52:Generated_Source\PSoC5/UART.c **** *
  53:Generated_Source\PSoC5/UART.c **** * Summary:
  54:Generated_Source\PSoC5/UART.c **** *  This is the preferred method to begin component operation.
  55:Generated_Source\PSoC5/UART.c **** *  UART_Start() sets the initVar variable, calls the
  56:Generated_Source\PSoC5/UART.c **** *  UART_Init() function, and then calls the
  57:Generated_Source\PSoC5/UART.c **** *  UART_Enable() function.
  58:Generated_Source\PSoC5/UART.c **** *
  59:Generated_Source\PSoC5/UART.c **** * Parameters:
  60:Generated_Source\PSoC5/UART.c **** *  None.
  61:Generated_Source\PSoC5/UART.c **** *
  62:Generated_Source\PSoC5/UART.c **** * Return:
  63:Generated_Source\PSoC5/UART.c **** *  None.
  64:Generated_Source\PSoC5/UART.c **** *
  65:Generated_Source\PSoC5/UART.c **** * Global variables:
  66:Generated_Source\PSoC5/UART.c **** *  The UART_intiVar variable is used to indicate initial
  67:Generated_Source\PSoC5/UART.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:Generated_Source\PSoC5/UART.c **** *  and set to one (1u) the first time UART_Start() is called. This
  69:Generated_Source\PSoC5/UART.c **** *  allows for component initialization without re-initialization in all
  70:Generated_Source\PSoC5/UART.c **** *  subsequent calls to the UART_Start() routine.
  71:Generated_Source\PSoC5/UART.c **** *
  72:Generated_Source\PSoC5/UART.c **** * Reentrant:
  73:Generated_Source\PSoC5/UART.c **** *  No.
  74:Generated_Source\PSoC5/UART.c **** *
  75:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
  76:Generated_Source\PSoC5/UART.c **** void UART_Start(void) 
  77:Generated_Source\PSoC5/UART.c **** {
  78:Generated_Source\PSoC5/UART.c ****     /* If not initialized then initialize all required hardware and software */
  79:Generated_Source\PSoC5/UART.c ****     if(UART_initVar == 0u)
  80:Generated_Source\PSoC5/UART.c ****     {
  81:Generated_Source\PSoC5/UART.c ****         UART_Init();
  82:Generated_Source\PSoC5/UART.c ****         UART_initVar = 1u;
  83:Generated_Source\PSoC5/UART.c ****     }
  84:Generated_Source\PSoC5/UART.c **** 
  85:Generated_Source\PSoC5/UART.c ****     UART_Enable();
  86:Generated_Source\PSoC5/UART.c **** }
  87:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 3


  88:Generated_Source\PSoC5/UART.c **** 
  89:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
  90:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Init
  91:Generated_Source\PSoC5/UART.c **** ********************************************************************************
  92:Generated_Source\PSoC5/UART.c **** *
  93:Generated_Source\PSoC5/UART.c **** * Summary:
  94:Generated_Source\PSoC5/UART.c **** *  Initializes or restores the component according to the customizer Configure
  95:Generated_Source\PSoC5/UART.c **** *  dialog settings. It is not necessary to call UART_Init() because
  96:Generated_Source\PSoC5/UART.c **** *  the UART_Start() API calls this function and is the preferred
  97:Generated_Source\PSoC5/UART.c **** *  method to begin component operation.
  98:Generated_Source\PSoC5/UART.c **** *
  99:Generated_Source\PSoC5/UART.c **** * Parameters:
 100:Generated_Source\PSoC5/UART.c **** *  None.
 101:Generated_Source\PSoC5/UART.c **** *
 102:Generated_Source\PSoC5/UART.c **** * Return:
 103:Generated_Source\PSoC5/UART.c **** *  None.
 104:Generated_Source\PSoC5/UART.c **** *
 105:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/UART.c **** void UART_Init(void) 
 107:Generated_Source\PSoC5/UART.c **** {
 108:Generated_Source\PSoC5/UART.c ****     #if(UART_RX_ENABLED || UART_HD_ENABLED)
 109:Generated_Source\PSoC5/UART.c **** 
 110:Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 111:Generated_Source\PSoC5/UART.c ****             /* Set RX interrupt vector and priority */
 112:Generated_Source\PSoC5/UART.c ****             (void) CyIntSetVector(UART_RX_VECT_NUM, &UART_RXISR);
 113:Generated_Source\PSoC5/UART.c ****             CyIntSetPriority(UART_RX_VECT_NUM, UART_RX_PRIOR_NUM);
 114:Generated_Source\PSoC5/UART.c ****             UART_errorStatus = 0u;
 115:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 116:Generated_Source\PSoC5/UART.c **** 
 117:Generated_Source\PSoC5/UART.c ****         #if (UART_RXHW_ADDRESS_ENABLED)
 118:Generated_Source\PSoC5/UART.c ****             UART_SetRxAddressMode(UART_RX_ADDRESS_MODE);
 119:Generated_Source\PSoC5/UART.c ****             UART_SetRxAddress1(UART_RX_HW_ADDRESS1);
 120:Generated_Source\PSoC5/UART.c ****             UART_SetRxAddress2(UART_RX_HW_ADDRESS2);
 121:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 122:Generated_Source\PSoC5/UART.c **** 
 123:Generated_Source\PSoC5/UART.c ****         /* Init Count7 period */
 124:Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_PERIOD_REG = UART_RXBITCTR_INIT;
 125:Generated_Source\PSoC5/UART.c ****         /* Configure the Initial RX interrupt mask */
 126:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_MASK_REG  = UART_INIT_RX_INTERRUPTS_MASK;
 127:Generated_Source\PSoC5/UART.c ****     #endif /* End UART_RX_ENABLED || UART_HD_ENABLED*/
 128:Generated_Source\PSoC5/UART.c **** 
 129:Generated_Source\PSoC5/UART.c ****     #if(UART_TX_ENABLED)
 130:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 131:Generated_Source\PSoC5/UART.c ****             /* Set TX interrupt vector and priority */
 132:Generated_Source\PSoC5/UART.c ****             (void) CyIntSetVector(UART_TX_VECT_NUM, &UART_TXISR);
 133:Generated_Source\PSoC5/UART.c ****             CyIntSetPriority(UART_TX_VECT_NUM, UART_TX_PRIOR_NUM);
 134:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 135:Generated_Source\PSoC5/UART.c **** 
 136:Generated_Source\PSoC5/UART.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:Generated_Source\PSoC5/UART.c ****         #if (UART_TXCLKGEN_DP)
 138:Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKGEN_CTR_REG = UART_BIT_CENTER;
 139:Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKTX_COMPLETE_REG = ((UART_NUMBER_OF_DATA_BITS +
 140:Generated_Source\PSoC5/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_COUNT) - 1u;
 141:Generated_Source\PSoC5/UART.c ****         #else
 142:Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_PERIOD_REG = ((UART_NUMBER_OF_DATA_BITS +
 143:Generated_Source\PSoC5/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_8) - 1u;
 144:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 4


 145:Generated_Source\PSoC5/UART.c **** 
 146:Generated_Source\PSoC5/UART.c ****         /* Configure the Initial TX interrupt mask */
 147:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 148:Generated_Source\PSoC5/UART.c ****             UART_TXSTATUS_MASK_REG = UART_TX_STS_FIFO_EMPTY;
 149:Generated_Source\PSoC5/UART.c ****         #else
 150:Generated_Source\PSoC5/UART.c ****             UART_TXSTATUS_MASK_REG = UART_INIT_TX_INTERRUPTS_MASK;
 151:Generated_Source\PSoC5/UART.c ****         #endif /*End UART_TX_INTERRUPT_ENABLED*/
 152:Generated_Source\PSoC5/UART.c **** 
 153:Generated_Source\PSoC5/UART.c ****     #endif /* End UART_TX_ENABLED */
 154:Generated_Source\PSoC5/UART.c **** 
 155:Generated_Source\PSoC5/UART.c ****     #if(UART_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:Generated_Source\PSoC5/UART.c ****         UART_WriteControlRegister( \
 157:Generated_Source\PSoC5/UART.c ****             (UART_ReadControlRegister() & (uint8)~UART_CTRL_PARITY_TYPE_MASK) | \
 158:Generated_Source\PSoC5/UART.c ****             (uint8)(UART_PARITY_TYPE << UART_CTRL_PARITY_TYPE0_SHIFT) );
 159:Generated_Source\PSoC5/UART.c ****     #endif /* End UART_PARITY_TYPE_SW */
 160:Generated_Source\PSoC5/UART.c **** }
 161:Generated_Source\PSoC5/UART.c **** 
 162:Generated_Source\PSoC5/UART.c **** 
 163:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 164:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Enable
 165:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 166:Generated_Source\PSoC5/UART.c **** *
 167:Generated_Source\PSoC5/UART.c **** * Summary:
 168:Generated_Source\PSoC5/UART.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:Generated_Source\PSoC5/UART.c **** *  to call UART_Enable() because the UART_Start() API
 170:Generated_Source\PSoC5/UART.c **** *  calls this function, which is the preferred method to begin component
 171:Generated_Source\PSoC5/UART.c **** *  operation.
 172:Generated_Source\PSoC5/UART.c **** 
 173:Generated_Source\PSoC5/UART.c **** * Parameters:
 174:Generated_Source\PSoC5/UART.c **** *  None.
 175:Generated_Source\PSoC5/UART.c **** *
 176:Generated_Source\PSoC5/UART.c **** * Return:
 177:Generated_Source\PSoC5/UART.c **** *  None.
 178:Generated_Source\PSoC5/UART.c **** *
 179:Generated_Source\PSoC5/UART.c **** * Global Variables:
 180:Generated_Source\PSoC5/UART.c **** *  UART_rxAddressDetected - set to initial state (0).
 181:Generated_Source\PSoC5/UART.c **** *
 182:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 183:Generated_Source\PSoC5/UART.c **** void UART_Enable(void) 
 184:Generated_Source\PSoC5/UART.c **** {
  28              		.loc 1 184 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
 185:Generated_Source\PSoC5/UART.c ****     uint8 enableInterrupts;
 186:Generated_Source\PSoC5/UART.c ****     enableInterrupts = CyEnterCriticalSection();
  36              		.loc 1 186 0
  37 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  38              	.LVL0:
  39 0006 0446     		mov	r4, r0
  40              	.LVL1:
 187:Generated_Source\PSoC5/UART.c **** 
 188:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 5


 189:Generated_Source\PSoC5/UART.c ****         /* RX Counter (Count7) Enable */
 190:Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
  41              		.loc 1 190 0
  42 0008 0A4A     		ldr	r2, .L3
  43 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  44 000c 43F02003 		orr	r3, r3, #32
  45 0010 1370     		strb	r3, [r2]
 191:Generated_Source\PSoC5/UART.c **** 
 192:Generated_Source\PSoC5/UART.c ****         /* Enable the RX Interrupt */
 193:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_ACTL_REG  |= UART_INT_ENABLE;
  46              		.loc 1 193 0
  47 0012 023A     		subs	r2, r2, #2
  48 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  49 0016 43F01003 		orr	r3, r3, #16
  50 001a 1370     		strb	r3, [r2]
 194:Generated_Source\PSoC5/UART.c **** 
 195:Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 196:Generated_Source\PSoC5/UART.c ****             UART_EnableRxInt();
 197:Generated_Source\PSoC5/UART.c **** 
 198:Generated_Source\PSoC5/UART.c ****             #if (UART_RXHW_ADDRESS_ENABLED)
 199:Generated_Source\PSoC5/UART.c ****                 UART_rxAddressDetected = 0u;
 200:Generated_Source\PSoC5/UART.c ****             #endif /* (UART_RXHW_ADDRESS_ENABLED) */
 201:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 202:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 203:Generated_Source\PSoC5/UART.c **** 
 204:Generated_Source\PSoC5/UART.c ****     #if(UART_TX_ENABLED)
 205:Generated_Source\PSoC5/UART.c ****         /* TX Counter (DP/Count7) Enable */
 206:Generated_Source\PSoC5/UART.c ****         #if(!UART_TXCLKGEN_DP)
 207:Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
 208:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 209:Generated_Source\PSoC5/UART.c **** 
 210:Generated_Source\PSoC5/UART.c ****         /* Enable the TX Interrupt */
 211:Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_ACTL_REG |= UART_INT_ENABLE;
  51              		.loc 1 211 0
  52 001c FC3A     		subs	r2, r2, #252
  53 001e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  54 0020 43F01003 		orr	r3, r3, #16
  55 0024 1370     		strb	r3, [r2]
 212:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 213:Generated_Source\PSoC5/UART.c ****             UART_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
 215:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 216:Generated_Source\PSoC5/UART.c ****      #endif /* (UART_TX_INTERRUPT_ENABLED) */
 217:Generated_Source\PSoC5/UART.c **** 
 218:Generated_Source\PSoC5/UART.c ****     #if (UART_INTERNAL_CLOCK_USED)
 219:Generated_Source\PSoC5/UART.c ****         UART_IntClock_Start();  /* Enable the clock */
  56              		.loc 1 219 0
  57 0026 FFF7FEFF 		bl	UART_IntClock_Start
  58              	.LVL2:
 220:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 221:Generated_Source\PSoC5/UART.c **** 
 222:Generated_Source\PSoC5/UART.c ****     CyExitCriticalSection(enableInterrupts);
  59              		.loc 1 222 0
  60 002a 2046     		mov	r0, r4
  61 002c FFF7FEFF 		bl	CyExitCriticalSection
  62              	.LVL3:
  63 0030 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 6


  64              	.LVL4:
  65              	.L4:
  66 0032 00BF     		.align	2
  67              	.L3:
  68 0034 9A650040 		.word	1073767834
  69              		.cfi_endproc
  70              	.LFE2:
  71              		.size	UART_Enable, .-UART_Enable
  72              		.section	.text.UART_Stop,"ax",%progbits
  73              		.align	2
  74              		.global	UART_Stop
  75              		.thumb
  76              		.thumb_func
  77              		.type	UART_Stop, %function
  78              	UART_Stop:
  79              	.LFB3:
 223:Generated_Source\PSoC5/UART.c **** }
 224:Generated_Source\PSoC5/UART.c **** 
 225:Generated_Source\PSoC5/UART.c **** 
 226:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 227:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Stop
 228:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 229:Generated_Source\PSoC5/UART.c **** *
 230:Generated_Source\PSoC5/UART.c **** * Summary:
 231:Generated_Source\PSoC5/UART.c **** *  Disables the UART operation.
 232:Generated_Source\PSoC5/UART.c **** *
 233:Generated_Source\PSoC5/UART.c **** * Parameters:
 234:Generated_Source\PSoC5/UART.c **** *  None.
 235:Generated_Source\PSoC5/UART.c **** *
 236:Generated_Source\PSoC5/UART.c **** * Return:
 237:Generated_Source\PSoC5/UART.c **** *  None.
 238:Generated_Source\PSoC5/UART.c **** *
 239:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 240:Generated_Source\PSoC5/UART.c **** void UART_Stop(void) 
 241:Generated_Source\PSoC5/UART.c **** {
  80              		.loc 1 241 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84 0000 10B5     		push	{r4, lr}
  85              		.cfi_def_cfa_offset 8
  86              		.cfi_offset 4, -8
  87              		.cfi_offset 14, -4
 242:Generated_Source\PSoC5/UART.c ****     uint8 enableInterrupts;
 243:Generated_Source\PSoC5/UART.c ****     enableInterrupts = CyEnterCriticalSection();
  88              		.loc 1 243 0
  89 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  90              	.LVL5:
  91 0006 0446     		mov	r4, r0
  92              	.LVL6:
 244:Generated_Source\PSoC5/UART.c **** 
 245:Generated_Source\PSoC5/UART.c ****     /* Write Bit Counter Disable */
 246:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 247:Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_CONTROL_REG &= (uint8) ~UART_CNTR_ENABLE;
  93              		.loc 1 247 0
  94 0008 0A4A     		ldr	r2, .L7
  95 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 7


  96 000c 03F0DF03 		and	r3, r3, #223
  97 0010 1370     		strb	r3, [r2]
 248:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 249:Generated_Source\PSoC5/UART.c **** 
 250:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_ENABLED)
 251:Generated_Source\PSoC5/UART.c ****         #if(!UART_TXCLKGEN_DP)
 252:Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_CONTROL_REG &= (uint8) ~UART_CNTR_ENABLE;
 253:Generated_Source\PSoC5/UART.c ****         #endif /* (!UART_TXCLKGEN_DP) */
 254:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_ENABLED) */
 255:Generated_Source\PSoC5/UART.c **** 
 256:Generated_Source\PSoC5/UART.c ****     #if (UART_INTERNAL_CLOCK_USED)
 257:Generated_Source\PSoC5/UART.c ****         UART_IntClock_Stop();   /* Disable the clock */
  98              		.loc 1 257 0
  99 0012 FFF7FEFF 		bl	UART_IntClock_Stop
 100              	.LVL7:
 258:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 259:Generated_Source\PSoC5/UART.c **** 
 260:Generated_Source\PSoC5/UART.c ****     /* Disable internal interrupt component */
 261:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 262:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_ACTL_REG  &= (uint8) ~UART_INT_ENABLE;
 101              		.loc 1 262 0
 102 0016 084A     		ldr	r2, .L7+4
 103 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 104 001a 03F0EF03 		and	r3, r3, #239
 105 001e 1370     		strb	r3, [r2]
 263:Generated_Source\PSoC5/UART.c **** 
 264:Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 265:Generated_Source\PSoC5/UART.c ****             UART_DisableRxInt();
 266:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 267:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 268:Generated_Source\PSoC5/UART.c **** 
 269:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_ENABLED)
 270:Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_ACTL_REG &= (uint8) ~UART_INT_ENABLE;
 106              		.loc 1 270 0
 107 0020 FC3A     		subs	r2, r2, #252
 108 0022 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 109 0024 03F0EF03 		and	r3, r3, #239
 110 0028 1370     		strb	r3, [r2]
 271:Generated_Source\PSoC5/UART.c **** 
 272:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 273:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
 274:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 275:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_ENABLED) */
 276:Generated_Source\PSoC5/UART.c **** 
 277:Generated_Source\PSoC5/UART.c ****     CyExitCriticalSection(enableInterrupts);
 111              		.loc 1 277 0
 112 002a 2046     		mov	r0, r4
 113 002c FFF7FEFF 		bl	CyExitCriticalSection
 114              	.LVL8:
 115 0030 10BD     		pop	{r4, pc}
 116              	.LVL9:
 117              	.L8:
 118 0032 00BF     		.align	2
 119              	.L7:
 120 0034 9A650040 		.word	1073767834
 121 0038 98650040 		.word	1073767832
 122              		.cfi_endproc
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 8


 123              	.LFE3:
 124              		.size	UART_Stop, .-UART_Stop
 125              		.section	.text.UART_ReadControlRegister,"ax",%progbits
 126              		.align	2
 127              		.global	UART_ReadControlRegister
 128              		.thumb
 129              		.thumb_func
 130              		.type	UART_ReadControlRegister, %function
 131              	UART_ReadControlRegister:
 132              	.LFB4:
 278:Generated_Source\PSoC5/UART.c **** }
 279:Generated_Source\PSoC5/UART.c **** 
 280:Generated_Source\PSoC5/UART.c **** 
 281:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 282:Generated_Source\PSoC5/UART.c **** * Function Name: UART_ReadControlRegister
 283:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 284:Generated_Source\PSoC5/UART.c **** *
 285:Generated_Source\PSoC5/UART.c **** * Summary:
 286:Generated_Source\PSoC5/UART.c **** *  Returns the current value of the control register.
 287:Generated_Source\PSoC5/UART.c **** *
 288:Generated_Source\PSoC5/UART.c **** * Parameters:
 289:Generated_Source\PSoC5/UART.c **** *  None.
 290:Generated_Source\PSoC5/UART.c **** *
 291:Generated_Source\PSoC5/UART.c **** * Return:
 292:Generated_Source\PSoC5/UART.c **** *  Contents of the control register.
 293:Generated_Source\PSoC5/UART.c **** *
 294:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 295:Generated_Source\PSoC5/UART.c **** uint8 UART_ReadControlRegister(void) 
 296:Generated_Source\PSoC5/UART.c **** {
 133              		.loc 1 296 0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137              		@ link register save eliminated.
 297:Generated_Source\PSoC5/UART.c ****     #if (UART_CONTROL_REG_REMOVED)
 298:Generated_Source\PSoC5/UART.c ****         return(0u);
 299:Generated_Source\PSoC5/UART.c ****     #else
 300:Generated_Source\PSoC5/UART.c ****         return(UART_CONTROL_REG);
 138              		.loc 1 300 0
 139 0000 014B     		ldr	r3, .L10
 140 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 301:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 302:Generated_Source\PSoC5/UART.c **** }
 141              		.loc 1 302 0
 142 0004 7047     		bx	lr
 143              	.L11:
 144 0006 00BF     		.align	2
 145              	.L10:
 146 0008 78640040 		.word	1073767544
 147              		.cfi_endproc
 148              	.LFE4:
 149              		.size	UART_ReadControlRegister, .-UART_ReadControlRegister
 150              		.section	.text.UART_WriteControlRegister,"ax",%progbits
 151              		.align	2
 152              		.global	UART_WriteControlRegister
 153              		.thumb
 154              		.thumb_func
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 9


 155              		.type	UART_WriteControlRegister, %function
 156              	UART_WriteControlRegister:
 157              	.LFB5:
 303:Generated_Source\PSoC5/UART.c **** 
 304:Generated_Source\PSoC5/UART.c **** 
 305:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 306:Generated_Source\PSoC5/UART.c **** * Function Name: UART_WriteControlRegister
 307:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 308:Generated_Source\PSoC5/UART.c **** *
 309:Generated_Source\PSoC5/UART.c **** * Summary:
 310:Generated_Source\PSoC5/UART.c **** *  Writes an 8-bit value into the control register
 311:Generated_Source\PSoC5/UART.c **** *
 312:Generated_Source\PSoC5/UART.c **** * Parameters:
 313:Generated_Source\PSoC5/UART.c **** *  control:  control register value
 314:Generated_Source\PSoC5/UART.c **** *
 315:Generated_Source\PSoC5/UART.c **** * Return:
 316:Generated_Source\PSoC5/UART.c **** *  None.
 317:Generated_Source\PSoC5/UART.c **** *
 318:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 319:Generated_Source\PSoC5/UART.c **** void  UART_WriteControlRegister(uint8 control) 
 320:Generated_Source\PSoC5/UART.c **** {
 158              		.loc 1 320 0
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 0
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162              		@ link register save eliminated.
 163              	.LVL10:
 321:Generated_Source\PSoC5/UART.c ****     #if (UART_CONTROL_REG_REMOVED)
 322:Generated_Source\PSoC5/UART.c ****         if(0u != control)
 323:Generated_Source\PSoC5/UART.c ****         {
 324:Generated_Source\PSoC5/UART.c ****             /* Suppress compiler warning */
 325:Generated_Source\PSoC5/UART.c ****         }
 326:Generated_Source\PSoC5/UART.c ****     #else
 327:Generated_Source\PSoC5/UART.c ****        UART_CONTROL_REG = control;
 164              		.loc 1 327 0
 165 0000 014B     		ldr	r3, .L13
 166 0002 1870     		strb	r0, [r3]
 167 0004 7047     		bx	lr
 168              	.L14:
 169 0006 00BF     		.align	2
 170              	.L13:
 171 0008 78640040 		.word	1073767544
 172              		.cfi_endproc
 173              	.LFE5:
 174              		.size	UART_WriteControlRegister, .-UART_WriteControlRegister
 175              		.section	.text.UART_SetRxInterruptMode,"ax",%progbits
 176              		.align	2
 177              		.global	UART_SetRxInterruptMode
 178              		.thumb
 179              		.thumb_func
 180              		.type	UART_SetRxInterruptMode, %function
 181              	UART_SetRxInterruptMode:
 182              	.LFB6:
 328:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 329:Generated_Source\PSoC5/UART.c **** }
 330:Generated_Source\PSoC5/UART.c **** 
 331:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 10


 332:Generated_Source\PSoC5/UART.c **** #if(UART_RX_ENABLED || UART_HD_ENABLED)
 333:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 334:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxInterruptMode
 335:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 336:Generated_Source\PSoC5/UART.c ****     *
 337:Generated_Source\PSoC5/UART.c ****     * Summary:
 338:Generated_Source\PSoC5/UART.c ****     *  Configures the RX interrupt sources enabled.
 339:Generated_Source\PSoC5/UART.c ****     *
 340:Generated_Source\PSoC5/UART.c ****     * Parameters:
 341:Generated_Source\PSoC5/UART.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:Generated_Source\PSoC5/UART.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:Generated_Source\PSoC5/UART.c ****     *  combination of status register bit-masks shown below:
 344:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_BREAK            Interrupt on break.
 348:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_OVERRUN          Interrupt on overrun error.
 349:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_MRKSPC           Interrupt on address detect.
 351:Generated_Source\PSoC5/UART.c ****     *
 352:Generated_Source\PSoC5/UART.c ****     * Return:
 353:Generated_Source\PSoC5/UART.c ****     *  None.
 354:Generated_Source\PSoC5/UART.c ****     *
 355:Generated_Source\PSoC5/UART.c ****     * Theory:
 356:Generated_Source\PSoC5/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:Generated_Source\PSoC5/UART.c ****     *
 358:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 359:Generated_Source\PSoC5/UART.c ****     void UART_SetRxInterruptMode(uint8 intSrc) 
 360:Generated_Source\PSoC5/UART.c ****     {
 183              		.loc 1 360 0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 0
 186              		@ frame_needed = 0, uses_anonymous_args = 0
 187              		@ link register save eliminated.
 188              	.LVL11:
 361:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_MASK_REG  = intSrc;
 189              		.loc 1 361 0
 190 0000 014B     		ldr	r3, .L16
 191 0002 1870     		strb	r0, [r3]
 192 0004 7047     		bx	lr
 193              	.L17:
 194 0006 00BF     		.align	2
 195              	.L16:
 196 0008 88650040 		.word	1073767816
 197              		.cfi_endproc
 198              	.LFE6:
 199              		.size	UART_SetRxInterruptMode, .-UART_SetRxInterruptMode
 200              		.section	.text.UART_ReadRxData,"ax",%progbits
 201              		.align	2
 202              		.global	UART_ReadRxData
 203              		.thumb
 204              		.thumb_func
 205              		.type	UART_ReadRxData, %function
 206              	UART_ReadRxData:
 207              	.LFB7:
 362:Generated_Source\PSoC5/UART.c ****     }
 363:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 11


 364:Generated_Source\PSoC5/UART.c **** 
 365:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 366:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadRxData
 367:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 368:Generated_Source\PSoC5/UART.c ****     *
 369:Generated_Source\PSoC5/UART.c ****     * Summary:
 370:Generated_Source\PSoC5/UART.c ****     *  Returns the next byte of received data. This function returns data without
 371:Generated_Source\PSoC5/UART.c ****     *  checking the status. You must check the status separately.
 372:Generated_Source\PSoC5/UART.c ****     *
 373:Generated_Source\PSoC5/UART.c ****     * Parameters:
 374:Generated_Source\PSoC5/UART.c ****     *  None.
 375:Generated_Source\PSoC5/UART.c ****     *
 376:Generated_Source\PSoC5/UART.c ****     * Return:
 377:Generated_Source\PSoC5/UART.c ****     *  Received data from RX register
 378:Generated_Source\PSoC5/UART.c ****     *
 379:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 380:Generated_Source\PSoC5/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 381:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
 382:Generated_Source\PSoC5/UART.c ****     *     checked to identify new data.
 383:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
 384:Generated_Source\PSoC5/UART.c ****     *     incremented after each byte has been read from buffer.
 385:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared if loop condition was detected
 386:Generated_Source\PSoC5/UART.c ****     *     in RX ISR.
 387:Generated_Source\PSoC5/UART.c ****     *
 388:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 389:Generated_Source\PSoC5/UART.c ****     *  No.
 390:Generated_Source\PSoC5/UART.c ****     *
 391:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 392:Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadRxData(void) 
 393:Generated_Source\PSoC5/UART.c ****     {
 208              		.loc 1 393 0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212              		@ link register save eliminated.
 394:Generated_Source\PSoC5/UART.c ****         uint8 rxData;
 395:Generated_Source\PSoC5/UART.c **** 
 396:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 397:Generated_Source\PSoC5/UART.c **** 
 398:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferRead;
 399:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferWrite;
 400:Generated_Source\PSoC5/UART.c **** 
 401:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 402:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 403:Generated_Source\PSoC5/UART.c **** 
 404:Generated_Source\PSoC5/UART.c ****         locRxBufferRead  = UART_rxBufferRead;
 405:Generated_Source\PSoC5/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 406:Generated_Source\PSoC5/UART.c **** 
 407:Generated_Source\PSoC5/UART.c ****         if( (UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 408:Generated_Source\PSoC5/UART.c ****         {
 409:Generated_Source\PSoC5/UART.c ****             rxData = UART_rxBuffer[locRxBufferRead];
 410:Generated_Source\PSoC5/UART.c ****             locRxBufferRead++;
 411:Generated_Source\PSoC5/UART.c **** 
 412:Generated_Source\PSoC5/UART.c ****             if(locRxBufferRead >= UART_RX_BUFFER_SIZE)
 413:Generated_Source\PSoC5/UART.c ****             {
 414:Generated_Source\PSoC5/UART.c ****                 locRxBufferRead = 0u;
 415:Generated_Source\PSoC5/UART.c ****             }
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 12


 416:Generated_Source\PSoC5/UART.c ****             /* Update the real pointer */
 417:Generated_Source\PSoC5/UART.c ****             UART_rxBufferRead = locRxBufferRead;
 418:Generated_Source\PSoC5/UART.c **** 
 419:Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 420:Generated_Source\PSoC5/UART.c ****             {
 421:Generated_Source\PSoC5/UART.c ****                 UART_rxBufferLoopDetect = 0u;
 422:Generated_Source\PSoC5/UART.c ****                 #if ((UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u))
 423:Generated_Source\PSoC5/UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:Generated_Source\PSoC5/UART.c ****                     #if( UART_HD_ENABLED )
 425:Generated_Source\PSoC5/UART.c ****                         if((UART_CONTROL_REG & UART_CTRL_HD_SEND) == 0u)
 426:Generated_Source\PSoC5/UART.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:Generated_Source\PSoC5/UART.c ****                             *  configuration set, otherwise
 428:Generated_Source\PSoC5/UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:Generated_Source\PSoC5/UART.c ****                             */
 430:Generated_Source\PSoC5/UART.c ****                             UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
 431:Generated_Source\PSoC5/UART.c ****                         }
 432:Generated_Source\PSoC5/UART.c ****                     #else
 433:Generated_Source\PSoC5/UART.c ****                         UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
 434:Generated_Source\PSoC5/UART.c ****                     #endif /* end UART_HD_ENABLED */
 435:Generated_Source\PSoC5/UART.c ****                 #endif /* ((UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u)) */
 436:Generated_Source\PSoC5/UART.c ****             }
 437:Generated_Source\PSoC5/UART.c ****         }
 438:Generated_Source\PSoC5/UART.c ****         else
 439:Generated_Source\PSoC5/UART.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:Generated_Source\PSoC5/UART.c ****             rxData = UART_RXDATA_REG;
 441:Generated_Source\PSoC5/UART.c ****         }
 442:Generated_Source\PSoC5/UART.c **** 
 443:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 444:Generated_Source\PSoC5/UART.c **** 
 445:Generated_Source\PSoC5/UART.c ****     #else
 446:Generated_Source\PSoC5/UART.c **** 
 447:Generated_Source\PSoC5/UART.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:Generated_Source\PSoC5/UART.c ****         rxData = UART_RXDATA_REG;
 213              		.loc 1 448 0
 214 0000 014B     		ldr	r3, .L19
 215 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 216              	.LVL12:
 449:Generated_Source\PSoC5/UART.c **** 
 450:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 451:Generated_Source\PSoC5/UART.c **** 
 452:Generated_Source\PSoC5/UART.c ****         return(rxData);
 453:Generated_Source\PSoC5/UART.c ****     }
 217              		.loc 1 453 0
 218 0004 7047     		bx	lr
 219              	.L20:
 220 0006 00BF     		.align	2
 221              	.L19:
 222 0008 48640040 		.word	1073767496
 223              		.cfi_endproc
 224              	.LFE7:
 225              		.size	UART_ReadRxData, .-UART_ReadRxData
 226              		.section	.text.UART_ReadRxStatus,"ax",%progbits
 227              		.align	2
 228              		.global	UART_ReadRxStatus
 229              		.thumb
 230              		.thumb_func
 231              		.type	UART_ReadRxStatus, %function
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 13


 232              	UART_ReadRxStatus:
 233              	.LFB8:
 454:Generated_Source\PSoC5/UART.c **** 
 455:Generated_Source\PSoC5/UART.c **** 
 456:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 457:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadRxStatus
 458:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 459:Generated_Source\PSoC5/UART.c ****     *
 460:Generated_Source\PSoC5/UART.c ****     * Summary:
 461:Generated_Source\PSoC5/UART.c ****     *  Returns the current state of the receiver status register and the software
 462:Generated_Source\PSoC5/UART.c ****     *  buffer overflow status.
 463:Generated_Source\PSoC5/UART.c ****     *
 464:Generated_Source\PSoC5/UART.c ****     * Parameters:
 465:Generated_Source\PSoC5/UART.c ****     *  None.
 466:Generated_Source\PSoC5/UART.c ****     *
 467:Generated_Source\PSoC5/UART.c ****     * Return:
 468:Generated_Source\PSoC5/UART.c ****     *  Current state of the status register.
 469:Generated_Source\PSoC5/UART.c ****     *
 470:Generated_Source\PSoC5/UART.c ****     * Side Effect:
 471:Generated_Source\PSoC5/UART.c ****     *  All status register bits are clear-on-read except
 472:Generated_Source\PSoC5/UART.c ****     *  UART_RX_STS_FIFO_NOTEMPTY.
 473:Generated_Source\PSoC5/UART.c ****     *  UART_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:Generated_Source\PSoC5/UART.c ****     *  register read.
 475:Generated_Source\PSoC5/UART.c ****     *
 476:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 477:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferOverflow - used to indicate overload condition.
 478:Generated_Source\PSoC5/UART.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:Generated_Source\PSoC5/UART.c ****     *   UART_rxBufferRead to write new data. This condition returned
 480:Generated_Source\PSoC5/UART.c ****     *   and cleared to zero by this API as an
 481:Generated_Source\PSoC5/UART.c ****     *   UART_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:Generated_Source\PSoC5/UART.c ****     *   bits.
 483:Generated_Source\PSoC5/UART.c ****     *
 484:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 485:Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadRxStatus(void) 
 486:Generated_Source\PSoC5/UART.c ****     {
 234              		.loc 1 486 0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238              		@ link register save eliminated.
 487:Generated_Source\PSoC5/UART.c ****         uint8 status;
 488:Generated_Source\PSoC5/UART.c **** 
 489:Generated_Source\PSoC5/UART.c ****         status = UART_RXSTATUS_REG & UART_RX_HW_MASK;
 239              		.loc 1 489 0
 240 0000 024B     		ldr	r3, .L22
 241 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 242              	.LVL13:
 490:Generated_Source\PSoC5/UART.c **** 
 491:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 492:Generated_Source\PSoC5/UART.c ****         if(UART_rxBufferOverflow != 0u)
 493:Generated_Source\PSoC5/UART.c ****         {
 494:Generated_Source\PSoC5/UART.c ****             status |= UART_RX_STS_SOFT_BUFF_OVER;
 495:Generated_Source\PSoC5/UART.c ****             UART_rxBufferOverflow = 0u;
 496:Generated_Source\PSoC5/UART.c ****         }
 497:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 498:Generated_Source\PSoC5/UART.c **** 
 499:Generated_Source\PSoC5/UART.c ****         return(status);
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 14


 500:Generated_Source\PSoC5/UART.c ****     }
 243              		.loc 1 500 0
 244 0004 00F07F00 		and	r0, r0, #127
 245              	.LVL14:
 246 0008 7047     		bx	lr
 247              	.L23:
 248 000a 00BF     		.align	2
 249              	.L22:
 250 000c 68650040 		.word	1073767784
 251              		.cfi_endproc
 252              	.LFE8:
 253              		.size	UART_ReadRxStatus, .-UART_ReadRxStatus
 254              		.section	.text.UART_GetChar,"ax",%progbits
 255              		.align	2
 256              		.global	UART_GetChar
 257              		.thumb
 258              		.thumb_func
 259              		.type	UART_GetChar, %function
 260              	UART_GetChar:
 261              	.LFB9:
 501:Generated_Source\PSoC5/UART.c **** 
 502:Generated_Source\PSoC5/UART.c **** 
 503:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 504:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetChar
 505:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 506:Generated_Source\PSoC5/UART.c ****     *
 507:Generated_Source\PSoC5/UART.c ****     * Summary:
 508:Generated_Source\PSoC5/UART.c ****     *  Returns the last received byte of data. UART_GetChar() is
 509:Generated_Source\PSoC5/UART.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:Generated_Source\PSoC5/UART.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:Generated_Source\PSoC5/UART.c ****     *
 512:Generated_Source\PSoC5/UART.c ****     * Parameters:
 513:Generated_Source\PSoC5/UART.c ****     *  None.
 514:Generated_Source\PSoC5/UART.c ****     *
 515:Generated_Source\PSoC5/UART.c ****     * Return:
 516:Generated_Source\PSoC5/UART.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:Generated_Source\PSoC5/UART.c ****     *  A returned zero signifies an error condition or no data available.
 518:Generated_Source\PSoC5/UART.c ****     *
 519:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 520:Generated_Source\PSoC5/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 521:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
 522:Generated_Source\PSoC5/UART.c ****     *     checked to identify new data.
 523:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
 524:Generated_Source\PSoC5/UART.c ****     *     incremented after each byte has been read from buffer.
 525:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared if loop condition was detected
 526:Generated_Source\PSoC5/UART.c ****     *     in RX ISR.
 527:Generated_Source\PSoC5/UART.c ****     *
 528:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 529:Generated_Source\PSoC5/UART.c ****     *  No.
 530:Generated_Source\PSoC5/UART.c ****     *
 531:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 532:Generated_Source\PSoC5/UART.c ****     uint8 UART_GetChar(void) 
 533:Generated_Source\PSoC5/UART.c ****     {
 262              		.loc 1 533 0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 15


 266              		@ link register save eliminated.
 267              	.LVL15:
 534:Generated_Source\PSoC5/UART.c ****         uint8 rxData = 0u;
 535:Generated_Source\PSoC5/UART.c ****         uint8 rxStatus;
 536:Generated_Source\PSoC5/UART.c **** 
 537:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 538:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferRead;
 539:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferWrite;
 540:Generated_Source\PSoC5/UART.c **** 
 541:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 542:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 543:Generated_Source\PSoC5/UART.c **** 
 544:Generated_Source\PSoC5/UART.c ****         locRxBufferRead  = UART_rxBufferRead;
 545:Generated_Source\PSoC5/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 546:Generated_Source\PSoC5/UART.c **** 
 547:Generated_Source\PSoC5/UART.c ****         if( (UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 548:Generated_Source\PSoC5/UART.c ****         {
 549:Generated_Source\PSoC5/UART.c ****             rxData = UART_rxBuffer[locRxBufferRead];
 550:Generated_Source\PSoC5/UART.c ****             locRxBufferRead++;
 551:Generated_Source\PSoC5/UART.c ****             if(locRxBufferRead >= UART_RX_BUFFER_SIZE)
 552:Generated_Source\PSoC5/UART.c ****             {
 553:Generated_Source\PSoC5/UART.c ****                 locRxBufferRead = 0u;
 554:Generated_Source\PSoC5/UART.c ****             }
 555:Generated_Source\PSoC5/UART.c ****             /* Update the real pointer */
 556:Generated_Source\PSoC5/UART.c ****             UART_rxBufferRead = locRxBufferRead;
 557:Generated_Source\PSoC5/UART.c **** 
 558:Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 559:Generated_Source\PSoC5/UART.c ****             {
 560:Generated_Source\PSoC5/UART.c ****                 UART_rxBufferLoopDetect = 0u;
 561:Generated_Source\PSoC5/UART.c ****                 #if( (UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u) )
 562:Generated_Source\PSoC5/UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:Generated_Source\PSoC5/UART.c ****                     #if( UART_HD_ENABLED )
 564:Generated_Source\PSoC5/UART.c ****                         if((UART_CONTROL_REG & UART_CTRL_HD_SEND) == 0u)
 565:Generated_Source\PSoC5/UART.c ****                         {   /* In Half duplex mode return RX mask only if
 566:Generated_Source\PSoC5/UART.c ****                             *  RX configuration set, otherwise
 567:Generated_Source\PSoC5/UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:Generated_Source\PSoC5/UART.c ****                             */
 569:Generated_Source\PSoC5/UART.c ****                             UART_RXSTATUS_MASK_REG |= UART_RX_STS_FIFO_NOTEMPTY;
 570:Generated_Source\PSoC5/UART.c ****                         }
 571:Generated_Source\PSoC5/UART.c ****                     #else
 572:Generated_Source\PSoC5/UART.c ****                         UART_RXSTATUS_MASK_REG |= UART_RX_STS_FIFO_NOTEMPTY;
 573:Generated_Source\PSoC5/UART.c ****                     #endif /* end UART_HD_ENABLED */
 574:Generated_Source\PSoC5/UART.c ****                 #endif /* UART_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:Generated_Source\PSoC5/UART.c ****             }
 576:Generated_Source\PSoC5/UART.c **** 
 577:Generated_Source\PSoC5/UART.c ****         }
 578:Generated_Source\PSoC5/UART.c ****         else
 579:Generated_Source\PSoC5/UART.c ****         {   rxStatus = UART_RXSTATUS_REG;
 580:Generated_Source\PSoC5/UART.c ****             if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 581:Generated_Source\PSoC5/UART.c ****             {   /* Read received data from FIFO */
 582:Generated_Source\PSoC5/UART.c ****                 rxData = UART_RXDATA_REG;
 583:Generated_Source\PSoC5/UART.c ****                 /*Check status on error*/
 584:Generated_Source\PSoC5/UART.c ****                 if((rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
 585:Generated_Source\PSoC5/UART.c ****                                 UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 586:Generated_Source\PSoC5/UART.c ****                 {
 587:Generated_Source\PSoC5/UART.c ****                     rxData = 0u;
 588:Generated_Source\PSoC5/UART.c ****                 }
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 16


 589:Generated_Source\PSoC5/UART.c ****             }
 590:Generated_Source\PSoC5/UART.c ****         }
 591:Generated_Source\PSoC5/UART.c **** 
 592:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 593:Generated_Source\PSoC5/UART.c **** 
 594:Generated_Source\PSoC5/UART.c ****     #else
 595:Generated_Source\PSoC5/UART.c **** 
 596:Generated_Source\PSoC5/UART.c ****         rxStatus =UART_RXSTATUS_REG;
 268              		.loc 1 596 0
 269 0000 084B     		ldr	r3, .L28
 270 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 271 0004 DBB2     		uxtb	r3, r3
 272              	.LVL16:
 597:Generated_Source\PSoC5/UART.c ****         if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 273              		.loc 1 597 0
 274 0006 13F0200F 		tst	r3, #32
 275 000a 06D0     		beq	.L26
 598:Generated_Source\PSoC5/UART.c ****         {
 599:Generated_Source\PSoC5/UART.c ****             /* Read received data from FIFO */
 600:Generated_Source\PSoC5/UART.c ****             rxData = UART_RXDATA_REG;
 276              		.loc 1 600 0
 277 000c 064A     		ldr	r2, .L28+4
 278 000e 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 279 0010 C0B2     		uxtb	r0, r0
 280              	.LVL17:
 601:Generated_Source\PSoC5/UART.c **** 
 602:Generated_Source\PSoC5/UART.c ****             /*Check status on error*/
 603:Generated_Source\PSoC5/UART.c ****             if((rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
 281              		.loc 1 603 0
 282 0012 13F01E0F 		tst	r3, #30
 283 0016 02D1     		bne	.L27
 284 0018 7047     		bx	lr
 285              	.LVL18:
 286              	.L26:
 534:Generated_Source\PSoC5/UART.c ****         uint8 rxStatus;
 287              		.loc 1 534 0
 288 001a 0020     		movs	r0, #0
 289 001c 7047     		bx	lr
 290              	.LVL19:
 291              	.L27:
 604:Generated_Source\PSoC5/UART.c ****                             UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 605:Generated_Source\PSoC5/UART.c ****             {
 606:Generated_Source\PSoC5/UART.c ****                 rxData = 0u;
 292              		.loc 1 606 0
 293 001e 0020     		movs	r0, #0
 294              	.LVL20:
 607:Generated_Source\PSoC5/UART.c ****             }
 608:Generated_Source\PSoC5/UART.c ****         }
 609:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 610:Generated_Source\PSoC5/UART.c **** 
 611:Generated_Source\PSoC5/UART.c ****         return(rxData);
 612:Generated_Source\PSoC5/UART.c ****     }
 295              		.loc 1 612 0
 296 0020 7047     		bx	lr
 297              	.L29:
 298 0022 00BF     		.align	2
 299              	.L28:
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 17


 300 0024 68650040 		.word	1073767784
 301 0028 48640040 		.word	1073767496
 302              		.cfi_endproc
 303              	.LFE9:
 304              		.size	UART_GetChar, .-UART_GetChar
 305              		.section	.text.UART_GetByte,"ax",%progbits
 306              		.align	2
 307              		.global	UART_GetByte
 308              		.thumb
 309              		.thumb_func
 310              		.type	UART_GetByte, %function
 311              	UART_GetByte:
 312              	.LFB10:
 613:Generated_Source\PSoC5/UART.c **** 
 614:Generated_Source\PSoC5/UART.c **** 
 615:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 616:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetByte
 617:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 618:Generated_Source\PSoC5/UART.c ****     *
 619:Generated_Source\PSoC5/UART.c ****     * Summary:
 620:Generated_Source\PSoC5/UART.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:Generated_Source\PSoC5/UART.c ****     *  condition.
 622:Generated_Source\PSoC5/UART.c ****     *
 623:Generated_Source\PSoC5/UART.c ****     * Parameters:
 624:Generated_Source\PSoC5/UART.c ****     *  None.
 625:Generated_Source\PSoC5/UART.c ****     *
 626:Generated_Source\PSoC5/UART.c ****     * Return:
 627:Generated_Source\PSoC5/UART.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:Generated_Source\PSoC5/UART.c ****     *  an error has occurred.
 629:Generated_Source\PSoC5/UART.c ****     *
 630:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 631:Generated_Source\PSoC5/UART.c ****     *  No.
 632:Generated_Source\PSoC5/UART.c ****     *
 633:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 634:Generated_Source\PSoC5/UART.c ****     uint16 UART_GetByte(void) 
 635:Generated_Source\PSoC5/UART.c ****     {
 313              		.loc 1 635 0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317 0000 10B5     		push	{r4, lr}
 318              		.cfi_def_cfa_offset 8
 319              		.cfi_offset 4, -8
 320              		.cfi_offset 14, -4
 636:Generated_Source\PSoC5/UART.c ****         
 637:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 638:Generated_Source\PSoC5/UART.c ****         uint16 locErrorStatus;
 639:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 640:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 641:Generated_Source\PSoC5/UART.c ****         locErrorStatus = (uint16)UART_errorStatus;
 642:Generated_Source\PSoC5/UART.c ****         UART_errorStatus = 0u;
 643:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 644:Generated_Source\PSoC5/UART.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_ReadRxData() );
 645:Generated_Source\PSoC5/UART.c ****     #else
 646:Generated_Source\PSoC5/UART.c ****         return ( ((uint16)UART_ReadRxStatus() << 8u) | UART_ReadRxData() );
 321              		.loc 1 646 0
 322 0002 FFF7FEFF 		bl	UART_ReadRxStatus
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 18


 323              	.LVL21:
 324 0006 0402     		lsls	r4, r0, #8
 325 0008 FFF7FEFF 		bl	UART_ReadRxData
 326              	.LVL22:
 327 000c 2043     		orrs	r0, r0, r4
 647:Generated_Source\PSoC5/UART.c ****     #endif /* UART_RX_INTERRUPT_ENABLED */
 648:Generated_Source\PSoC5/UART.c ****         
 649:Generated_Source\PSoC5/UART.c ****     }
 328              		.loc 1 649 0
 329 000e 80B2     		uxth	r0, r0
 330 0010 10BD     		pop	{r4, pc}
 331              		.cfi_endproc
 332              	.LFE10:
 333              		.size	UART_GetByte, .-UART_GetByte
 334 0012 00BF     		.section	.text.UART_GetRxBufferSize,"ax",%progbits
 335              		.align	2
 336              		.global	UART_GetRxBufferSize
 337              		.thumb
 338              		.thumb_func
 339              		.type	UART_GetRxBufferSize, %function
 340              	UART_GetRxBufferSize:
 341              	.LFB11:
 650:Generated_Source\PSoC5/UART.c **** 
 651:Generated_Source\PSoC5/UART.c **** 
 652:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 653:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetRxBufferSize
 654:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 655:Generated_Source\PSoC5/UART.c ****     *
 656:Generated_Source\PSoC5/UART.c ****     * Summary:
 657:Generated_Source\PSoC5/UART.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:Generated_Source\PSoC5/UART.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:Generated_Source\PSoC5/UART.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:Generated_Source\PSoC5/UART.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:Generated_Source\PSoC5/UART.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:Generated_Source\PSoC5/UART.c ****     *    account.
 663:Generated_Source\PSoC5/UART.c ****     *
 664:Generated_Source\PSoC5/UART.c ****     * Parameters:
 665:Generated_Source\PSoC5/UART.c ****     *  None.
 666:Generated_Source\PSoC5/UART.c ****     *
 667:Generated_Source\PSoC5/UART.c ****     * Return:
 668:Generated_Source\PSoC5/UART.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:Generated_Source\PSoC5/UART.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:Generated_Source\PSoC5/UART.c ****     *
 671:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 672:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - used to calculate left bytes.
 673:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - used to calculate left bytes.
 674:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - checked to decide left bytes amount.
 675:Generated_Source\PSoC5/UART.c ****     *
 676:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 677:Generated_Source\PSoC5/UART.c ****     *  No.
 678:Generated_Source\PSoC5/UART.c ****     *
 679:Generated_Source\PSoC5/UART.c ****     * Theory:
 680:Generated_Source\PSoC5/UART.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:Generated_Source\PSoC5/UART.c ****     *
 682:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 683:Generated_Source\PSoC5/UART.c ****     uint8 UART_GetRxBufferSize(void)
 684:Generated_Source\PSoC5/UART.c ****                                                             
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 19


 685:Generated_Source\PSoC5/UART.c ****     {
 342              		.loc 1 685 0
 343              		.cfi_startproc
 344              		@ args = 0, pretend = 0, frame = 0
 345              		@ frame_needed = 0, uses_anonymous_args = 0
 346              		@ link register save eliminated.
 686:Generated_Source\PSoC5/UART.c ****         uint8 size;
 687:Generated_Source\PSoC5/UART.c **** 
 688:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 689:Generated_Source\PSoC5/UART.c **** 
 690:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 691:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 692:Generated_Source\PSoC5/UART.c **** 
 693:Generated_Source\PSoC5/UART.c ****         if(UART_rxBufferRead == UART_rxBufferWrite)
 694:Generated_Source\PSoC5/UART.c ****         {
 695:Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 696:Generated_Source\PSoC5/UART.c ****             {
 697:Generated_Source\PSoC5/UART.c ****                 size = UART_RX_BUFFER_SIZE;
 698:Generated_Source\PSoC5/UART.c ****             }
 699:Generated_Source\PSoC5/UART.c ****             else
 700:Generated_Source\PSoC5/UART.c ****             {
 701:Generated_Source\PSoC5/UART.c ****                 size = 0u;
 702:Generated_Source\PSoC5/UART.c ****             }
 703:Generated_Source\PSoC5/UART.c ****         }
 704:Generated_Source\PSoC5/UART.c ****         else if(UART_rxBufferRead < UART_rxBufferWrite)
 705:Generated_Source\PSoC5/UART.c ****         {
 706:Generated_Source\PSoC5/UART.c ****             size = (UART_rxBufferWrite - UART_rxBufferRead);
 707:Generated_Source\PSoC5/UART.c ****         }
 708:Generated_Source\PSoC5/UART.c ****         else
 709:Generated_Source\PSoC5/UART.c ****         {
 710:Generated_Source\PSoC5/UART.c ****             size = (UART_RX_BUFFER_SIZE - UART_rxBufferRead) + UART_rxBufferWrite;
 711:Generated_Source\PSoC5/UART.c ****         }
 712:Generated_Source\PSoC5/UART.c **** 
 713:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 714:Generated_Source\PSoC5/UART.c **** 
 715:Generated_Source\PSoC5/UART.c ****     #else
 716:Generated_Source\PSoC5/UART.c **** 
 717:Generated_Source\PSoC5/UART.c ****         /* We can only know if there is data in the fifo. */
 718:Generated_Source\PSoC5/UART.c ****         size = ((UART_RXSTATUS_REG & UART_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 347              		.loc 1 718 0
 348 0000 044B     		ldr	r3, .L35
 349 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 350 0004 13F0200F 		tst	r3, #32
 351 0008 01D0     		beq	.L34
 352 000a 0120     		movs	r0, #1
 353 000c 7047     		bx	lr
 354              	.L34:
 355 000e 0020     		movs	r0, #0
 356              	.LVL23:
 719:Generated_Source\PSoC5/UART.c **** 
 720:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 721:Generated_Source\PSoC5/UART.c **** 
 722:Generated_Source\PSoC5/UART.c ****         return(size);
 723:Generated_Source\PSoC5/UART.c ****     }
 357              		.loc 1 723 0
 358 0010 7047     		bx	lr
 359              	.L36:
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 20


 360 0012 00BF     		.align	2
 361              	.L35:
 362 0014 68650040 		.word	1073767784
 363              		.cfi_endproc
 364              	.LFE11:
 365              		.size	UART_GetRxBufferSize, .-UART_GetRxBufferSize
 366              		.section	.text.UART_ClearRxBuffer,"ax",%progbits
 367              		.align	2
 368              		.global	UART_ClearRxBuffer
 369              		.thumb
 370              		.thumb_func
 371              		.type	UART_ClearRxBuffer, %function
 372              	UART_ClearRxBuffer:
 373              	.LFB12:
 724:Generated_Source\PSoC5/UART.c **** 
 725:Generated_Source\PSoC5/UART.c **** 
 726:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 727:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ClearRxBuffer
 728:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 729:Generated_Source\PSoC5/UART.c ****     *
 730:Generated_Source\PSoC5/UART.c ****     * Summary:
 731:Generated_Source\PSoC5/UART.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:Generated_Source\PSoC5/UART.c ****     *
 733:Generated_Source\PSoC5/UART.c ****     * Parameters:
 734:Generated_Source\PSoC5/UART.c ****     *  None.
 735:Generated_Source\PSoC5/UART.c ****     *
 736:Generated_Source\PSoC5/UART.c ****     * Return:
 737:Generated_Source\PSoC5/UART.c ****     *  None.
 738:Generated_Source\PSoC5/UART.c ****     *
 739:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 740:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cleared to zero.
 741:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cleared to zero.
 742:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared to zero.
 743:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferOverflow - cleared to zero.
 744:Generated_Source\PSoC5/UART.c ****     *
 745:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 746:Generated_Source\PSoC5/UART.c ****     *  No.
 747:Generated_Source\PSoC5/UART.c ****     *
 748:Generated_Source\PSoC5/UART.c ****     * Theory:
 749:Generated_Source\PSoC5/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:Generated_Source\PSoC5/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:Generated_Source\PSoC5/UART.c ****     *  have remained in the RAM.
 752:Generated_Source\PSoC5/UART.c ****     *
 753:Generated_Source\PSoC5/UART.c ****     * Side Effects:
 754:Generated_Source\PSoC5/UART.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:Generated_Source\PSoC5/UART.c ****     *
 756:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 757:Generated_Source\PSoC5/UART.c ****     void UART_ClearRxBuffer(void) 
 758:Generated_Source\PSoC5/UART.c ****     {
 374              		.loc 1 758 0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 378 0000 08B5     		push	{r3, lr}
 379              		.cfi_def_cfa_offset 8
 380              		.cfi_offset 3, -8
 381              		.cfi_offset 14, -4
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 21


 759:Generated_Source\PSoC5/UART.c ****         uint8 enableInterrupts;
 760:Generated_Source\PSoC5/UART.c **** 
 761:Generated_Source\PSoC5/UART.c ****         /* Clear the HW FIFO */
 762:Generated_Source\PSoC5/UART.c ****         enableInterrupts = CyEnterCriticalSection();
 382              		.loc 1 762 0
 383 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 384              	.LVL24:
 763:Generated_Source\PSoC5/UART.c ****         UART_RXDATA_AUX_CTL_REG |= (uint8)  UART_RX_FIFO_CLR;
 385              		.loc 1 763 0
 386 0006 064B     		ldr	r3, .L39
 387 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 388 000a 42F00102 		orr	r2, r2, #1
 389 000e 1A70     		strb	r2, [r3]
 764:Generated_Source\PSoC5/UART.c ****         UART_RXDATA_AUX_CTL_REG &= (uint8) ~UART_RX_FIFO_CLR;
 390              		.loc 1 764 0
 391 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 392 0012 02F0FE02 		and	r2, r2, #254
 393 0016 1A70     		strb	r2, [r3]
 765:Generated_Source\PSoC5/UART.c ****         CyExitCriticalSection(enableInterrupts);
 394              		.loc 1 765 0
 395 0018 FFF7FEFF 		bl	CyExitCriticalSection
 396              	.LVL25:
 397 001c 08BD     		pop	{r3, pc}
 398              	.L40:
 399 001e 00BF     		.align	2
 400              	.L39:
 401 0020 98640040 		.word	1073767576
 402              		.cfi_endproc
 403              	.LFE12:
 404              		.size	UART_ClearRxBuffer, .-UART_ClearRxBuffer
 405              		.section	.text.UART_SetRxAddressMode,"ax",%progbits
 406              		.align	2
 407              		.global	UART_SetRxAddressMode
 408              		.thumb
 409              		.thumb_func
 410              		.type	UART_SetRxAddressMode, %function
 411              	UART_SetRxAddressMode:
 412              	.LFB13:
 766:Generated_Source\PSoC5/UART.c **** 
 767:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 768:Generated_Source\PSoC5/UART.c **** 
 769:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
 770:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 771:Generated_Source\PSoC5/UART.c **** 
 772:Generated_Source\PSoC5/UART.c ****         UART_rxBufferRead = 0u;
 773:Generated_Source\PSoC5/UART.c ****         UART_rxBufferWrite = 0u;
 774:Generated_Source\PSoC5/UART.c ****         UART_rxBufferLoopDetect = 0u;
 775:Generated_Source\PSoC5/UART.c ****         UART_rxBufferOverflow = 0u;
 776:Generated_Source\PSoC5/UART.c **** 
 777:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 778:Generated_Source\PSoC5/UART.c **** 
 779:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 780:Generated_Source\PSoC5/UART.c **** 
 781:Generated_Source\PSoC5/UART.c ****     }
 782:Generated_Source\PSoC5/UART.c **** 
 783:Generated_Source\PSoC5/UART.c **** 
 784:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 22


 785:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddressMode
 786:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 787:Generated_Source\PSoC5/UART.c ****     *
 788:Generated_Source\PSoC5/UART.c ****     * Summary:
 789:Generated_Source\PSoC5/UART.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:Generated_Source\PSoC5/UART.c ****     *  UART.
 791:Generated_Source\PSoC5/UART.c ****     *
 792:Generated_Source\PSoC5/UART.c ****     * Parameters:
 793:Generated_Source\PSoC5/UART.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:Generated_Source\PSoC5/UART.c ****     *                                               detection
 796:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:Generated_Source\PSoC5/UART.c ****     *                                               address detection
 798:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:Generated_Source\PSoC5/UART.c ****     *                                               detection
 800:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:Generated_Source\PSoC5/UART.c ****     *                                               address detection
 802:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_NONE - No address detection
 803:Generated_Source\PSoC5/UART.c ****     *
 804:Generated_Source\PSoC5/UART.c ****     * Return:
 805:Generated_Source\PSoC5/UART.c ****     *  None.
 806:Generated_Source\PSoC5/UART.c ****     *
 807:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 808:Generated_Source\PSoC5/UART.c ****     *  UART_rxAddressMode - the parameter stored in this variable for
 809:Generated_Source\PSoC5/UART.c ****     *   the farther usage in RX ISR.
 810:Generated_Source\PSoC5/UART.c ****     *  UART_rxAddressDetected - set to initial state (0).
 811:Generated_Source\PSoC5/UART.c ****     *
 812:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 813:Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddressMode(uint8 addressMode)
 814:Generated_Source\PSoC5/UART.c ****                                                         
 815:Generated_Source\PSoC5/UART.c ****     {
 413              		.loc 1 815 0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 0
 416              		@ frame_needed = 0, uses_anonymous_args = 0
 417              		@ link register save eliminated.
 418              	.LVL26:
 816:Generated_Source\PSoC5/UART.c ****         #if(UART_RXHW_ADDRESS_ENABLED)
 817:Generated_Source\PSoC5/UART.c ****             #if(UART_CONTROL_REG_REMOVED)
 818:Generated_Source\PSoC5/UART.c ****                 if(0u != addressMode)
 819:Generated_Source\PSoC5/UART.c ****                 {
 820:Generated_Source\PSoC5/UART.c ****                     /* Suppress compiler warning */
 821:Generated_Source\PSoC5/UART.c ****                 }
 822:Generated_Source\PSoC5/UART.c ****             #else /* UART_CONTROL_REG_REMOVED */
 823:Generated_Source\PSoC5/UART.c ****                 uint8 tmpCtrl;
 824:Generated_Source\PSoC5/UART.c ****                 tmpCtrl = UART_CONTROL_REG & (uint8)~UART_CTRL_RXADDR_MODE_MASK;
 419              		.loc 1 824 0
 420 0000 044A     		ldr	r2, .L42
 421 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 422 0004 03F01F03 		and	r3, r3, #31
 423              	.LVL27:
 825:Generated_Source\PSoC5/UART.c ****                 tmpCtrl |= (uint8)(addressMode << UART_CTRL_RXADDR_MODE0_SHIFT);
 424              		.loc 1 825 0
 425 0008 4001     		lsls	r0, r0, #5
 426              	.LVL28:
 427 000a C0B2     		uxtb	r0, r0
 428 000c 1843     		orrs	r0, r0, r3
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 23


 429              	.LVL29:
 826:Generated_Source\PSoC5/UART.c ****                 UART_CONTROL_REG = tmpCtrl;
 430              		.loc 1 826 0
 431 000e 1070     		strb	r0, [r2]
 432 0010 7047     		bx	lr
 433              	.L43:
 434 0012 00BF     		.align	2
 435              	.L42:
 436 0014 78640040 		.word	1073767544
 437              		.cfi_endproc
 438              	.LFE13:
 439              		.size	UART_SetRxAddressMode, .-UART_SetRxAddressMode
 440              		.section	.text.UART_SetRxAddress1,"ax",%progbits
 441              		.align	2
 442              		.global	UART_SetRxAddress1
 443              		.thumb
 444              		.thumb_func
 445              		.type	UART_SetRxAddress1, %function
 446              	UART_SetRxAddress1:
 447              	.LFB14:
 827:Generated_Source\PSoC5/UART.c **** 
 828:Generated_Source\PSoC5/UART.c ****                 #if(UART_RX_INTERRUPT_ENABLED && \
 829:Generated_Source\PSoC5/UART.c ****                    (UART_RXBUFFERSIZE > UART_FIFO_LENGTH) )
 830:Generated_Source\PSoC5/UART.c ****                     UART_rxAddressMode = addressMode;
 831:Generated_Source\PSoC5/UART.c ****                     UART_rxAddressDetected = 0u;
 832:Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_RXBUFFERSIZE > UART_FIFO_LENGTH*/
 833:Generated_Source\PSoC5/UART.c ****             #endif /* End UART_CONTROL_REG_REMOVED */
 834:Generated_Source\PSoC5/UART.c ****         #else /* UART_RXHW_ADDRESS_ENABLED */
 835:Generated_Source\PSoC5/UART.c ****             if(0u != addressMode)
 836:Generated_Source\PSoC5/UART.c ****             {
 837:Generated_Source\PSoC5/UART.c ****                 /* Suppress compiler warning */
 838:Generated_Source\PSoC5/UART.c ****             }
 839:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 840:Generated_Source\PSoC5/UART.c ****     }
 841:Generated_Source\PSoC5/UART.c **** 
 842:Generated_Source\PSoC5/UART.c **** 
 843:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 844:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddress1
 845:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 846:Generated_Source\PSoC5/UART.c ****     *
 847:Generated_Source\PSoC5/UART.c ****     * Summary:
 848:Generated_Source\PSoC5/UART.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:Generated_Source\PSoC5/UART.c ****     *
 850:Generated_Source\PSoC5/UART.c ****     * Parameters:
 851:Generated_Source\PSoC5/UART.c ****     *  address: Address #1 for hardware address detection.
 852:Generated_Source\PSoC5/UART.c ****     *
 853:Generated_Source\PSoC5/UART.c ****     * Return:
 854:Generated_Source\PSoC5/UART.c ****     *  None.
 855:Generated_Source\PSoC5/UART.c ****     *
 856:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 857:Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddress1(uint8 address) 
 858:Generated_Source\PSoC5/UART.c ****     {
 448              		.loc 1 858 0
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 0
 451              		@ frame_needed = 0, uses_anonymous_args = 0
 452              		@ link register save eliminated.
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 24


 453              	.LVL30:
 859:Generated_Source\PSoC5/UART.c ****         UART_RXADDRESS1_REG = address;
 454              		.loc 1 859 0
 455 0000 014B     		ldr	r3, .L45
 456 0002 1870     		strb	r0, [r3]
 457 0004 7047     		bx	lr
 458              	.L46:
 459 0006 00BF     		.align	2
 460              	.L45:
 461 0008 28640040 		.word	1073767464
 462              		.cfi_endproc
 463              	.LFE14:
 464              		.size	UART_SetRxAddress1, .-UART_SetRxAddress1
 465              		.section	.text.UART_SetRxAddress2,"ax",%progbits
 466              		.align	2
 467              		.global	UART_SetRxAddress2
 468              		.thumb
 469              		.thumb_func
 470              		.type	UART_SetRxAddress2, %function
 471              	UART_SetRxAddress2:
 472              	.LFB15:
 860:Generated_Source\PSoC5/UART.c ****     }
 861:Generated_Source\PSoC5/UART.c **** 
 862:Generated_Source\PSoC5/UART.c **** 
 863:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 864:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddress2
 865:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 866:Generated_Source\PSoC5/UART.c ****     *
 867:Generated_Source\PSoC5/UART.c ****     * Summary:
 868:Generated_Source\PSoC5/UART.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:Generated_Source\PSoC5/UART.c ****     *
 870:Generated_Source\PSoC5/UART.c ****     * Parameters:
 871:Generated_Source\PSoC5/UART.c ****     *  address: Address #2 for hardware address detection.
 872:Generated_Source\PSoC5/UART.c ****     *
 873:Generated_Source\PSoC5/UART.c ****     * Return:
 874:Generated_Source\PSoC5/UART.c ****     *  None.
 875:Generated_Source\PSoC5/UART.c ****     *
 876:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 877:Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddress2(uint8 address) 
 878:Generated_Source\PSoC5/UART.c ****     {
 473              		.loc 1 878 0
 474              		.cfi_startproc
 475              		@ args = 0, pretend = 0, frame = 0
 476              		@ frame_needed = 0, uses_anonymous_args = 0
 477              		@ link register save eliminated.
 478              	.LVL31:
 879:Generated_Source\PSoC5/UART.c ****         UART_RXADDRESS2_REG = address;
 479              		.loc 1 879 0
 480 0000 014B     		ldr	r3, .L48
 481 0002 1870     		strb	r0, [r3]
 482 0004 7047     		bx	lr
 483              	.L49:
 484 0006 00BF     		.align	2
 485              	.L48:
 486 0008 38640040 		.word	1073767480
 487              		.cfi_endproc
 488              	.LFE15:
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 25


 489              		.size	UART_SetRxAddress2, .-UART_SetRxAddress2
 490              		.section	.text.UART_Init,"ax",%progbits
 491              		.align	2
 492              		.global	UART_Init
 493              		.thumb
 494              		.thumb_func
 495              		.type	UART_Init, %function
 496              	UART_Init:
 497              	.LFB1:
 107:Generated_Source\PSoC5/UART.c ****     #if(UART_RX_ENABLED || UART_HD_ENABLED)
 498              		.loc 1 107 0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 0
 501              		@ frame_needed = 0, uses_anonymous_args = 0
 502 0000 08B5     		push	{r3, lr}
 503              		.cfi_def_cfa_offset 8
 504              		.cfi_offset 3, -8
 505              		.cfi_offset 14, -4
 118:Generated_Source\PSoC5/UART.c ****             UART_SetRxAddress1(UART_RX_HW_ADDRESS1);
 506              		.loc 1 118 0
 507 0002 0320     		movs	r0, #3
 508 0004 FFF7FEFF 		bl	UART_SetRxAddressMode
 509              	.LVL32:
 119:Generated_Source\PSoC5/UART.c ****             UART_SetRxAddress2(UART_RX_HW_ADDRESS2);
 510              		.loc 1 119 0
 511 0008 0020     		movs	r0, #0
 512 000a FFF7FEFF 		bl	UART_SetRxAddress1
 513              	.LVL33:
 120:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 514              		.loc 1 120 0
 515 000e 0020     		movs	r0, #0
 516 0010 FFF7FEFF 		bl	UART_SetRxAddress2
 517              	.LVL34:
 124:Generated_Source\PSoC5/UART.c ****         /* Configure the Initial RX interrupt mask */
 518              		.loc 1 124 0
 519 0014 7222     		movs	r2, #114
 520 0016 084B     		ldr	r3, .L52
 521 0018 1A70     		strb	r2, [r3]
 126:Generated_Source\PSoC5/UART.c ****     #endif /* End UART_RX_ENABLED || UART_HD_ENABLED*/
 522              		.loc 1 126 0
 523 001a 2022     		movs	r2, #32
 524 001c 023B     		subs	r3, r3, #2
 525 001e 1A70     		strb	r2, [r3]
 138:Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKTX_COMPLETE_REG = ((UART_NUMBER_OF_DATA_BITS +
 526              		.loc 1 138 0
 527 0020 0622     		movs	r2, #6
 528 0022 A3F5AE73 		sub	r3, r3, #348
 529 0026 1A70     		strb	r2, [r3]
 139:Generated_Source\PSoC5/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_COUNT) - 1u;
 530              		.loc 1 139 0
 531 0028 4722     		movs	r2, #71
 532 002a 1033     		adds	r3, r3, #16
 533 002c 1A70     		strb	r2, [r3]
 150:Generated_Source\PSoC5/UART.c ****         #endif /*End UART_TX_INTERRUPT_ENABLED*/
 534              		.loc 1 150 0
 535 002e 0022     		movs	r2, #0
 536 0030 5033     		adds	r3, r3, #80
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 26


 537 0032 1A70     		strb	r2, [r3]
 538 0034 08BD     		pop	{r3, pc}
 539              	.L53:
 540 0036 00BF     		.align	2
 541              	.L52:
 542 0038 8A650040 		.word	1073767818
 543              		.cfi_endproc
 544              	.LFE1:
 545              		.size	UART_Init, .-UART_Init
 546              		.section	.text.UART_Start,"ax",%progbits
 547              		.align	2
 548              		.global	UART_Start
 549              		.thumb
 550              		.thumb_func
 551              		.type	UART_Start, %function
 552              	UART_Start:
 553              	.LFB0:
  77:Generated_Source\PSoC5/UART.c ****     /* If not initialized then initialize all required hardware and software */
 554              		.loc 1 77 0
 555              		.cfi_startproc
 556              		@ args = 0, pretend = 0, frame = 0
 557              		@ frame_needed = 0, uses_anonymous_args = 0
 558 0000 08B5     		push	{r3, lr}
 559              		.cfi_def_cfa_offset 8
 560              		.cfi_offset 3, -8
 561              		.cfi_offset 14, -4
  79:Generated_Source\PSoC5/UART.c ****     {
 562              		.loc 1 79 0
 563 0002 054B     		ldr	r3, .L57
 564 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 565 0006 23B9     		cbnz	r3, .L55
  81:Generated_Source\PSoC5/UART.c ****         UART_initVar = 1u;
 566              		.loc 1 81 0
 567 0008 FFF7FEFF 		bl	UART_Init
 568              	.LVL35:
  82:Generated_Source\PSoC5/UART.c ****     }
 569              		.loc 1 82 0
 570 000c 0122     		movs	r2, #1
 571 000e 024B     		ldr	r3, .L57
 572 0010 1A70     		strb	r2, [r3]
 573              	.L55:
  85:Generated_Source\PSoC5/UART.c **** }
 574              		.loc 1 85 0
 575 0012 FFF7FEFF 		bl	UART_Enable
 576              	.LVL36:
 577 0016 08BD     		pop	{r3, pc}
 578              	.L58:
 579              		.align	2
 580              	.L57:
 581 0018 00000000 		.word	.LANCHOR0
 582              		.cfi_endproc
 583              	.LFE0:
 584              		.size	UART_Start, .-UART_Start
 585              		.section	.text.UART_SetTxInterruptMode,"ax",%progbits
 586              		.align	2
 587              		.global	UART_SetTxInterruptMode
 588              		.thumb
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 27


 589              		.thumb_func
 590              		.type	UART_SetTxInterruptMode, %function
 591              	UART_SetTxInterruptMode:
 592              	.LFB16:
 880:Generated_Source\PSoC5/UART.c ****     }
 881:Generated_Source\PSoC5/UART.c **** 
 882:Generated_Source\PSoC5/UART.c **** #endif  /* UART_RX_ENABLED || UART_HD_ENABLED*/
 883:Generated_Source\PSoC5/UART.c **** 
 884:Generated_Source\PSoC5/UART.c **** 
 885:Generated_Source\PSoC5/UART.c **** #if( (UART_TX_ENABLED) || (UART_HD_ENABLED) )
 886:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 887:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetTxInterruptMode
 888:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 889:Generated_Source\PSoC5/UART.c ****     *
 890:Generated_Source\PSoC5/UART.c ****     * Summary:
 891:Generated_Source\PSoC5/UART.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:Generated_Source\PSoC5/UART.c ****     *  interrupt.
 893:Generated_Source\PSoC5/UART.c ****     *
 894:Generated_Source\PSoC5/UART.c ****     * Parameters:
 895:Generated_Source\PSoC5/UART.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:Generated_Source\PSoC5/UART.c ****     *
 901:Generated_Source\PSoC5/UART.c ****     * Return:
 902:Generated_Source\PSoC5/UART.c ****     *  None.
 903:Generated_Source\PSoC5/UART.c ****     *
 904:Generated_Source\PSoC5/UART.c ****     * Theory:
 905:Generated_Source\PSoC5/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:Generated_Source\PSoC5/UART.c ****     *
 907:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 908:Generated_Source\PSoC5/UART.c ****     void UART_SetTxInterruptMode(uint8 intSrc) 
 909:Generated_Source\PSoC5/UART.c ****     {
 593              		.loc 1 909 0
 594              		.cfi_startproc
 595              		@ args = 0, pretend = 0, frame = 0
 596              		@ frame_needed = 0, uses_anonymous_args = 0
 597              		@ link register save eliminated.
 598              	.LVL37:
 910:Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_MASK_REG = intSrc;
 599              		.loc 1 910 0
 600 0000 014B     		ldr	r3, .L60
 601 0002 1870     		strb	r0, [r3]
 602 0004 7047     		bx	lr
 603              	.L61:
 604 0006 00BF     		.align	2
 605              	.L60:
 606 0008 8C640040 		.word	1073767564
 607              		.cfi_endproc
 608              	.LFE16:
 609              		.size	UART_SetTxInterruptMode, .-UART_SetTxInterruptMode
 610              		.section	.text.UART_WriteTxData,"ax",%progbits
 611              		.align	2
 612              		.global	UART_WriteTxData
 613              		.thumb
 614              		.thumb_func
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 28


 615              		.type	UART_WriteTxData, %function
 616              	UART_WriteTxData:
 617              	.LFB17:
 911:Generated_Source\PSoC5/UART.c ****     }
 912:Generated_Source\PSoC5/UART.c **** 
 913:Generated_Source\PSoC5/UART.c **** 
 914:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 915:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_WriteTxData
 916:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 917:Generated_Source\PSoC5/UART.c ****     *
 918:Generated_Source\PSoC5/UART.c ****     * Summary:
 919:Generated_Source\PSoC5/UART.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:Generated_Source\PSoC5/UART.c ****     *  available without checking the TX status register. You must check status
 921:Generated_Source\PSoC5/UART.c ****     *  separately.
 922:Generated_Source\PSoC5/UART.c ****     *
 923:Generated_Source\PSoC5/UART.c ****     * Parameters:
 924:Generated_Source\PSoC5/UART.c ****     *  txDataByte: data byte
 925:Generated_Source\PSoC5/UART.c ****     *
 926:Generated_Source\PSoC5/UART.c ****     * Return:
 927:Generated_Source\PSoC5/UART.c ****     * None.
 928:Generated_Source\PSoC5/UART.c ****     *
 929:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 930:Generated_Source\PSoC5/UART.c ****     *  UART_txBuffer - RAM buffer pointer for save data for transmission
 931:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cyclic index for write to txBuffer,
 932:Generated_Source\PSoC5/UART.c ****     *    incremented after each byte saved to buffer.
 933:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cyclic index for read from txBuffer,
 934:Generated_Source\PSoC5/UART.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
 936:Generated_Source\PSoC5/UART.c ****     *    initialized.
 937:Generated_Source\PSoC5/UART.c ****     *
 938:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 939:Generated_Source\PSoC5/UART.c ****     *  No.
 940:Generated_Source\PSoC5/UART.c ****     *
 941:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 942:Generated_Source\PSoC5/UART.c ****     void UART_WriteTxData(uint8 txDataByte) 
 943:Generated_Source\PSoC5/UART.c ****     {
 618              		.loc 1 943 0
 619              		.cfi_startproc
 620              		@ args = 0, pretend = 0, frame = 0
 621              		@ frame_needed = 0, uses_anonymous_args = 0
 622              		@ link register save eliminated.
 623              	.LVL38:
 944:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function*/
 945:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 624              		.loc 1 945 0
 625 0000 024B     		ldr	r3, .L64
 626 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 627 0004 0BB1     		cbz	r3, .L62
 946:Generated_Source\PSoC5/UART.c ****         {
 947:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 948:Generated_Source\PSoC5/UART.c **** 
 949:Generated_Source\PSoC5/UART.c ****             /* Protect variables that could change on interrupt. */
 950:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
 951:Generated_Source\PSoC5/UART.c **** 
 952:Generated_Source\PSoC5/UART.c ****             if( (UART_txBufferRead == UART_txBufferWrite) &&
 953:Generated_Source\PSoC5/UART.c ****                 ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 954:Generated_Source\PSoC5/UART.c ****             {
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 29


 955:Generated_Source\PSoC5/UART.c ****                 /* Add directly to the FIFO. */
 956:Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = txDataByte;
 957:Generated_Source\PSoC5/UART.c ****             }
 958:Generated_Source\PSoC5/UART.c ****             else
 959:Generated_Source\PSoC5/UART.c ****             {
 960:Generated_Source\PSoC5/UART.c ****                 if(UART_txBufferWrite >= UART_TX_BUFFER_SIZE)
 961:Generated_Source\PSoC5/UART.c ****                 {
 962:Generated_Source\PSoC5/UART.c ****                     UART_txBufferWrite = 0u;
 963:Generated_Source\PSoC5/UART.c ****                 }
 964:Generated_Source\PSoC5/UART.c **** 
 965:Generated_Source\PSoC5/UART.c ****                 UART_txBuffer[UART_txBufferWrite] = txDataByte;
 966:Generated_Source\PSoC5/UART.c **** 
 967:Generated_Source\PSoC5/UART.c ****                 /* Add to the software buffer. */
 968:Generated_Source\PSoC5/UART.c ****                 UART_txBufferWrite++;
 969:Generated_Source\PSoC5/UART.c ****             }
 970:Generated_Source\PSoC5/UART.c **** 
 971:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
 972:Generated_Source\PSoC5/UART.c **** 
 973:Generated_Source\PSoC5/UART.c ****         #else
 974:Generated_Source\PSoC5/UART.c **** 
 975:Generated_Source\PSoC5/UART.c ****             /* Add directly to the FIFO. */
 976:Generated_Source\PSoC5/UART.c ****             UART_TXDATA_REG = txDataByte;
 628              		.loc 1 976 0
 629 0006 024B     		ldr	r3, .L64+4
 630 0008 1870     		strb	r0, [r3]
 631              	.L62:
 632 000a 7047     		bx	lr
 633              	.L65:
 634              		.align	2
 635              	.L64:
 636 000c 00000000 		.word	.LANCHOR0
 637 0010 4D640040 		.word	1073767501
 638              		.cfi_endproc
 639              	.LFE17:
 640              		.size	UART_WriteTxData, .-UART_WriteTxData
 641              		.section	.text.UART_ReadTxStatus,"ax",%progbits
 642              		.align	2
 643              		.global	UART_ReadTxStatus
 644              		.thumb
 645              		.thumb_func
 646              		.type	UART_ReadTxStatus, %function
 647              	UART_ReadTxStatus:
 648              	.LFB18:
 977:Generated_Source\PSoC5/UART.c **** 
 978:Generated_Source\PSoC5/UART.c ****         #endif /*(UART_TX_INTERRUPT_ENABLED) */
 979:Generated_Source\PSoC5/UART.c ****         }
 980:Generated_Source\PSoC5/UART.c ****     }
 981:Generated_Source\PSoC5/UART.c **** 
 982:Generated_Source\PSoC5/UART.c **** 
 983:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 984:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadTxStatus
 985:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 986:Generated_Source\PSoC5/UART.c ****     *
 987:Generated_Source\PSoC5/UART.c ****     * Summary:
 988:Generated_Source\PSoC5/UART.c ****     *  Reads the status register for the TX portion of the UART.
 989:Generated_Source\PSoC5/UART.c ****     *
 990:Generated_Source\PSoC5/UART.c ****     * Parameters:
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 30


 991:Generated_Source\PSoC5/UART.c ****     *  None.
 992:Generated_Source\PSoC5/UART.c ****     *
 993:Generated_Source\PSoC5/UART.c ****     * Return:
 994:Generated_Source\PSoC5/UART.c ****     *  Contents of the status register
 995:Generated_Source\PSoC5/UART.c ****     *
 996:Generated_Source\PSoC5/UART.c ****     * Theory:
 997:Generated_Source\PSoC5/UART.c ****     *  This function reads the TX status register, which is cleared on read.
 998:Generated_Source\PSoC5/UART.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:Generated_Source\PSoC5/UART.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:Generated_Source\PSoC5/UART.c ****     *  and must be handled accordingly.
1001:Generated_Source\PSoC5/UART.c ****     *
1002:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1003:Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadTxStatus(void) 
1004:Generated_Source\PSoC5/UART.c ****     {
 649              		.loc 1 1004 0
 650              		.cfi_startproc
 651              		@ args = 0, pretend = 0, frame = 0
 652              		@ frame_needed = 0, uses_anonymous_args = 0
 653              		@ link register save eliminated.
1005:Generated_Source\PSoC5/UART.c ****         return(UART_TXSTATUS_REG);
 654              		.loc 1 1005 0
 655 0000 014B     		ldr	r3, .L67
 656 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
1006:Generated_Source\PSoC5/UART.c ****     }
 657              		.loc 1 1006 0
 658 0004 7047     		bx	lr
 659              	.L68:
 660 0006 00BF     		.align	2
 661              	.L67:
 662 0008 6C640040 		.word	1073767532
 663              		.cfi_endproc
 664              	.LFE18:
 665              		.size	UART_ReadTxStatus, .-UART_ReadTxStatus
 666              		.section	.text.UART_PutChar,"ax",%progbits
 667              		.align	2
 668              		.global	UART_PutChar
 669              		.thumb
 670              		.thumb_func
 671              		.type	UART_PutChar, %function
 672              	UART_PutChar:
 673              	.LFB19:
1007:Generated_Source\PSoC5/UART.c **** 
1008:Generated_Source\PSoC5/UART.c **** 
1009:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1010:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutChar
1011:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1012:Generated_Source\PSoC5/UART.c ****     *
1013:Generated_Source\PSoC5/UART.c ****     * Summary:
1014:Generated_Source\PSoC5/UART.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:Generated_Source\PSoC5/UART.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:Generated_Source\PSoC5/UART.c ****     *  hold the data.
1017:Generated_Source\PSoC5/UART.c ****     *
1018:Generated_Source\PSoC5/UART.c ****     * Parameters:
1019:Generated_Source\PSoC5/UART.c ****     *  txDataByte: Byte containing the data to transmit
1020:Generated_Source\PSoC5/UART.c ****     *
1021:Generated_Source\PSoC5/UART.c ****     * Return:
1022:Generated_Source\PSoC5/UART.c ****     *  None.
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 31


1023:Generated_Source\PSoC5/UART.c ****     *
1024:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1025:Generated_Source\PSoC5/UART.c ****     *  UART_txBuffer - RAM buffer pointer for save data for transmission
1026:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cyclic index for write to txBuffer,
1027:Generated_Source\PSoC5/UART.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:Generated_Source\PSoC5/UART.c ****     *     saved to buffer.
1029:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cyclic index for read from txBuffer,
1030:Generated_Source\PSoC5/UART.c ****     *     checked to identify free space in txBuffer.
1031:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1032:Generated_Source\PSoC5/UART.c ****     *     initialized.
1033:Generated_Source\PSoC5/UART.c ****     *
1034:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1035:Generated_Source\PSoC5/UART.c ****     *  No.
1036:Generated_Source\PSoC5/UART.c ****     *
1037:Generated_Source\PSoC5/UART.c ****     * Theory:
1038:Generated_Source\PSoC5/UART.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:Generated_Source\PSoC5/UART.c ****     *
1040:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1041:Generated_Source\PSoC5/UART.c ****     void UART_PutChar(uint8 txDataByte) 
1042:Generated_Source\PSoC5/UART.c ****     {
 674              		.loc 1 1042 0
 675              		.cfi_startproc
 676              		@ args = 0, pretend = 0, frame = 0
 677              		@ frame_needed = 0, uses_anonymous_args = 0
 678              		@ link register save eliminated.
 679              	.LVL39:
 680              	.L70:
1043:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1044:Generated_Source\PSoC5/UART.c ****         /* The temporary output pointer is used since it takes two instructions
1045:Generated_Source\PSoC5/UART.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:Generated_Source\PSoC5/UART.c ****         *  pointer and getting an interrupt in between instructions.
1047:Generated_Source\PSoC5/UART.c ****         */
1048:Generated_Source\PSoC5/UART.c ****         uint8 locTxBufferWrite;
1049:Generated_Source\PSoC5/UART.c ****         uint8 locTxBufferRead;
1050:Generated_Source\PSoC5/UART.c **** 
1051:Generated_Source\PSoC5/UART.c ****         do
1052:Generated_Source\PSoC5/UART.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:Generated_Source\PSoC5/UART.c **** 
1054:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:Generated_Source\PSoC5/UART.c ****             /* Disable TX interrupt to protect variables from modification */
1056:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
1057:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:Generated_Source\PSoC5/UART.c **** 
1059:Generated_Source\PSoC5/UART.c ****             locTxBufferWrite = UART_txBufferWrite;
1060:Generated_Source\PSoC5/UART.c ****             locTxBufferRead  = UART_txBufferRead;
1061:Generated_Source\PSoC5/UART.c **** 
1062:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:Generated_Source\PSoC5/UART.c ****             /* Enable interrupt to continue transmission */
1064:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
1065:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:Generated_Source\PSoC5/UART.c ****         }
1067:Generated_Source\PSoC5/UART.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
1068:Generated_Source\PSoC5/UART.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:Generated_Source\PSoC5/UART.c ****                                 (uint8)(UART_TX_BUFFER_SIZE - 1u)) );
1070:Generated_Source\PSoC5/UART.c **** 
1071:Generated_Source\PSoC5/UART.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
1072:Generated_Source\PSoC5/UART.c ****             ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 32


1073:Generated_Source\PSoC5/UART.c ****         {
1074:Generated_Source\PSoC5/UART.c ****             /* Add directly to the FIFO */
1075:Generated_Source\PSoC5/UART.c ****             UART_TXDATA_REG = txDataByte;
1076:Generated_Source\PSoC5/UART.c ****         }
1077:Generated_Source\PSoC5/UART.c ****         else
1078:Generated_Source\PSoC5/UART.c ****         {
1079:Generated_Source\PSoC5/UART.c ****             if(locTxBufferWrite >= UART_TX_BUFFER_SIZE)
1080:Generated_Source\PSoC5/UART.c ****             {
1081:Generated_Source\PSoC5/UART.c ****                 locTxBufferWrite = 0u;
1082:Generated_Source\PSoC5/UART.c ****             }
1083:Generated_Source\PSoC5/UART.c ****             /* Add to the software buffer. */
1084:Generated_Source\PSoC5/UART.c ****             UART_txBuffer[locTxBufferWrite] = txDataByte;
1085:Generated_Source\PSoC5/UART.c ****             locTxBufferWrite++;
1086:Generated_Source\PSoC5/UART.c **** 
1087:Generated_Source\PSoC5/UART.c ****             /* Finally, update the real output pointer */
1088:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
1090:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:Generated_Source\PSoC5/UART.c **** 
1092:Generated_Source\PSoC5/UART.c ****             UART_txBufferWrite = locTxBufferWrite;
1093:Generated_Source\PSoC5/UART.c **** 
1094:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
1096:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:Generated_Source\PSoC5/UART.c **** 
1098:Generated_Source\PSoC5/UART.c ****             if(0u != (UART_TXSTATUS_REG & UART_TX_STS_FIFO_EMPTY))
1099:Generated_Source\PSoC5/UART.c ****             {
1100:Generated_Source\PSoC5/UART.c ****                 /* Trigger TX interrupt to send software buffer */
1101:Generated_Source\PSoC5/UART.c ****                 UART_SetPendingTxInt();
1102:Generated_Source\PSoC5/UART.c ****             }
1103:Generated_Source\PSoC5/UART.c ****         }
1104:Generated_Source\PSoC5/UART.c **** 
1105:Generated_Source\PSoC5/UART.c ****     #else
1106:Generated_Source\PSoC5/UART.c **** 
1107:Generated_Source\PSoC5/UART.c ****         while((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) != 0u)
 681              		.loc 1 1107 0 discriminator 1
 682 0000 034B     		ldr	r3, .L71
 683 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 684 0004 13F0040F 		tst	r3, #4
 685 0008 FAD1     		bne	.L70
1108:Generated_Source\PSoC5/UART.c ****         {
1109:Generated_Source\PSoC5/UART.c ****             /* Wait for room in the FIFO */
1110:Generated_Source\PSoC5/UART.c ****         }
1111:Generated_Source\PSoC5/UART.c **** 
1112:Generated_Source\PSoC5/UART.c ****         /* Add directly to the FIFO */
1113:Generated_Source\PSoC5/UART.c ****         UART_TXDATA_REG = txDataByte;
 686              		.loc 1 1113 0
 687 000a 024B     		ldr	r3, .L71+4
 688 000c 1870     		strb	r0, [r3]
 689 000e 7047     		bx	lr
 690              	.L72:
 691              		.align	2
 692              	.L71:
 693 0010 6C640040 		.word	1073767532
 694 0014 4D640040 		.word	1073767501
 695              		.cfi_endproc
 696              	.LFE19:
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 33


 697              		.size	UART_PutChar, .-UART_PutChar
 698              		.section	.text.UART_PutString,"ax",%progbits
 699              		.align	2
 700              		.global	UART_PutString
 701              		.thumb
 702              		.thumb_func
 703              		.type	UART_PutString, %function
 704              	UART_PutString:
 705              	.LFB20:
1114:Generated_Source\PSoC5/UART.c **** 
1115:Generated_Source\PSoC5/UART.c ****     #endif /* UART_TX_INTERRUPT_ENABLED */
1116:Generated_Source\PSoC5/UART.c ****     }
1117:Generated_Source\PSoC5/UART.c **** 
1118:Generated_Source\PSoC5/UART.c **** 
1119:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1120:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutString
1121:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1122:Generated_Source\PSoC5/UART.c ****     *
1123:Generated_Source\PSoC5/UART.c ****     * Summary:
1124:Generated_Source\PSoC5/UART.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:Generated_Source\PSoC5/UART.c ****     *
1126:Generated_Source\PSoC5/UART.c ****     * Parameters:
1127:Generated_Source\PSoC5/UART.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:Generated_Source\PSoC5/UART.c ****     *
1129:Generated_Source\PSoC5/UART.c ****     * Return:
1130:Generated_Source\PSoC5/UART.c ****     *  None.
1131:Generated_Source\PSoC5/UART.c ****     *
1132:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1133:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1134:Generated_Source\PSoC5/UART.c ****     *     initialized.
1135:Generated_Source\PSoC5/UART.c ****     *
1136:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1137:Generated_Source\PSoC5/UART.c ****     *  No.
1138:Generated_Source\PSoC5/UART.c ****     *
1139:Generated_Source\PSoC5/UART.c ****     * Theory:
1140:Generated_Source\PSoC5/UART.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:Generated_Source\PSoC5/UART.c ****     *  function blocks until the last character of the string is loaded into the
1142:Generated_Source\PSoC5/UART.c ****     *  TX buffer.
1143:Generated_Source\PSoC5/UART.c ****     *
1144:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1145:Generated_Source\PSoC5/UART.c ****     void UART_PutString(const char8 string[]) 
1146:Generated_Source\PSoC5/UART.c ****     {
 706              		.loc 1 1146 0
 707              		.cfi_startproc
 708              		@ args = 0, pretend = 0, frame = 0
 709              		@ frame_needed = 0, uses_anonymous_args = 0
 710              	.LVL40:
 711 0000 38B5     		push	{r3, r4, r5, lr}
 712              		.cfi_def_cfa_offset 16
 713              		.cfi_offset 3, -16
 714              		.cfi_offset 4, -12
 715              		.cfi_offset 5, -8
 716              		.cfi_offset 14, -4
 717              	.LVL41:
1147:Generated_Source\PSoC5/UART.c ****         uint16 bufIndex = 0u;
1148:Generated_Source\PSoC5/UART.c **** 
1149:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 34


1150:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 718              		.loc 1 1150 0
 719 0002 074B     		ldr	r3, .L79
 720 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 721 0006 2BB9     		cbnz	r3, .L77
 722 0008 38BD     		pop	{r3, r4, r5, pc}
 723              	.LVL42:
 724              	.L76:
1151:Generated_Source\PSoC5/UART.c ****         {
1152:Generated_Source\PSoC5/UART.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:Generated_Source\PSoC5/UART.c ****             while(string[bufIndex] != (char8) 0)
1154:Generated_Source\PSoC5/UART.c ****             {
1155:Generated_Source\PSoC5/UART.c ****                 UART_PutChar((uint8)string[bufIndex]);
 725              		.loc 1 1155 0
 726 000a FFF7FEFF 		bl	UART_PutChar
 727              	.LVL43:
1156:Generated_Source\PSoC5/UART.c ****                 bufIndex++;
 728              		.loc 1 1156 0
 729 000e 0134     		adds	r4, r4, #1
 730              	.LVL44:
 731 0010 A4B2     		uxth	r4, r4
 732              	.LVL45:
 733 0012 01E0     		b	.L74
 734              	.LVL46:
 735              	.L77:
 736 0014 0546     		mov	r5, r0
 737 0016 0024     		movs	r4, #0
 738              	.LVL47:
 739              	.L74:
1153:Generated_Source\PSoC5/UART.c ****             {
 740              		.loc 1 1153 0
 741 0018 285D     		ldrb	r0, [r5, r4]	@ zero_extendqisi2
 742 001a 0028     		cmp	r0, #0
 743 001c F5D1     		bne	.L76
 744 001e 38BD     		pop	{r3, r4, r5, pc}
 745              	.LVL48:
 746              	.L80:
 747              		.align	2
 748              	.L79:
 749 0020 00000000 		.word	.LANCHOR0
 750              		.cfi_endproc
 751              	.LFE20:
 752              		.size	UART_PutString, .-UART_PutString
 753              		.section	.text.UART_PutArray,"ax",%progbits
 754              		.align	2
 755              		.global	UART_PutArray
 756              		.thumb
 757              		.thumb_func
 758              		.type	UART_PutArray, %function
 759              	UART_PutArray:
 760              	.LFB21:
1157:Generated_Source\PSoC5/UART.c ****             }
1158:Generated_Source\PSoC5/UART.c ****         }
1159:Generated_Source\PSoC5/UART.c ****     }
1160:Generated_Source\PSoC5/UART.c **** 
1161:Generated_Source\PSoC5/UART.c **** 
1162:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 35


1163:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutArray
1164:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1165:Generated_Source\PSoC5/UART.c ****     *
1166:Generated_Source\PSoC5/UART.c ****     * Summary:
1167:Generated_Source\PSoC5/UART.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:Generated_Source\PSoC5/UART.c ****     *  transmission.
1169:Generated_Source\PSoC5/UART.c ****     *
1170:Generated_Source\PSoC5/UART.c ****     * Parameters:
1171:Generated_Source\PSoC5/UART.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:Generated_Source\PSoC5/UART.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:Generated_Source\PSoC5/UART.c ****     *             Size parameter.
1174:Generated_Source\PSoC5/UART.c ****     *
1175:Generated_Source\PSoC5/UART.c ****     * Return:
1176:Generated_Source\PSoC5/UART.c ****     *  None.
1177:Generated_Source\PSoC5/UART.c ****     *
1178:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1179:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1180:Generated_Source\PSoC5/UART.c ****     *     initialized.
1181:Generated_Source\PSoC5/UART.c ****     *
1182:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1183:Generated_Source\PSoC5/UART.c ****     *  No.
1184:Generated_Source\PSoC5/UART.c ****     *
1185:Generated_Source\PSoC5/UART.c ****     * Theory:
1186:Generated_Source\PSoC5/UART.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:Generated_Source\PSoC5/UART.c ****     *  function blocks until the last character of the string is loaded into the
1188:Generated_Source\PSoC5/UART.c ****     *  TX buffer.
1189:Generated_Source\PSoC5/UART.c ****     *
1190:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1191:Generated_Source\PSoC5/UART.c ****     void UART_PutArray(const uint8 string[], uint8 byteCount)
1192:Generated_Source\PSoC5/UART.c ****                                                                     
1193:Generated_Source\PSoC5/UART.c ****     {
 761              		.loc 1 1193 0
 762              		.cfi_startproc
 763              		@ args = 0, pretend = 0, frame = 0
 764              		@ frame_needed = 0, uses_anonymous_args = 0
 765              	.LVL49:
1194:Generated_Source\PSoC5/UART.c ****         uint8 bufIndex = 0u;
1195:Generated_Source\PSoC5/UART.c **** 
1196:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1197:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 766              		.loc 1 1197 0
 767 0000 084B     		ldr	r3, .L87
 768 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 769 0004 33B9     		cbnz	r3, .L85
 770 0006 7047     		bx	lr
 771              	.LVL50:
 772              	.L84:
 773              		.cfi_def_cfa_offset 16
 774              		.cfi_offset 4, -16
 775              		.cfi_offset 5, -12
 776              		.cfi_offset 6, -8
 777              		.cfi_offset 14, -4
1198:Generated_Source\PSoC5/UART.c ****         {
1199:Generated_Source\PSoC5/UART.c ****             while(bufIndex < byteCount)
1200:Generated_Source\PSoC5/UART.c ****             {
1201:Generated_Source\PSoC5/UART.c ****                 UART_PutChar(string[bufIndex]);
 778              		.loc 1 1201 0
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 36


 779 0008 305D     		ldrb	r0, [r6, r4]	@ zero_extendqisi2
 780 000a FFF7FEFF 		bl	UART_PutChar
 781              	.LVL51:
1202:Generated_Source\PSoC5/UART.c ****                 bufIndex++;
 782              		.loc 1 1202 0
 783 000e 0134     		adds	r4, r4, #1
 784              	.LVL52:
 785 0010 E4B2     		uxtb	r4, r4
 786              	.LVL53:
 787 0012 03E0     		b	.L82
 788              	.LVL54:
 789              	.L85:
 790              		.cfi_def_cfa_offset 0
 791              		.cfi_restore 4
 792              		.cfi_restore 5
 793              		.cfi_restore 6
 794              		.cfi_restore 14
1193:Generated_Source\PSoC5/UART.c ****         uint8 bufIndex = 0u;
 795              		.loc 1 1193 0
 796 0014 70B5     		push	{r4, r5, r6, lr}
 797              		.cfi_def_cfa_offset 16
 798              		.cfi_offset 4, -16
 799              		.cfi_offset 5, -12
 800              		.cfi_offset 6, -8
 801              		.cfi_offset 14, -4
 802 0016 0D46     		mov	r5, r1
 803 0018 0646     		mov	r6, r0
 804 001a 0024     		movs	r4, #0
 805              	.LVL55:
 806              	.L82:
1199:Generated_Source\PSoC5/UART.c ****             {
 807              		.loc 1 1199 0
 808 001c AC42     		cmp	r4, r5
 809 001e F3D3     		bcc	.L84
 810 0020 70BD     		pop	{r4, r5, r6, pc}
 811              	.LVL56:
 812              	.L88:
 813 0022 00BF     		.align	2
 814              	.L87:
 815 0024 00000000 		.word	.LANCHOR0
 816              		.cfi_endproc
 817              	.LFE21:
 818              		.size	UART_PutArray, .-UART_PutArray
 819              		.section	.text.UART_PutCRLF,"ax",%progbits
 820              		.align	2
 821              		.global	UART_PutCRLF
 822              		.thumb
 823              		.thumb_func
 824              		.type	UART_PutCRLF, %function
 825              	UART_PutCRLF:
 826              	.LFB22:
1203:Generated_Source\PSoC5/UART.c ****             }
1204:Generated_Source\PSoC5/UART.c ****         }
1205:Generated_Source\PSoC5/UART.c ****     }
1206:Generated_Source\PSoC5/UART.c **** 
1207:Generated_Source\PSoC5/UART.c **** 
1208:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 37


1209:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutCRLF
1210:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1211:Generated_Source\PSoC5/UART.c ****     *
1212:Generated_Source\PSoC5/UART.c ****     * Summary:
1213:Generated_Source\PSoC5/UART.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:Generated_Source\PSoC5/UART.c ****     *  (0x0A) to the transmit buffer.
1215:Generated_Source\PSoC5/UART.c ****     *
1216:Generated_Source\PSoC5/UART.c ****     * Parameters:
1217:Generated_Source\PSoC5/UART.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:Generated_Source\PSoC5/UART.c ****     *
1219:Generated_Source\PSoC5/UART.c ****     * Return:
1220:Generated_Source\PSoC5/UART.c ****     *  None.
1221:Generated_Source\PSoC5/UART.c ****     *
1222:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1223:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1224:Generated_Source\PSoC5/UART.c ****     *     initialized.
1225:Generated_Source\PSoC5/UART.c ****     *
1226:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1227:Generated_Source\PSoC5/UART.c ****     *  No.
1228:Generated_Source\PSoC5/UART.c ****     *
1229:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1230:Generated_Source\PSoC5/UART.c ****     void UART_PutCRLF(uint8 txDataByte) 
1231:Generated_Source\PSoC5/UART.c ****     {
 827              		.loc 1 1231 0
 828              		.cfi_startproc
 829              		@ args = 0, pretend = 0, frame = 0
 830              		@ frame_needed = 0, uses_anonymous_args = 0
 831              	.LVL57:
 832 0000 08B5     		push	{r3, lr}
 833              		.cfi_def_cfa_offset 8
 834              		.cfi_offset 3, -8
 835              		.cfi_offset 14, -4
1232:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1233:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 836              		.loc 1 1233 0
 837 0002 064B     		ldr	r3, .L92
 838 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 839 0006 3BB1     		cbz	r3, .L89
1234:Generated_Source\PSoC5/UART.c ****         {
1235:Generated_Source\PSoC5/UART.c ****             UART_PutChar(txDataByte);
 840              		.loc 1 1235 0
 841 0008 FFF7FEFF 		bl	UART_PutChar
 842              	.LVL58:
1236:Generated_Source\PSoC5/UART.c ****             UART_PutChar(0x0Du);
 843              		.loc 1 1236 0
 844 000c 0D20     		movs	r0, #13
 845 000e FFF7FEFF 		bl	UART_PutChar
 846              	.LVL59:
1237:Generated_Source\PSoC5/UART.c ****             UART_PutChar(0x0Au);
 847              		.loc 1 1237 0
 848 0012 0A20     		movs	r0, #10
 849 0014 FFF7FEFF 		bl	UART_PutChar
 850              	.LVL60:
 851              	.L89:
 852 0018 08BD     		pop	{r3, pc}
 853              	.L93:
 854 001a 00BF     		.align	2
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 38


 855              	.L92:
 856 001c 00000000 		.word	.LANCHOR0
 857              		.cfi_endproc
 858              	.LFE22:
 859              		.size	UART_PutCRLF, .-UART_PutCRLF
 860              		.section	.text.UART_GetTxBufferSize,"ax",%progbits
 861              		.align	2
 862              		.global	UART_GetTxBufferSize
 863              		.thumb
 864              		.thumb_func
 865              		.type	UART_GetTxBufferSize, %function
 866              	UART_GetTxBufferSize:
 867              	.LFB23:
1238:Generated_Source\PSoC5/UART.c ****         }
1239:Generated_Source\PSoC5/UART.c ****     }
1240:Generated_Source\PSoC5/UART.c **** 
1241:Generated_Source\PSoC5/UART.c **** 
1242:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1243:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetTxBufferSize
1244:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1245:Generated_Source\PSoC5/UART.c ****     *
1246:Generated_Source\PSoC5/UART.c ****     * Summary:
1247:Generated_Source\PSoC5/UART.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:Generated_Source\PSoC5/UART.c ****     *  transmitted.
1249:Generated_Source\PSoC5/UART.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:Generated_Source\PSoC5/UART.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:Generated_Source\PSoC5/UART.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:Generated_Source\PSoC5/UART.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:Generated_Source\PSoC5/UART.c ****     *    TX FIFO do not count.
1254:Generated_Source\PSoC5/UART.c ****     *
1255:Generated_Source\PSoC5/UART.c ****     * Parameters:
1256:Generated_Source\PSoC5/UART.c ****     *  None.
1257:Generated_Source\PSoC5/UART.c ****     *
1258:Generated_Source\PSoC5/UART.c ****     * Return:
1259:Generated_Source\PSoC5/UART.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:Generated_Source\PSoC5/UART.c ****     *  Buffer Size parameter.
1261:Generated_Source\PSoC5/UART.c ****     *
1262:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1263:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - used to calculate left space.
1264:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - used to calculate left space.
1265:Generated_Source\PSoC5/UART.c ****     *
1266:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1267:Generated_Source\PSoC5/UART.c ****     *  No.
1268:Generated_Source\PSoC5/UART.c ****     *
1269:Generated_Source\PSoC5/UART.c ****     * Theory:
1270:Generated_Source\PSoC5/UART.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:Generated_Source\PSoC5/UART.c ****     *
1272:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1273:Generated_Source\PSoC5/UART.c ****     uint8 UART_GetTxBufferSize(void)
1274:Generated_Source\PSoC5/UART.c ****                                                             
1275:Generated_Source\PSoC5/UART.c ****     {
 868              		.loc 1 1275 0
 869              		.cfi_startproc
 870              		@ args = 0, pretend = 0, frame = 0
 871              		@ frame_needed = 0, uses_anonymous_args = 0
 872              		@ link register save eliminated.
1276:Generated_Source\PSoC5/UART.c ****         uint8 size;
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 39


1277:Generated_Source\PSoC5/UART.c **** 
1278:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1279:Generated_Source\PSoC5/UART.c **** 
1280:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
1281:Generated_Source\PSoC5/UART.c ****         UART_DisableTxInt();
1282:Generated_Source\PSoC5/UART.c **** 
1283:Generated_Source\PSoC5/UART.c ****         if(UART_txBufferRead == UART_txBufferWrite)
1284:Generated_Source\PSoC5/UART.c ****         {
1285:Generated_Source\PSoC5/UART.c ****             size = 0u;
1286:Generated_Source\PSoC5/UART.c ****         }
1287:Generated_Source\PSoC5/UART.c ****         else if(UART_txBufferRead < UART_txBufferWrite)
1288:Generated_Source\PSoC5/UART.c ****         {
1289:Generated_Source\PSoC5/UART.c ****             size = (UART_txBufferWrite - UART_txBufferRead);
1290:Generated_Source\PSoC5/UART.c ****         }
1291:Generated_Source\PSoC5/UART.c ****         else
1292:Generated_Source\PSoC5/UART.c ****         {
1293:Generated_Source\PSoC5/UART.c ****             size = (UART_TX_BUFFER_SIZE - UART_txBufferRead) +
1294:Generated_Source\PSoC5/UART.c ****                     UART_txBufferWrite;
1295:Generated_Source\PSoC5/UART.c ****         }
1296:Generated_Source\PSoC5/UART.c **** 
1297:Generated_Source\PSoC5/UART.c ****         UART_EnableTxInt();
1298:Generated_Source\PSoC5/UART.c **** 
1299:Generated_Source\PSoC5/UART.c ****     #else
1300:Generated_Source\PSoC5/UART.c **** 
1301:Generated_Source\PSoC5/UART.c ****         size = UART_TXSTATUS_REG;
 873              		.loc 1 1301 0
 874 0000 074B     		ldr	r3, .L98
 875 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 876 0004 DBB2     		uxtb	r3, r3
 877              	.LVL61:
1302:Generated_Source\PSoC5/UART.c **** 
1303:Generated_Source\PSoC5/UART.c ****         /* Is the fifo is full. */
1304:Generated_Source\PSoC5/UART.c ****         if((size & UART_TX_STS_FIFO_FULL) != 0u)
 878              		.loc 1 1304 0
 879 0006 13F0040F 		tst	r3, #4
 880 000a 04D1     		bne	.L96
1305:Generated_Source\PSoC5/UART.c ****         {
1306:Generated_Source\PSoC5/UART.c ****             size = UART_FIFO_LENGTH;
1307:Generated_Source\PSoC5/UART.c ****         }
1308:Generated_Source\PSoC5/UART.c ****         else if((size & UART_TX_STS_FIFO_EMPTY) != 0u)
 881              		.loc 1 1308 0
 882 000c 13F0020F 		tst	r3, #2
 883 0010 03D0     		beq	.L97
1309:Generated_Source\PSoC5/UART.c ****         {
1310:Generated_Source\PSoC5/UART.c ****             size = 0u;
 884              		.loc 1 1310 0
 885 0012 0020     		movs	r0, #0
 886 0014 7047     		bx	lr
 887              	.L96:
1306:Generated_Source\PSoC5/UART.c ****         }
 888              		.loc 1 1306 0
 889 0016 0420     		movs	r0, #4
 890 0018 7047     		bx	lr
 891              	.L97:
1311:Generated_Source\PSoC5/UART.c ****         }
1312:Generated_Source\PSoC5/UART.c ****         else
1313:Generated_Source\PSoC5/UART.c ****         {
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 40


1314:Generated_Source\PSoC5/UART.c ****             /* We only know there is data in the fifo. */
1315:Generated_Source\PSoC5/UART.c ****             size = 1u;
 892              		.loc 1 1315 0
 893 001a 0120     		movs	r0, #1
 894              	.LVL62:
1316:Generated_Source\PSoC5/UART.c ****         }
1317:Generated_Source\PSoC5/UART.c **** 
1318:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_INTERRUPT_ENABLED) */
1319:Generated_Source\PSoC5/UART.c **** 
1320:Generated_Source\PSoC5/UART.c ****     return(size);
1321:Generated_Source\PSoC5/UART.c ****     }
 895              		.loc 1 1321 0
 896 001c 7047     		bx	lr
 897              	.L99:
 898 001e 00BF     		.align	2
 899              	.L98:
 900 0020 6C640040 		.word	1073767532
 901              		.cfi_endproc
 902              	.LFE23:
 903              		.size	UART_GetTxBufferSize, .-UART_GetTxBufferSize
 904              		.section	.text.UART_ClearTxBuffer,"ax",%progbits
 905              		.align	2
 906              		.global	UART_ClearTxBuffer
 907              		.thumb
 908              		.thumb_func
 909              		.type	UART_ClearTxBuffer, %function
 910              	UART_ClearTxBuffer:
 911              	.LFB24:
1322:Generated_Source\PSoC5/UART.c **** 
1323:Generated_Source\PSoC5/UART.c **** 
1324:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1325:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ClearTxBuffer
1326:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1327:Generated_Source\PSoC5/UART.c ****     *
1328:Generated_Source\PSoC5/UART.c ****     * Summary:
1329:Generated_Source\PSoC5/UART.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:Generated_Source\PSoC5/UART.c ****     *
1331:Generated_Source\PSoC5/UART.c ****     * Parameters:
1332:Generated_Source\PSoC5/UART.c ****     *  None.
1333:Generated_Source\PSoC5/UART.c ****     *
1334:Generated_Source\PSoC5/UART.c ****     * Return:
1335:Generated_Source\PSoC5/UART.c ****     *  None.
1336:Generated_Source\PSoC5/UART.c ****     *
1337:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1338:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cleared to zero.
1339:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cleared to zero.
1340:Generated_Source\PSoC5/UART.c ****     *
1341:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1342:Generated_Source\PSoC5/UART.c ****     *  No.
1343:Generated_Source\PSoC5/UART.c ****     *
1344:Generated_Source\PSoC5/UART.c ****     * Theory:
1345:Generated_Source\PSoC5/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:Generated_Source\PSoC5/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:Generated_Source\PSoC5/UART.c ****     *  remained in the RAM.
1348:Generated_Source\PSoC5/UART.c ****     *
1349:Generated_Source\PSoC5/UART.c ****     * Side Effects:
1350:Generated_Source\PSoC5/UART.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 41


1351:Generated_Source\PSoC5/UART.c ****     *  transmitting finishes transmitting.
1352:Generated_Source\PSoC5/UART.c ****     *
1353:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1354:Generated_Source\PSoC5/UART.c ****     void UART_ClearTxBuffer(void) 
1355:Generated_Source\PSoC5/UART.c ****     {
 912              		.loc 1 1355 0
 913              		.cfi_startproc
 914              		@ args = 0, pretend = 0, frame = 0
 915              		@ frame_needed = 0, uses_anonymous_args = 0
 916 0000 08B5     		push	{r3, lr}
 917              		.cfi_def_cfa_offset 8
 918              		.cfi_offset 3, -8
 919              		.cfi_offset 14, -4
1356:Generated_Source\PSoC5/UART.c ****         uint8 enableInterrupts;
1357:Generated_Source\PSoC5/UART.c **** 
1358:Generated_Source\PSoC5/UART.c ****         enableInterrupts = CyEnterCriticalSection();
 920              		.loc 1 1358 0
 921 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 922              	.LVL63:
1359:Generated_Source\PSoC5/UART.c ****         /* Clear the HW FIFO */
1360:Generated_Source\PSoC5/UART.c ****         UART_TXDATA_AUX_CTL_REG |= (uint8)  UART_TX_FIFO_CLR;
 923              		.loc 1 1360 0
 924 0006 064B     		ldr	r3, .L102
 925 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 926 000a 42F00102 		orr	r2, r2, #1
 927 000e 1A70     		strb	r2, [r3]
1361:Generated_Source\PSoC5/UART.c ****         UART_TXDATA_AUX_CTL_REG &= (uint8) ~UART_TX_FIFO_CLR;
 928              		.loc 1 1361 0
 929 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 930 0012 02F0FE02 		and	r2, r2, #254
 931 0016 1A70     		strb	r2, [r3]
1362:Generated_Source\PSoC5/UART.c ****         CyExitCriticalSection(enableInterrupts);
 932              		.loc 1 1362 0
 933 0018 FFF7FEFF 		bl	CyExitCriticalSection
 934              	.LVL64:
 935 001c 08BD     		pop	{r3, pc}
 936              	.L103:
 937 001e 00BF     		.align	2
 938              	.L102:
 939 0020 9D640040 		.word	1073767581
 940              		.cfi_endproc
 941              	.LFE24:
 942              		.size	UART_ClearTxBuffer, .-UART_ClearTxBuffer
 943              		.section	.text.UART_SendBreak,"ax",%progbits
 944              		.align	2
 945              		.global	UART_SendBreak
 946              		.thumb
 947              		.thumb_func
 948              		.type	UART_SendBreak, %function
 949              	UART_SendBreak:
 950              	.LFB25:
1363:Generated_Source\PSoC5/UART.c **** 
1364:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1365:Generated_Source\PSoC5/UART.c **** 
1366:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
1367:Generated_Source\PSoC5/UART.c ****         UART_DisableTxInt();
1368:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 42


1369:Generated_Source\PSoC5/UART.c ****         UART_txBufferRead = 0u;
1370:Generated_Source\PSoC5/UART.c ****         UART_txBufferWrite = 0u;
1371:Generated_Source\PSoC5/UART.c **** 
1372:Generated_Source\PSoC5/UART.c ****         /* Enable Tx interrupt. */
1373:Generated_Source\PSoC5/UART.c ****         UART_EnableTxInt();
1374:Generated_Source\PSoC5/UART.c **** 
1375:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_INTERRUPT_ENABLED) */
1376:Generated_Source\PSoC5/UART.c ****     }
1377:Generated_Source\PSoC5/UART.c **** 
1378:Generated_Source\PSoC5/UART.c **** 
1379:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1380:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SendBreak
1381:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1382:Generated_Source\PSoC5/UART.c ****     *
1383:Generated_Source\PSoC5/UART.c ****     * Summary:
1384:Generated_Source\PSoC5/UART.c ****     *  Transmits a break signal on the bus.
1385:Generated_Source\PSoC5/UART.c ****     *
1386:Generated_Source\PSoC5/UART.c ****     * Parameters:
1387:Generated_Source\PSoC5/UART.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:Generated_Source\PSoC5/UART.c ****     *   UART_SEND_BREAK - Initialize registers for break, send the Break
1389:Generated_Source\PSoC5/UART.c ****     *       signal and return immediately.
1390:Generated_Source\PSoC5/UART.c ****     *   UART_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:Generated_Source\PSoC5/UART.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:Generated_Source\PSoC5/UART.c ****     *   UART_REINIT - Reinitialize registers to normal transmission mode
1393:Generated_Source\PSoC5/UART.c ****     *       then return.
1394:Generated_Source\PSoC5/UART.c ****     *   UART_SEND_WAIT_REINIT - Performs both options: 
1395:Generated_Source\PSoC5/UART.c ****     *      UART_SEND_BREAK and UART_WAIT_FOR_COMPLETE_REINIT.
1396:Generated_Source\PSoC5/UART.c ****     *      This option is recommended for most cases.
1397:Generated_Source\PSoC5/UART.c ****     *
1398:Generated_Source\PSoC5/UART.c ****     * Return:
1399:Generated_Source\PSoC5/UART.c ****     *  None.
1400:Generated_Source\PSoC5/UART.c ****     *
1401:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1402:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1403:Generated_Source\PSoC5/UART.c ****     *     initialized.
1404:Generated_Source\PSoC5/UART.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:Generated_Source\PSoC5/UART.c ****     *
1406:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1407:Generated_Source\PSoC5/UART.c ****     *  No.
1408:Generated_Source\PSoC5/UART.c ****     *
1409:Generated_Source\PSoC5/UART.c ****     * Theory:
1410:Generated_Source\PSoC5/UART.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:Generated_Source\PSoC5/UART.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:Generated_Source\PSoC5/UART.c ****     *  operation.
1413:Generated_Source\PSoC5/UART.c ****     *  There are 3 variants for this API usage:
1414:Generated_Source\PSoC5/UART.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:Generated_Source\PSoC5/UART.c ****     *     configuration returning. Function will block CPU until transmission
1416:Generated_Source\PSoC5/UART.c ****     *     complete.
1417:Generated_Source\PSoC5/UART.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:Generated_Source\PSoC5/UART.c ****     *     operation
1419:Generated_Source\PSoC5/UART.c ****     *     Example for this case:
1420:Generated_Source\PSoC5/UART.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:Generated_Source\PSoC5/UART.c ****     *         Add your code here to use CPU time
1422:Generated_Source\PSoC5/UART.c ****     *     SendBreak(1);     - complete Break operation
1423:Generated_Source\PSoC5/UART.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:Generated_Source\PSoC5/UART.c ****     *     complete break operation.
1425:Generated_Source\PSoC5/UART.c ****     *     Example for this case:
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 43


1426:Generated_Source\PSoC5/UART.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:Generated_Source\PSoC5/UART.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:Generated_Source\PSoC5/UART.c ****     *         Add your code here to use CPU time
1429:Generated_Source\PSoC5/UART.c ****     *     When interrupt appear with UART_TX_STS_COMPLETE status:
1430:Generated_Source\PSoC5/UART.c ****     *     SendBreak(2);     - complete Break operation
1431:Generated_Source\PSoC5/UART.c ****     *
1432:Generated_Source\PSoC5/UART.c ****     * Side Effects:
1433:Generated_Source\PSoC5/UART.c ****     *  The UART_SendBreak() function initializes registers to send a
1434:Generated_Source\PSoC5/UART.c ****     *  break signal.
1435:Generated_Source\PSoC5/UART.c ****     *  Break signal length depends on the break signal bits configuration.
1436:Generated_Source\PSoC5/UART.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:Generated_Source\PSoC5/UART.c ****     *  communication can continue.
1438:Generated_Source\PSoC5/UART.c ****     *
1439:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1440:Generated_Source\PSoC5/UART.c ****     void UART_SendBreak(uint8 retMode) 
1441:Generated_Source\PSoC5/UART.c ****     {
 951              		.loc 1 1441 0
 952              		.cfi_startproc
 953              		@ args = 0, pretend = 0, frame = 0
 954              		@ frame_needed = 0, uses_anonymous_args = 0
 955              		@ link register save eliminated.
 956              	.LVL65:
1442:Generated_Source\PSoC5/UART.c **** 
1443:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function*/
1444:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 957              		.loc 1 1444 0
 958 0000 124B     		ldr	r3, .L111
 959 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 960 0004 0BB3     		cbz	r3, .L104
 961              	.LBB2:
1445:Generated_Source\PSoC5/UART.c ****         {
1446:Generated_Source\PSoC5/UART.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:Generated_Source\PSoC5/UART.c ****             /* When that is done then reset the counter value back */
1448:Generated_Source\PSoC5/UART.c ****             uint8 tmpStat;
1449:Generated_Source\PSoC5/UART.c **** 
1450:Generated_Source\PSoC5/UART.c ****         #if(UART_HD_ENABLED) /* Half Duplex mode*/
1451:Generated_Source\PSoC5/UART.c **** 
1452:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_SEND_BREAK) ||
1453:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT ) )
1454:Generated_Source\PSoC5/UART.c ****             {
1455:Generated_Source\PSoC5/UART.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() |
1457:Generated_Source\PSoC5/UART.c ****                                                       UART_CTRL_HD_SEND_BREAK);
1458:Generated_Source\PSoC5/UART.c ****                 /* Send zeros */
1459:Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = 0u;
1460:Generated_Source\PSoC5/UART.c **** 
1461:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit starts */
1462:Generated_Source\PSoC5/UART.c ****                 {
1463:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1464:Generated_Source\PSoC5/UART.c ****                 }
1465:Generated_Source\PSoC5/UART.c ****                 while((tmpStat & UART_TX_STS_FIFO_EMPTY) != 0u);
1466:Generated_Source\PSoC5/UART.c ****             }
1467:Generated_Source\PSoC5/UART.c **** 
1468:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1469:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1470:Generated_Source\PSoC5/UART.c ****             {
1471:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit complete */
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 44


1472:Generated_Source\PSoC5/UART.c ****                 {
1473:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1474:Generated_Source\PSoC5/UART.c ****                 }
1475:Generated_Source\PSoC5/UART.c ****                 while(((uint8)~tmpStat & UART_TX_STS_COMPLETE) != 0u);
1476:Generated_Source\PSoC5/UART.c ****             }
1477:Generated_Source\PSoC5/UART.c **** 
1478:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1479:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_REINIT) ||
1480:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1481:Generated_Source\PSoC5/UART.c ****             {
1482:Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() &
1483:Generated_Source\PSoC5/UART.c ****                                               (uint8)~UART_CTRL_HD_SEND_BREAK);
1484:Generated_Source\PSoC5/UART.c ****             }
1485:Generated_Source\PSoC5/UART.c **** 
1486:Generated_Source\PSoC5/UART.c ****         #else /* UART_HD_ENABLED Full Duplex mode */
1487:Generated_Source\PSoC5/UART.c **** 
1488:Generated_Source\PSoC5/UART.c ****             static uint8 txPeriod;
1489:Generated_Source\PSoC5/UART.c **** 
1490:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_SEND_BREAK) ||
 962              		.loc 1 1490 0
 963 0006 08B1     		cbz	r0, .L106
 964              		.loc 1 1490 0 is_stmt 0 discriminator 1
 965 0008 0328     		cmp	r0, #3
 966 000a 0DD1     		bne	.L107
 967              	.L106:
1491:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1492:Generated_Source\PSoC5/UART.c ****             {
1493:Generated_Source\PSoC5/UART.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:Generated_Source\PSoC5/UART.c ****                 #if( (UART_PARITY_TYPE != UART__B_UART__NONE_REVB) || \
1495:Generated_Source\PSoC5/UART.c ****                                     (UART_PARITY_TYPE_SW != 0u) )
1496:Generated_Source\PSoC5/UART.c ****                     UART_WriteControlRegister(UART_ReadControlRegister() |
1497:Generated_Source\PSoC5/UART.c ****                                                           UART_CTRL_HD_SEND_BREAK);
1498:Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_PARITY_TYPE != UART__B_UART__NONE_REVB  */
1499:Generated_Source\PSoC5/UART.c **** 
1500:Generated_Source\PSoC5/UART.c ****                 #if(UART_TXCLKGEN_DP)
1501:Generated_Source\PSoC5/UART.c ****                     txPeriod = UART_TXBITCLKTX_COMPLETE_REG;
 968              		.loc 1 1501 0 is_stmt 1
 969 000c 104B     		ldr	r3, .L111+4
 970 000e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 971 0010 0E4A     		ldr	r2, .L111
 972 0012 5170     		strb	r1, [r2, #1]
1502:Generated_Source\PSoC5/UART.c ****                     UART_TXBITCLKTX_COMPLETE_REG = UART_TXBITCTR_BREAKBITS;
 973              		.loc 1 1502 0
 974 0014 6722     		movs	r2, #103
 975 0016 1A70     		strb	r2, [r3]
1503:Generated_Source\PSoC5/UART.c ****                 #else
1504:Generated_Source\PSoC5/UART.c ****                     txPeriod = UART_TXBITCTR_PERIOD_REG;
1505:Generated_Source\PSoC5/UART.c ****                     UART_TXBITCTR_PERIOD_REG = UART_TXBITCTR_BREAKBITS8X;
1506:Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_TXCLKGEN_DP */
1507:Generated_Source\PSoC5/UART.c **** 
1508:Generated_Source\PSoC5/UART.c ****                 /* Send zeros */
1509:Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = 0u;
 976              		.loc 1 1509 0
 977 0018 0022     		movs	r2, #0
 978 001a 1133     		adds	r3, r3, #17
 979 001c 1A70     		strb	r2, [r3]
 980              	.L108:
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 45


1510:Generated_Source\PSoC5/UART.c **** 
1511:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit starts */
1512:Generated_Source\PSoC5/UART.c ****                 {
1513:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
 981              		.loc 1 1513 0 discriminator 1
 982 001e 0D4B     		ldr	r3, .L111+8
 983 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 984              	.LVL66:
1514:Generated_Source\PSoC5/UART.c ****                 }
1515:Generated_Source\PSoC5/UART.c ****                 while((tmpStat & UART_TX_STS_FIFO_EMPTY) != 0u);
 985              		.loc 1 1515 0 discriminator 1
 986 0022 13F0020F 		tst	r3, #2
 987 0026 FAD1     		bne	.L108
 988              	.LVL67:
 989              	.L107:
1516:Generated_Source\PSoC5/UART.c ****             }
1517:Generated_Source\PSoC5/UART.c **** 
1518:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
 990              		.loc 1 1518 0
 991 0028 0128     		cmp	r0, #1
 992 002a 01D0     		beq	.L109
 993              		.loc 1 1518 0 is_stmt 0 discriminator 1
 994 002c 0328     		cmp	r0, #3
 995 002e 04D1     		bne	.L110
 996              	.L109:
1519:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1520:Generated_Source\PSoC5/UART.c ****             {
1521:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit complete */
1522:Generated_Source\PSoC5/UART.c ****                 {
1523:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
 997              		.loc 1 1523 0 is_stmt 1 discriminator 1
 998 0030 084B     		ldr	r3, .L111+8
 999 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1000              	.LVL68:
1524:Generated_Source\PSoC5/UART.c ****                 }
1525:Generated_Source\PSoC5/UART.c ****                 while(((uint8)~tmpStat & UART_TX_STS_COMPLETE) != 0u);
 1001              		.loc 1 1525 0 discriminator 1
 1002 0034 13F0010F 		tst	r3, #1
 1003 0038 FAD0     		beq	.L109
 1004              	.LVL69:
 1005              	.L110:
1526:Generated_Source\PSoC5/UART.c ****             }
1527:Generated_Source\PSoC5/UART.c **** 
1528:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1529:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_REINIT) ||
 1006              		.loc 1 1529 0
 1007 003a 0138     		subs	r0, r0, #1
 1008              	.LVL70:
 1009 003c C0B2     		uxtb	r0, r0
1528:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_REINIT) ||
 1010              		.loc 1 1528 0
 1011 003e 0228     		cmp	r0, #2
 1012 0040 03D8     		bhi	.L104
1530:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1531:Generated_Source\PSoC5/UART.c ****             {
1532:Generated_Source\PSoC5/UART.c **** 
1533:Generated_Source\PSoC5/UART.c ****             #if(UART_TXCLKGEN_DP)
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 46


1534:Generated_Source\PSoC5/UART.c ****                 UART_TXBITCLKTX_COMPLETE_REG = txPeriod;
 1013              		.loc 1 1534 0
 1014 0042 024B     		ldr	r3, .L111
 1015 0044 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 1016 0046 024B     		ldr	r3, .L111+4
 1017 0048 1A70     		strb	r2, [r3]
 1018              	.L104:
 1019 004a 7047     		bx	lr
 1020              	.L112:
 1021              		.align	2
 1022              	.L111:
 1023 004c 00000000 		.word	.LANCHOR0
 1024 0050 3C640040 		.word	1073767484
 1025 0054 6C640040 		.word	1073767532
 1026              	.LBE2:
 1027              		.cfi_endproc
 1028              	.LFE25:
 1029              		.size	UART_SendBreak, .-UART_SendBreak
 1030              		.section	.text.UART_SetTxAddressMode,"ax",%progbits
 1031              		.align	2
 1032              		.global	UART_SetTxAddressMode
 1033              		.thumb
 1034              		.thumb_func
 1035              		.type	UART_SetTxAddressMode, %function
 1036              	UART_SetTxAddressMode:
 1037              	.LFB26:
1535:Generated_Source\PSoC5/UART.c ****             #else
1536:Generated_Source\PSoC5/UART.c ****                 UART_TXBITCTR_PERIOD_REG = txPeriod;
1537:Generated_Source\PSoC5/UART.c ****             #endif /* End UART_TXCLKGEN_DP */
1538:Generated_Source\PSoC5/UART.c **** 
1539:Generated_Source\PSoC5/UART.c ****             #if( (UART_PARITY_TYPE != UART__B_UART__NONE_REVB) || \
1540:Generated_Source\PSoC5/UART.c ****                  (UART_PARITY_TYPE_SW != 0u) )
1541:Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() &
1542:Generated_Source\PSoC5/UART.c ****                                                       (uint8) ~UART_CTRL_HD_SEND_BREAK);
1543:Generated_Source\PSoC5/UART.c ****             #endif /* End UART_PARITY_TYPE != NONE */
1544:Generated_Source\PSoC5/UART.c ****             }
1545:Generated_Source\PSoC5/UART.c ****         #endif    /* End UART_HD_ENABLED */
1546:Generated_Source\PSoC5/UART.c ****         }
1547:Generated_Source\PSoC5/UART.c ****     }
1548:Generated_Source\PSoC5/UART.c **** 
1549:Generated_Source\PSoC5/UART.c **** 
1550:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1551:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetTxAddressMode
1552:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1553:Generated_Source\PSoC5/UART.c ****     *
1554:Generated_Source\PSoC5/UART.c ****     * Summary:
1555:Generated_Source\PSoC5/UART.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:Generated_Source\PSoC5/UART.c ****     *
1557:Generated_Source\PSoC5/UART.c ****     * Parameters:
1558:Generated_Source\PSoC5/UART.c ****     *  addressMode: 
1559:Generated_Source\PSoC5/UART.c ****     *       UART_SET_SPACE - Configure the transmitter to send the next
1560:Generated_Source\PSoC5/UART.c ****     *                                    byte as a data.
1561:Generated_Source\PSoC5/UART.c ****     *       UART_SET_MARK  - Configure the transmitter to send the next
1562:Generated_Source\PSoC5/UART.c ****     *                                    byte as an address.
1563:Generated_Source\PSoC5/UART.c ****     *
1564:Generated_Source\PSoC5/UART.c ****     * Return:
1565:Generated_Source\PSoC5/UART.c ****     *  None.
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 47


1566:Generated_Source\PSoC5/UART.c ****     *
1567:Generated_Source\PSoC5/UART.c ****     * Side Effects:
1568:Generated_Source\PSoC5/UART.c ****     *  This function sets and clears UART_CTRL_MARK bit in the Control
1569:Generated_Source\PSoC5/UART.c ****     *  register.
1570:Generated_Source\PSoC5/UART.c ****     *
1571:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1572:Generated_Source\PSoC5/UART.c ****     void UART_SetTxAddressMode(uint8 addressMode) 
1573:Generated_Source\PSoC5/UART.c ****     {
 1038              		.loc 1 1573 0
 1039              		.cfi_startproc
 1040              		@ args = 0, pretend = 0, frame = 0
 1041              		@ frame_needed = 0, uses_anonymous_args = 0
 1042              	.LVL71:
 1043 0000 08B5     		push	{r3, lr}
 1044              		.cfi_def_cfa_offset 8
 1045              		.cfi_offset 3, -8
 1046              		.cfi_offset 14, -4
1574:Generated_Source\PSoC5/UART.c ****         /* Mark/Space sending enable */
1575:Generated_Source\PSoC5/UART.c ****         if(addressMode != 0u)
 1047              		.loc 1 1575 0
 1048 0002 38B1     		cbz	r0, .L114
1576:Generated_Source\PSoC5/UART.c ****         {
1577:Generated_Source\PSoC5/UART.c ****         #if( UART_CONTROL_REG_REMOVED == 0u )
1578:Generated_Source\PSoC5/UART.c ****             UART_WriteControlRegister(UART_ReadControlRegister() |
 1049              		.loc 1 1578 0
 1050 0004 FFF7FEFF 		bl	UART_ReadControlRegister
 1051              	.LVL72:
 1052 0008 40F00400 		orr	r0, r0, #4
 1053 000c C0B2     		uxtb	r0, r0
 1054 000e FFF7FEFF 		bl	UART_WriteControlRegister
 1055              	.LVL73:
 1056 0012 08BD     		pop	{r3, pc}
 1057              	.LVL74:
 1058              	.L114:
1579:Generated_Source\PSoC5/UART.c ****                                                   UART_CTRL_MARK);
1580:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_CONTROL_REG_REMOVED == 0u */
1581:Generated_Source\PSoC5/UART.c ****         }
1582:Generated_Source\PSoC5/UART.c ****         else
1583:Generated_Source\PSoC5/UART.c ****         {
1584:Generated_Source\PSoC5/UART.c ****         #if( UART_CONTROL_REG_REMOVED == 0u )
1585:Generated_Source\PSoC5/UART.c ****             UART_WriteControlRegister(UART_ReadControlRegister() &
 1059              		.loc 1 1585 0
 1060 0014 FFF7FEFF 		bl	UART_ReadControlRegister
 1061              	.LVL75:
 1062 0018 00F0FB00 		and	r0, r0, #251
 1063 001c FFF7FEFF 		bl	UART_WriteControlRegister
 1064              	.LVL76:
 1065 0020 08BD     		pop	{r3, pc}
 1066              		.cfi_endproc
 1067              	.LFE26:
 1068              		.size	UART_SetTxAddressMode, .-UART_SetTxAddressMode
 1069              		.global	UART_initVar
 1070 0022 00BF     		.bss
 1071              		.set	.LANCHOR0,. + 0
 1072              		.type	UART_initVar, %object
 1073              		.size	UART_initVar, 1
 1074              	UART_initVar:
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 48


 1075 0000 00       		.space	1
 1076              		.type	txPeriod.5124, %object
 1077              		.size	txPeriod.5124, 1
 1078              	txPeriod.5124:
 1079 0001 00       		.space	1
 1080              		.text
 1081              	.Letext0:
 1082              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1083              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 1084              		.file 4 "Generated_Source\\PSoC5\\UART_IntClock.h"
 1085              		.section	.debug_info,"",%progbits
 1086              	.Ldebug_info0:
 1087 0000 7A060000 		.4byte	0x67a
 1088 0004 0400     		.2byte	0x4
 1089 0006 00000000 		.4byte	.Ldebug_abbrev0
 1090 000a 04       		.byte	0x4
 1091 000b 01       		.uleb128 0x1
 1092 000c 10030000 		.4byte	.LASF66
 1093 0010 0C       		.byte	0xc
 1094 0011 8A020000 		.4byte	.LASF67
 1095 0015 42020000 		.4byte	.LASF68
 1096 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1097 001d 00000000 		.4byte	0
 1098 0021 00000000 		.4byte	.Ldebug_line0
 1099 0025 02       		.uleb128 0x2
 1100 0026 01       		.byte	0x1
 1101 0027 06       		.byte	0x6
 1102 0028 77000000 		.4byte	.LASF0
 1103 002c 02       		.uleb128 0x2
 1104 002d 01       		.byte	0x1
 1105 002e 08       		.byte	0x8
 1106 002f D8020000 		.4byte	.LASF1
 1107 0033 02       		.uleb128 0x2
 1108 0034 02       		.byte	0x2
 1109 0035 05       		.byte	0x5
 1110 0036 F7020000 		.4byte	.LASF2
 1111 003a 02       		.uleb128 0x2
 1112 003b 02       		.byte	0x2
 1113 003c 07       		.byte	0x7
 1114 003d 74010000 		.4byte	.LASF3
 1115 0041 02       		.uleb128 0x2
 1116 0042 04       		.byte	0x4
 1117 0043 05       		.byte	0x5
 1118 0044 8C000000 		.4byte	.LASF4
 1119 0048 02       		.uleb128 0x2
 1120 0049 04       		.byte	0x4
 1121 004a 07       		.byte	0x7
 1122 004b 38010000 		.4byte	.LASF5
 1123 004f 02       		.uleb128 0x2
 1124 0050 08       		.byte	0x8
 1125 0051 05       		.byte	0x5
 1126 0052 69000000 		.4byte	.LASF6
 1127 0056 02       		.uleb128 0x2
 1128 0057 08       		.byte	0x8
 1129 0058 07       		.byte	0x7
 1130 0059 2F000000 		.4byte	.LASF7
 1131 005d 03       		.uleb128 0x3
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 49


 1132 005e 04       		.byte	0x4
 1133 005f 05       		.byte	0x5
 1134 0060 696E7400 		.ascii	"int\000"
 1135 0064 02       		.uleb128 0x2
 1136 0065 04       		.byte	0x4
 1137 0066 07       		.byte	0x7
 1138 0067 0B010000 		.4byte	.LASF8
 1139 006b 04       		.uleb128 0x4
 1140 006c B2000000 		.4byte	.LASF9
 1141 0070 02       		.byte	0x2
 1142 0071 E801     		.2byte	0x1e8
 1143 0073 2C000000 		.4byte	0x2c
 1144 0077 04       		.uleb128 0x4
 1145 0078 00000000 		.4byte	.LASF10
 1146 007c 02       		.byte	0x2
 1147 007d E901     		.2byte	0x1e9
 1148 007f 3A000000 		.4byte	0x3a
 1149 0083 02       		.uleb128 0x2
 1150 0084 04       		.byte	0x4
 1151 0085 04       		.byte	0x4
 1152 0086 41040000 		.4byte	.LASF11
 1153 008a 02       		.uleb128 0x2
 1154 008b 08       		.byte	0x8
 1155 008c 04       		.byte	0x4
 1156 008d D1000000 		.4byte	.LASF12
 1157 0091 04       		.uleb128 0x4
 1158 0092 D2030000 		.4byte	.LASF13
 1159 0096 02       		.byte	0x2
 1160 0097 F901     		.2byte	0x1f9
 1161 0099 9D000000 		.4byte	0x9d
 1162 009d 02       		.uleb128 0x2
 1163 009e 01       		.byte	0x1
 1164 009f 08       		.byte	0x8
 1165 00a0 CD030000 		.4byte	.LASF14
 1166 00a4 04       		.uleb128 0x4
 1167 00a5 BD020000 		.4byte	.LASF15
 1168 00a9 02       		.byte	0x2
 1169 00aa 9202     		.2byte	0x292
 1170 00ac B0000000 		.4byte	0xb0
 1171 00b0 05       		.uleb128 0x5
 1172 00b1 6B000000 		.4byte	0x6b
 1173 00b5 02       		.uleb128 0x2
 1174 00b6 08       		.byte	0x8
 1175 00b7 04       		.byte	0x4
 1176 00b8 EC010000 		.4byte	.LASF16
 1177 00bc 02       		.uleb128 0x2
 1178 00bd 04       		.byte	0x4
 1179 00be 07       		.byte	0x7
 1180 00bf E3010000 		.4byte	.LASF17
 1181 00c3 06       		.uleb128 0x6
 1182 00c4 AF030000 		.4byte	.LASF18
 1183 00c8 01       		.byte	0x1
 1184 00c9 B7       		.byte	0xb7
 1185 00ca 00000000 		.4byte	.LFB2
 1186 00ce 38000000 		.4byte	.LFE2-.LFB2
 1187 00d2 01       		.uleb128 0x1
 1188 00d3 9C       		.byte	0x9c
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 50


 1189 00d4 0A010000 		.4byte	0x10a
 1190 00d8 07       		.uleb128 0x7
 1191 00d9 FD030000 		.4byte	.LASF20
 1192 00dd 01       		.byte	0x1
 1193 00de B9       		.byte	0xb9
 1194 00df 6B000000 		.4byte	0x6b
 1195 00e3 00000000 		.4byte	.LLST0
 1196 00e7 08       		.uleb128 0x8
 1197 00e8 06000000 		.4byte	.LVL0
 1198 00ec 51060000 		.4byte	0x651
 1199 00f0 08       		.uleb128 0x8
 1200 00f1 2A000000 		.4byte	.LVL2
 1201 00f5 5C060000 		.4byte	0x65c
 1202 00f9 09       		.uleb128 0x9
 1203 00fa 30000000 		.4byte	.LVL3
 1204 00fe 67060000 		.4byte	0x667
 1205 0102 0A       		.uleb128 0xa
 1206 0103 01       		.uleb128 0x1
 1207 0104 50       		.byte	0x50
 1208 0105 02       		.uleb128 0x2
 1209 0106 74       		.byte	0x74
 1210 0107 00       		.sleb128 0
 1211 0108 00       		.byte	0
 1212 0109 00       		.byte	0
 1213 010a 06       		.uleb128 0x6
 1214 010b 37040000 		.4byte	.LASF19
 1215 010f 01       		.byte	0x1
 1216 0110 F0       		.byte	0xf0
 1217 0111 00000000 		.4byte	.LFB3
 1218 0115 3C000000 		.4byte	.LFE3-.LFB3
 1219 0119 01       		.uleb128 0x1
 1220 011a 9C       		.byte	0x9c
 1221 011b 51010000 		.4byte	0x151
 1222 011f 07       		.uleb128 0x7
 1223 0120 FD030000 		.4byte	.LASF20
 1224 0124 01       		.byte	0x1
 1225 0125 F2       		.byte	0xf2
 1226 0126 6B000000 		.4byte	0x6b
 1227 012a 13000000 		.4byte	.LLST1
 1228 012e 08       		.uleb128 0x8
 1229 012f 06000000 		.4byte	.LVL5
 1230 0133 51060000 		.4byte	0x651
 1231 0137 08       		.uleb128 0x8
 1232 0138 16000000 		.4byte	.LVL7
 1233 013c 72060000 		.4byte	0x672
 1234 0140 09       		.uleb128 0x9
 1235 0141 30000000 		.4byte	.LVL8
 1236 0145 67060000 		.4byte	0x667
 1237 0149 0A       		.uleb128 0xa
 1238 014a 01       		.uleb128 0x1
 1239 014b 50       		.byte	0x50
 1240 014c 02       		.uleb128 0x2
 1241 014d 74       		.byte	0x74
 1242 014e 00       		.sleb128 0
 1243 014f 00       		.byte	0
 1244 0150 00       		.byte	0
 1245 0151 0B       		.uleb128 0xb
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 51


 1246 0152 B8000000 		.4byte	.LASF46
 1247 0156 01       		.byte	0x1
 1248 0157 2701     		.2byte	0x127
 1249 0159 6B000000 		.4byte	0x6b
 1250 015d 00000000 		.4byte	.LFB4
 1251 0161 0C000000 		.4byte	.LFE4-.LFB4
 1252 0165 01       		.uleb128 0x1
 1253 0166 9C       		.byte	0x9c
 1254 0167 0C       		.uleb128 0xc
 1255 0168 56040000 		.4byte	.LASF21
 1256 016c 01       		.byte	0x1
 1257 016d 3F01     		.2byte	0x13f
 1258 016f 00000000 		.4byte	.LFB5
 1259 0173 0C000000 		.4byte	.LFE5-.LFB5
 1260 0177 01       		.uleb128 0x1
 1261 0178 9C       		.byte	0x9c
 1262 0179 8C010000 		.4byte	0x18c
 1263 017d 0D       		.uleb128 0xd
 1264 017e E4000000 		.4byte	.LASF23
 1265 0182 01       		.byte	0x1
 1266 0183 3F01     		.2byte	0x13f
 1267 0185 6B000000 		.4byte	0x6b
 1268 0189 01       		.uleb128 0x1
 1269 018a 50       		.byte	0x50
 1270 018b 00       		.byte	0
 1271 018c 0C       		.uleb128 0xc
 1272 018d D8030000 		.4byte	.LASF22
 1273 0191 01       		.byte	0x1
 1274 0192 6701     		.2byte	0x167
 1275 0194 00000000 		.4byte	.LFB6
 1276 0198 0C000000 		.4byte	.LFE6-.LFB6
 1277 019c 01       		.uleb128 0x1
 1278 019d 9C       		.byte	0x9c
 1279 019e B1010000 		.4byte	0x1b1
 1280 01a2 0D       		.uleb128 0xd
 1281 01a3 90010000 		.4byte	.LASF24
 1282 01a7 01       		.byte	0x1
 1283 01a8 6701     		.2byte	0x167
 1284 01aa 6B000000 		.4byte	0x6b
 1285 01ae 01       		.uleb128 0x1
 1286 01af 50       		.byte	0x50
 1287 01b0 00       		.byte	0
 1288 01b1 0E       		.uleb128 0xe
 1289 01b2 A2000000 		.4byte	.LASF26
 1290 01b6 01       		.byte	0x1
 1291 01b7 8801     		.2byte	0x188
 1292 01b9 6B000000 		.4byte	0x6b
 1293 01bd 00000000 		.4byte	.LFB7
 1294 01c1 0C000000 		.4byte	.LFE7-.LFB7
 1295 01c5 01       		.uleb128 0x1
 1296 01c6 9C       		.byte	0x9c
 1297 01c7 DA010000 		.4byte	0x1da
 1298 01cb 0F       		.uleb128 0xf
 1299 01cc A8030000 		.4byte	.LASF25
 1300 01d0 01       		.byte	0x1
 1301 01d1 8A01     		.2byte	0x18a
 1302 01d3 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 52


 1303 01d7 01       		.uleb128 0x1
 1304 01d8 50       		.byte	0x50
 1305 01d9 00       		.byte	0
 1306 01da 0E       		.uleb128 0xe
 1307 01db BB030000 		.4byte	.LASF27
 1308 01df 01       		.byte	0x1
 1309 01e0 E501     		.2byte	0x1e5
 1310 01e2 6B000000 		.4byte	0x6b
 1311 01e6 00000000 		.4byte	.LFB8
 1312 01ea 10000000 		.4byte	.LFE8-.LFB8
 1313 01ee 01       		.uleb128 0x1
 1314 01ef 9C       		.byte	0x9c
 1315 01f0 05020000 		.4byte	0x205
 1316 01f4 10       		.uleb128 0x10
 1317 01f5 30040000 		.4byte	.LASF28
 1318 01f9 01       		.byte	0x1
 1319 01fa E701     		.2byte	0x1e7
 1320 01fc 6B000000 		.4byte	0x6b
 1321 0200 26000000 		.4byte	.LLST2
 1322 0204 00       		.byte	0
 1323 0205 0E       		.uleb128 0xe
 1324 0206 F0030000 		.4byte	.LASF29
 1325 020a 01       		.byte	0x1
 1326 020b 1402     		.2byte	0x214
 1327 020d 6B000000 		.4byte	0x6b
 1328 0211 00000000 		.4byte	.LFB9
 1329 0215 2C000000 		.4byte	.LFE9-.LFB9
 1330 0219 01       		.uleb128 0x1
 1331 021a 9C       		.byte	0x9c
 1332 021b 3E020000 		.4byte	0x23e
 1333 021f 10       		.uleb128 0x10
 1334 0220 A8030000 		.4byte	.LASF25
 1335 0224 01       		.byte	0x1
 1336 0225 1602     		.2byte	0x216
 1337 0227 6B000000 		.4byte	0x6b
 1338 022b 3E000000 		.4byte	.LLST3
 1339 022f 0F       		.uleb128 0xf
 1340 0230 26020000 		.4byte	.LASF30
 1341 0234 01       		.byte	0x1
 1342 0235 1702     		.2byte	0x217
 1343 0237 6B000000 		.4byte	0x6b
 1344 023b 01       		.uleb128 0x1
 1345 023c 53       		.byte	0x53
 1346 023d 00       		.byte	0
 1347 023e 0E       		.uleb128 0xe
 1348 023f FE000000 		.4byte	.LASF31
 1349 0243 01       		.byte	0x1
 1350 0244 7A02     		.2byte	0x27a
 1351 0246 77000000 		.4byte	0x77
 1352 024a 00000000 		.4byte	.LFB10
 1353 024e 12000000 		.4byte	.LFE10-.LFB10
 1354 0252 01       		.uleb128 0x1
 1355 0253 9C       		.byte	0x9c
 1356 0254 6B020000 		.4byte	0x26b
 1357 0258 08       		.uleb128 0x8
 1358 0259 06000000 		.4byte	.LVL21
 1359 025d DA010000 		.4byte	0x1da
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 53


 1360 0261 08       		.uleb128 0x8
 1361 0262 0C000000 		.4byte	.LVL22
 1362 0266 B1010000 		.4byte	0x1b1
 1363 026a 00       		.byte	0
 1364 026b 0E       		.uleb128 0xe
 1365 026c 1B040000 		.4byte	.LASF32
 1366 0270 01       		.byte	0x1
 1367 0271 AB02     		.2byte	0x2ab
 1368 0273 6B000000 		.4byte	0x6b
 1369 0277 00000000 		.4byte	.LFB11
 1370 027b 18000000 		.4byte	.LFE11-.LFB11
 1371 027f 01       		.uleb128 0x1
 1372 0280 9C       		.byte	0x9c
 1373 0281 94020000 		.4byte	0x294
 1374 0285 0F       		.uleb128 0xf
 1375 0286 6F010000 		.4byte	.LASF33
 1376 028a 01       		.byte	0x1
 1377 028b AE02     		.2byte	0x2ae
 1378 028d 6B000000 		.4byte	0x6b
 1379 0291 01       		.uleb128 0x1
 1380 0292 50       		.byte	0x50
 1381 0293 00       		.byte	0
 1382 0294 0C       		.uleb128 0xc
 1383 0295 70040000 		.4byte	.LASF34
 1384 0299 01       		.byte	0x1
 1385 029a F502     		.2byte	0x2f5
 1386 029c 00000000 		.4byte	.LFB12
 1387 02a0 24000000 		.4byte	.LFE12-.LFB12
 1388 02a4 01       		.uleb128 0x1
 1389 02a5 9C       		.byte	0x9c
 1390 02a6 CD020000 		.4byte	0x2cd
 1391 02aa 10       		.uleb128 0x10
 1392 02ab FD030000 		.4byte	.LASF20
 1393 02af 01       		.byte	0x1
 1394 02b0 F702     		.2byte	0x2f7
 1395 02b2 6B000000 		.4byte	0x6b
 1396 02b6 74000000 		.4byte	.LLST4
 1397 02ba 08       		.uleb128 0x8
 1398 02bb 06000000 		.4byte	.LVL24
 1399 02bf 51060000 		.4byte	0x651
 1400 02c3 08       		.uleb128 0x8
 1401 02c4 1C000000 		.4byte	.LVL25
 1402 02c8 67060000 		.4byte	0x667
 1403 02cc 00       		.byte	0
 1404 02cd 0C       		.uleb128 0xc
 1405 02ce C2020000 		.4byte	.LASF35
 1406 02d2 01       		.byte	0x1
 1407 02d3 2D03     		.2byte	0x32d
 1408 02d5 00000000 		.4byte	.LFB13
 1409 02d9 18000000 		.4byte	.LFE13-.LFB13
 1410 02dd 01       		.uleb128 0x1
 1411 02de 9C       		.byte	0x9c
 1412 02df 04030000 		.4byte	0x304
 1413 02e3 11       		.uleb128 0x11
 1414 02e4 D8000000 		.4byte	.LASF36
 1415 02e8 01       		.byte	0x1
 1416 02e9 2D03     		.2byte	0x32d
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 54


 1417 02eb 6B000000 		.4byte	0x6b
 1418 02ef 87000000 		.4byte	.LLST5
 1419 02f3 10       		.uleb128 0x10
 1420 02f4 D3010000 		.4byte	.LASF37
 1421 02f8 01       		.byte	0x1
 1422 02f9 3703     		.2byte	0x337
 1423 02fb 6B000000 		.4byte	0x6b
 1424 02ff A8000000 		.4byte	.LLST6
 1425 0303 00       		.byte	0
 1426 0304 0C       		.uleb128 0xc
 1427 0305 00020000 		.4byte	.LASF38
 1428 0309 01       		.byte	0x1
 1429 030a 5903     		.2byte	0x359
 1430 030c 00000000 		.4byte	.LFB14
 1431 0310 0C000000 		.4byte	.LFE14-.LFB14
 1432 0314 01       		.uleb128 0x1
 1433 0315 9C       		.byte	0x9c
 1434 0316 29030000 		.4byte	0x329
 1435 031a 0D       		.uleb128 0xd
 1436 031b F8010000 		.4byte	.LASF39
 1437 031f 01       		.byte	0x1
 1438 0320 5903     		.2byte	0x359
 1439 0322 6B000000 		.4byte	0x6b
 1440 0326 01       		.uleb128 0x1
 1441 0327 50       		.byte	0x50
 1442 0328 00       		.byte	0
 1443 0329 0C       		.uleb128 0xc
 1444 032a 13020000 		.4byte	.LASF40
 1445 032e 01       		.byte	0x1
 1446 032f 6D03     		.2byte	0x36d
 1447 0331 00000000 		.4byte	.LFB15
 1448 0335 0C000000 		.4byte	.LFE15-.LFB15
 1449 0339 01       		.uleb128 0x1
 1450 033a 9C       		.byte	0x9c
 1451 033b 4E030000 		.4byte	0x34e
 1452 033f 0D       		.uleb128 0xd
 1453 0340 F8010000 		.4byte	.LASF39
 1454 0344 01       		.byte	0x1
 1455 0345 6D03     		.2byte	0x36d
 1456 0347 6B000000 		.4byte	0x6b
 1457 034b 01       		.uleb128 0x1
 1458 034c 50       		.byte	0x50
 1459 034d 00       		.byte	0
 1460 034e 06       		.uleb128 0x6
 1461 034f EC000000 		.4byte	.LASF41
 1462 0353 01       		.byte	0x1
 1463 0354 6A       		.byte	0x6a
 1464 0355 00000000 		.4byte	.LFB1
 1465 0359 3C000000 		.4byte	.LFE1-.LFB1
 1466 035d 01       		.uleb128 0x1
 1467 035e 9C       		.byte	0x9c
 1468 035f 99030000 		.4byte	0x399
 1469 0363 12       		.uleb128 0x12
 1470 0364 08000000 		.4byte	.LVL32
 1471 0368 CD020000 		.4byte	0x2cd
 1472 036c 76030000 		.4byte	0x376
 1473 0370 0A       		.uleb128 0xa
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 55


 1474 0371 01       		.uleb128 0x1
 1475 0372 50       		.byte	0x50
 1476 0373 01       		.uleb128 0x1
 1477 0374 33       		.byte	0x33
 1478 0375 00       		.byte	0
 1479 0376 12       		.uleb128 0x12
 1480 0377 0E000000 		.4byte	.LVL33
 1481 037b 04030000 		.4byte	0x304
 1482 037f 89030000 		.4byte	0x389
 1483 0383 0A       		.uleb128 0xa
 1484 0384 01       		.uleb128 0x1
 1485 0385 50       		.byte	0x50
 1486 0386 01       		.uleb128 0x1
 1487 0387 30       		.byte	0x30
 1488 0388 00       		.byte	0
 1489 0389 09       		.uleb128 0x9
 1490 038a 14000000 		.4byte	.LVL34
 1491 038e 29030000 		.4byte	0x329
 1492 0392 0A       		.uleb128 0xa
 1493 0393 01       		.uleb128 0x1
 1494 0394 50       		.byte	0x50
 1495 0395 01       		.uleb128 0x1
 1496 0396 30       		.byte	0x30
 1497 0397 00       		.byte	0
 1498 0398 00       		.byte	0
 1499 0399 06       		.uleb128 0x6
 1500 039a 46000000 		.4byte	.LASF42
 1501 039e 01       		.byte	0x1
 1502 039f 4C       		.byte	0x4c
 1503 03a0 00000000 		.4byte	.LFB0
 1504 03a4 1C000000 		.4byte	.LFE0-.LFB0
 1505 03a8 01       		.uleb128 0x1
 1506 03a9 9C       		.byte	0x9c
 1507 03aa C1030000 		.4byte	0x3c1
 1508 03ae 08       		.uleb128 0x8
 1509 03af 0C000000 		.4byte	.LVL35
 1510 03b3 4E030000 		.4byte	0x34e
 1511 03b7 08       		.uleb128 0x8
 1512 03b8 16000000 		.4byte	.LVL36
 1513 03bc C3000000 		.4byte	0xc3
 1514 03c0 00       		.byte	0
 1515 03c1 0C       		.uleb128 0xc
 1516 03c2 51000000 		.4byte	.LASF43
 1517 03c6 01       		.byte	0x1
 1518 03c7 8C03     		.2byte	0x38c
 1519 03c9 00000000 		.4byte	.LFB16
 1520 03cd 0C000000 		.4byte	.LFE16-.LFB16
 1521 03d1 01       		.uleb128 0x1
 1522 03d2 9C       		.byte	0x9c
 1523 03d3 E6030000 		.4byte	0x3e6
 1524 03d7 0D       		.uleb128 0xd
 1525 03d8 90010000 		.4byte	.LASF24
 1526 03dc 01       		.byte	0x1
 1527 03dd 8C03     		.2byte	0x38c
 1528 03df 6B000000 		.4byte	0x6b
 1529 03e3 01       		.uleb128 0x1
 1530 03e4 50       		.byte	0x50
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 56


 1531 03e5 00       		.byte	0
 1532 03e6 0C       		.uleb128 0xc
 1533 03e7 E6020000 		.4byte	.LASF44
 1534 03eb 01       		.byte	0x1
 1535 03ec AE03     		.2byte	0x3ae
 1536 03ee 00000000 		.4byte	.LFB17
 1537 03f2 14000000 		.4byte	.LFE17-.LFB17
 1538 03f6 01       		.uleb128 0x1
 1539 03f7 9C       		.byte	0x9c
 1540 03f8 0B040000 		.4byte	0x40b
 1541 03fc 0D       		.uleb128 0xd
 1542 03fd 1D000000 		.4byte	.LASF45
 1543 0401 01       		.byte	0x1
 1544 0402 AE03     		.2byte	0x3ae
 1545 0404 6B000000 		.4byte	0x6b
 1546 0408 01       		.uleb128 0x1
 1547 0409 50       		.byte	0x50
 1548 040a 00       		.byte	0
 1549 040b 0B       		.uleb128 0xb
 1550 040c AD010000 		.4byte	.LASF47
 1551 0410 01       		.byte	0x1
 1552 0411 EB03     		.2byte	0x3eb
 1553 0413 6B000000 		.4byte	0x6b
 1554 0417 00000000 		.4byte	.LFB18
 1555 041b 0C000000 		.4byte	.LFE18-.LFB18
 1556 041f 01       		.uleb128 0x1
 1557 0420 9C       		.byte	0x9c
 1558 0421 0C       		.uleb128 0xc
 1559 0422 95000000 		.4byte	.LASF48
 1560 0426 01       		.byte	0x1
 1561 0427 1104     		.2byte	0x411
 1562 0429 00000000 		.4byte	.LFB19
 1563 042d 18000000 		.4byte	.LFE19-.LFB19
 1564 0431 01       		.uleb128 0x1
 1565 0432 9C       		.byte	0x9c
 1566 0433 46040000 		.4byte	0x446
 1567 0437 0D       		.uleb128 0xd
 1568 0438 1D000000 		.4byte	.LASF45
 1569 043c 01       		.byte	0x1
 1570 043d 1104     		.2byte	0x411
 1571 043f 6B000000 		.4byte	0x6b
 1572 0443 01       		.uleb128 0x1
 1573 0444 50       		.byte	0x50
 1574 0445 00       		.byte	0
 1575 0446 0C       		.uleb128 0xc
 1576 0447 47040000 		.4byte	.LASF49
 1577 044b 01       		.byte	0x1
 1578 044c 7904     		.2byte	0x479
 1579 044e 00000000 		.4byte	.LFB20
 1580 0452 24000000 		.4byte	.LFE20-.LFB20
 1581 0456 01       		.uleb128 0x1
 1582 0457 9C       		.byte	0x9c
 1583 0458 86040000 		.4byte	0x486
 1584 045c 11       		.uleb128 0x11
 1585 045d 28000000 		.4byte	.LASF50
 1586 0461 01       		.byte	0x1
 1587 0462 7904     		.2byte	0x479
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 57


 1588 0464 86040000 		.4byte	0x486
 1589 0468 C6000000 		.4byte	.LLST7
 1590 046c 10       		.uleb128 0x10
 1591 046d 87010000 		.4byte	.LASF51
 1592 0471 01       		.byte	0x1
 1593 0472 7B04     		.2byte	0x47b
 1594 0474 77000000 		.4byte	0x77
 1595 0478 08010000 		.4byte	.LLST8
 1596 047c 08       		.uleb128 0x8
 1597 047d 0E000000 		.4byte	.LVL43
 1598 0481 21040000 		.4byte	0x421
 1599 0485 00       		.byte	0
 1600 0486 13       		.uleb128 0x13
 1601 0487 04       		.byte	0x4
 1602 0488 8C040000 		.4byte	0x48c
 1603 048c 14       		.uleb128 0x14
 1604 048d 91000000 		.4byte	0x91
 1605 0491 0C       		.uleb128 0xc
 1606 0492 4A010000 		.4byte	.LASF52
 1607 0496 01       		.byte	0x1
 1608 0497 A704     		.2byte	0x4a7
 1609 0499 00000000 		.4byte	.LFB21
 1610 049d 28000000 		.4byte	.LFE21-.LFB21
 1611 04a1 01       		.uleb128 0x1
 1612 04a2 9C       		.byte	0x9c
 1613 04a3 E1040000 		.4byte	0x4e1
 1614 04a7 11       		.uleb128 0x11
 1615 04a8 28000000 		.4byte	.LASF50
 1616 04ac 01       		.byte	0x1
 1617 04ad A704     		.2byte	0x4a7
 1618 04af E1040000 		.4byte	0x4e1
 1619 04b3 49010000 		.4byte	.LLST9
 1620 04b7 11       		.uleb128 0x11
 1621 04b8 9E030000 		.4byte	.LASF53
 1622 04bc 01       		.byte	0x1
 1623 04bd A704     		.2byte	0x4a7
 1624 04bf 6B000000 		.4byte	0x6b
 1625 04c3 8B010000 		.4byte	.LLST10
 1626 04c7 10       		.uleb128 0x10
 1627 04c8 87010000 		.4byte	.LASF51
 1628 04cc 01       		.byte	0x1
 1629 04cd AA04     		.2byte	0x4aa
 1630 04cf 6B000000 		.4byte	0x6b
 1631 04d3 C5010000 		.4byte	.LLST11
 1632 04d7 08       		.uleb128 0x8
 1633 04d8 0E000000 		.4byte	.LVL51
 1634 04dc 21040000 		.4byte	0x421
 1635 04e0 00       		.byte	0
 1636 04e1 13       		.uleb128 0x13
 1637 04e2 04       		.byte	0x4
 1638 04e3 E7040000 		.4byte	0x4e7
 1639 04e7 14       		.uleb128 0x14
 1640 04e8 6B000000 		.4byte	0x6b
 1641 04ec 0C       		.uleb128 0xc
 1642 04ed 2B010000 		.4byte	.LASF54
 1643 04f1 01       		.byte	0x1
 1644 04f2 CE04     		.2byte	0x4ce
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 58


 1645 04f4 00000000 		.4byte	.LFB22
 1646 04f8 20000000 		.4byte	.LFE22-.LFB22
 1647 04fc 01       		.uleb128 0x1
 1648 04fd 9C       		.byte	0x9c
 1649 04fe 3E050000 		.4byte	0x53e
 1650 0502 11       		.uleb128 0x11
 1651 0503 1D000000 		.4byte	.LASF45
 1652 0507 01       		.byte	0x1
 1653 0508 CE04     		.2byte	0x4ce
 1654 050a 6B000000 		.4byte	0x6b
 1655 050e 06020000 		.4byte	.LLST12
 1656 0512 08       		.uleb128 0x8
 1657 0513 0C000000 		.4byte	.LVL58
 1658 0517 21040000 		.4byte	0x421
 1659 051b 12       		.uleb128 0x12
 1660 051c 12000000 		.4byte	.LVL59
 1661 0520 21040000 		.4byte	0x421
 1662 0524 2E050000 		.4byte	0x52e
 1663 0528 0A       		.uleb128 0xa
 1664 0529 01       		.uleb128 0x1
 1665 052a 50       		.byte	0x50
 1666 052b 01       		.uleb128 0x1
 1667 052c 3D       		.byte	0x3d
 1668 052d 00       		.byte	0
 1669 052e 09       		.uleb128 0x9
 1670 052f 18000000 		.4byte	.LVL60
 1671 0533 21040000 		.4byte	0x421
 1672 0537 0A       		.uleb128 0xa
 1673 0538 01       		.uleb128 0x1
 1674 0539 50       		.byte	0x50
 1675 053a 01       		.uleb128 0x1
 1676 053b 3A       		.byte	0x3a
 1677 053c 00       		.byte	0
 1678 053d 00       		.byte	0
 1679 053e 0E       		.uleb128 0xe
 1680 053f A8020000 		.4byte	.LASF55
 1681 0543 01       		.byte	0x1
 1682 0544 F904     		.2byte	0x4f9
 1683 0546 6B000000 		.4byte	0x6b
 1684 054a 00000000 		.4byte	.LFB23
 1685 054e 24000000 		.4byte	.LFE23-.LFB23
 1686 0552 01       		.uleb128 0x1
 1687 0553 9C       		.byte	0x9c
 1688 0554 69050000 		.4byte	0x569
 1689 0558 10       		.uleb128 0x10
 1690 0559 6F010000 		.4byte	.LASF33
 1691 055d 01       		.byte	0x1
 1692 055e FC04     		.2byte	0x4fc
 1693 0560 6B000000 		.4byte	0x6b
 1694 0564 27020000 		.4byte	.LLST13
 1695 0568 00       		.byte	0
 1696 0569 0C       		.uleb128 0xc
 1697 056a 18010000 		.4byte	.LASF56
 1698 056e 01       		.byte	0x1
 1699 056f 4A05     		.2byte	0x54a
 1700 0571 00000000 		.4byte	.LFB24
 1701 0575 24000000 		.4byte	.LFE24-.LFB24
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 59


 1702 0579 01       		.uleb128 0x1
 1703 057a 9C       		.byte	0x9c
 1704 057b A2050000 		.4byte	0x5a2
 1705 057f 10       		.uleb128 0x10
 1706 0580 FD030000 		.4byte	.LASF20
 1707 0584 01       		.byte	0x1
 1708 0585 4C05     		.2byte	0x54c
 1709 0587 6B000000 		.4byte	0x6b
 1710 058b 45020000 		.4byte	.LLST14
 1711 058f 08       		.uleb128 0x8
 1712 0590 06000000 		.4byte	.LVL63
 1713 0594 51060000 		.4byte	0x651
 1714 0598 08       		.uleb128 0x8
 1715 0599 1C000000 		.4byte	.LVL64
 1716 059d 67060000 		.4byte	0x667
 1717 05a1 00       		.byte	0
 1718 05a2 0C       		.uleb128 0xc
 1719 05a3 01030000 		.4byte	.LASF57
 1720 05a7 01       		.byte	0x1
 1721 05a8 A005     		.2byte	0x5a0
 1722 05aa 00000000 		.4byte	.LFB25
 1723 05ae 58000000 		.4byte	.LFE25-.LFB25
 1724 05b2 01       		.uleb128 0x1
 1725 05b3 9C       		.byte	0x9c
 1726 05b4 F5050000 		.4byte	0x5f5
 1727 05b8 11       		.uleb128 0x11
 1728 05b9 F6000000 		.4byte	.LASF58
 1729 05bd 01       		.byte	0x1
 1730 05be A005     		.2byte	0x5a0
 1731 05c0 6B000000 		.4byte	0x6b
 1732 05c4 58020000 		.4byte	.LLST15
 1733 05c8 15       		.uleb128 0x15
 1734 05c9 06000000 		.4byte	.LBB2
 1735 05cd 52000000 		.4byte	.LBE2-.LBB2
 1736 05d1 10       		.uleb128 0x10
 1737 05d2 DB010000 		.4byte	.LASF59
 1738 05d6 01       		.byte	0x1
 1739 05d7 A805     		.2byte	0x5a8
 1740 05d9 6B000000 		.4byte	0x6b
 1741 05dd 79020000 		.4byte	.LLST16
 1742 05e1 0F       		.uleb128 0xf
 1743 05e2 83000000 		.4byte	.LASF60
 1744 05e6 01       		.byte	0x1
 1745 05e7 D005     		.2byte	0x5d0
 1746 05e9 6B000000 		.4byte	0x6b
 1747 05ed 05       		.uleb128 0x5
 1748 05ee 03       		.byte	0x3
 1749 05ef 01000000 		.4byte	txPeriod.5124
 1750 05f3 00       		.byte	0
 1751 05f4 00       		.byte	0
 1752 05f5 0C       		.uleb128 0xc
 1753 05f6 97010000 		.4byte	.LASF61
 1754 05fa 01       		.byte	0x1
 1755 05fb 2406     		.2byte	0x624
 1756 05fd 00000000 		.4byte	.LFB26
 1757 0601 22000000 		.4byte	.LFE26-.LFB26
 1758 0605 01       		.uleb128 0x1
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 60


 1759 0606 9C       		.byte	0x9c
 1760 0607 40060000 		.4byte	0x640
 1761 060b 11       		.uleb128 0x11
 1762 060c D8000000 		.4byte	.LASF36
 1763 0610 01       		.byte	0x1
 1764 0611 2406     		.2byte	0x624
 1765 0613 6B000000 		.4byte	0x6b
 1766 0617 97020000 		.4byte	.LLST17
 1767 061b 08       		.uleb128 0x8
 1768 061c 08000000 		.4byte	.LVL72
 1769 0620 51010000 		.4byte	0x151
 1770 0624 08       		.uleb128 0x8
 1771 0625 12000000 		.4byte	.LVL73
 1772 0629 67010000 		.4byte	0x167
 1773 062d 08       		.uleb128 0x8
 1774 062e 18000000 		.4byte	.LVL75
 1775 0632 51010000 		.4byte	0x151
 1776 0636 08       		.uleb128 0x8
 1777 0637 20000000 		.4byte	.LVL76
 1778 063b 67010000 		.4byte	0x167
 1779 063f 00       		.byte	0
 1780 0640 16       		.uleb128 0x16
 1781 0641 0E040000 		.4byte	.LASF69
 1782 0645 01       		.byte	0x1
 1783 0646 1B       		.byte	0x1b
 1784 0647 6B000000 		.4byte	0x6b
 1785 064b 05       		.uleb128 0x5
 1786 064c 03       		.byte	0x3
 1787 064d 00000000 		.4byte	UART_initVar
 1788 0651 17       		.uleb128 0x17
 1789 0652 58010000 		.4byte	.LASF62
 1790 0656 58010000 		.4byte	.LASF62
 1791 065a 03       		.byte	0x3
 1792 065b 7D       		.byte	0x7d
 1793 065c 17       		.uleb128 0x17
 1794 065d BF010000 		.4byte	.LASF63
 1795 0661 BF010000 		.4byte	.LASF63
 1796 0665 04       		.byte	0x4
 1797 0666 27       		.byte	0x27
 1798 0667 17       		.uleb128 0x17
 1799 0668 07000000 		.4byte	.LASF64
 1800 066c 07000000 		.4byte	.LASF64
 1801 0670 03       		.byte	0x3
 1802 0671 7E       		.byte	0x7e
 1803 0672 17       		.uleb128 0x17
 1804 0673 2F020000 		.4byte	.LASF65
 1805 0677 2F020000 		.4byte	.LASF65
 1806 067b 04       		.byte	0x4
 1807 067c 28       		.byte	0x28
 1808 067d 00       		.byte	0
 1809              		.section	.debug_abbrev,"",%progbits
 1810              	.Ldebug_abbrev0:
 1811 0000 01       		.uleb128 0x1
 1812 0001 11       		.uleb128 0x11
 1813 0002 01       		.byte	0x1
 1814 0003 25       		.uleb128 0x25
 1815 0004 0E       		.uleb128 0xe
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 61


 1816 0005 13       		.uleb128 0x13
 1817 0006 0B       		.uleb128 0xb
 1818 0007 03       		.uleb128 0x3
 1819 0008 0E       		.uleb128 0xe
 1820 0009 1B       		.uleb128 0x1b
 1821 000a 0E       		.uleb128 0xe
 1822 000b 55       		.uleb128 0x55
 1823 000c 17       		.uleb128 0x17
 1824 000d 11       		.uleb128 0x11
 1825 000e 01       		.uleb128 0x1
 1826 000f 10       		.uleb128 0x10
 1827 0010 17       		.uleb128 0x17
 1828 0011 00       		.byte	0
 1829 0012 00       		.byte	0
 1830 0013 02       		.uleb128 0x2
 1831 0014 24       		.uleb128 0x24
 1832 0015 00       		.byte	0
 1833 0016 0B       		.uleb128 0xb
 1834 0017 0B       		.uleb128 0xb
 1835 0018 3E       		.uleb128 0x3e
 1836 0019 0B       		.uleb128 0xb
 1837 001a 03       		.uleb128 0x3
 1838 001b 0E       		.uleb128 0xe
 1839 001c 00       		.byte	0
 1840 001d 00       		.byte	0
 1841 001e 03       		.uleb128 0x3
 1842 001f 24       		.uleb128 0x24
 1843 0020 00       		.byte	0
 1844 0021 0B       		.uleb128 0xb
 1845 0022 0B       		.uleb128 0xb
 1846 0023 3E       		.uleb128 0x3e
 1847 0024 0B       		.uleb128 0xb
 1848 0025 03       		.uleb128 0x3
 1849 0026 08       		.uleb128 0x8
 1850 0027 00       		.byte	0
 1851 0028 00       		.byte	0
 1852 0029 04       		.uleb128 0x4
 1853 002a 16       		.uleb128 0x16
 1854 002b 00       		.byte	0
 1855 002c 03       		.uleb128 0x3
 1856 002d 0E       		.uleb128 0xe
 1857 002e 3A       		.uleb128 0x3a
 1858 002f 0B       		.uleb128 0xb
 1859 0030 3B       		.uleb128 0x3b
 1860 0031 05       		.uleb128 0x5
 1861 0032 49       		.uleb128 0x49
 1862 0033 13       		.uleb128 0x13
 1863 0034 00       		.byte	0
 1864 0035 00       		.byte	0
 1865 0036 05       		.uleb128 0x5
 1866 0037 35       		.uleb128 0x35
 1867 0038 00       		.byte	0
 1868 0039 49       		.uleb128 0x49
 1869 003a 13       		.uleb128 0x13
 1870 003b 00       		.byte	0
 1871 003c 00       		.byte	0
 1872 003d 06       		.uleb128 0x6
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 62


 1873 003e 2E       		.uleb128 0x2e
 1874 003f 01       		.byte	0x1
 1875 0040 3F       		.uleb128 0x3f
 1876 0041 19       		.uleb128 0x19
 1877 0042 03       		.uleb128 0x3
 1878 0043 0E       		.uleb128 0xe
 1879 0044 3A       		.uleb128 0x3a
 1880 0045 0B       		.uleb128 0xb
 1881 0046 3B       		.uleb128 0x3b
 1882 0047 0B       		.uleb128 0xb
 1883 0048 27       		.uleb128 0x27
 1884 0049 19       		.uleb128 0x19
 1885 004a 11       		.uleb128 0x11
 1886 004b 01       		.uleb128 0x1
 1887 004c 12       		.uleb128 0x12
 1888 004d 06       		.uleb128 0x6
 1889 004e 40       		.uleb128 0x40
 1890 004f 18       		.uleb128 0x18
 1891 0050 9742     		.uleb128 0x2117
 1892 0052 19       		.uleb128 0x19
 1893 0053 01       		.uleb128 0x1
 1894 0054 13       		.uleb128 0x13
 1895 0055 00       		.byte	0
 1896 0056 00       		.byte	0
 1897 0057 07       		.uleb128 0x7
 1898 0058 34       		.uleb128 0x34
 1899 0059 00       		.byte	0
 1900 005a 03       		.uleb128 0x3
 1901 005b 0E       		.uleb128 0xe
 1902 005c 3A       		.uleb128 0x3a
 1903 005d 0B       		.uleb128 0xb
 1904 005e 3B       		.uleb128 0x3b
 1905 005f 0B       		.uleb128 0xb
 1906 0060 49       		.uleb128 0x49
 1907 0061 13       		.uleb128 0x13
 1908 0062 02       		.uleb128 0x2
 1909 0063 17       		.uleb128 0x17
 1910 0064 00       		.byte	0
 1911 0065 00       		.byte	0
 1912 0066 08       		.uleb128 0x8
 1913 0067 898201   		.uleb128 0x4109
 1914 006a 00       		.byte	0
 1915 006b 11       		.uleb128 0x11
 1916 006c 01       		.uleb128 0x1
 1917 006d 31       		.uleb128 0x31
 1918 006e 13       		.uleb128 0x13
 1919 006f 00       		.byte	0
 1920 0070 00       		.byte	0
 1921 0071 09       		.uleb128 0x9
 1922 0072 898201   		.uleb128 0x4109
 1923 0075 01       		.byte	0x1
 1924 0076 11       		.uleb128 0x11
 1925 0077 01       		.uleb128 0x1
 1926 0078 31       		.uleb128 0x31
 1927 0079 13       		.uleb128 0x13
 1928 007a 00       		.byte	0
 1929 007b 00       		.byte	0
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 63


 1930 007c 0A       		.uleb128 0xa
 1931 007d 8A8201   		.uleb128 0x410a
 1932 0080 00       		.byte	0
 1933 0081 02       		.uleb128 0x2
 1934 0082 18       		.uleb128 0x18
 1935 0083 9142     		.uleb128 0x2111
 1936 0085 18       		.uleb128 0x18
 1937 0086 00       		.byte	0
 1938 0087 00       		.byte	0
 1939 0088 0B       		.uleb128 0xb
 1940 0089 2E       		.uleb128 0x2e
 1941 008a 00       		.byte	0
 1942 008b 3F       		.uleb128 0x3f
 1943 008c 19       		.uleb128 0x19
 1944 008d 03       		.uleb128 0x3
 1945 008e 0E       		.uleb128 0xe
 1946 008f 3A       		.uleb128 0x3a
 1947 0090 0B       		.uleb128 0xb
 1948 0091 3B       		.uleb128 0x3b
 1949 0092 05       		.uleb128 0x5
 1950 0093 27       		.uleb128 0x27
 1951 0094 19       		.uleb128 0x19
 1952 0095 49       		.uleb128 0x49
 1953 0096 13       		.uleb128 0x13
 1954 0097 11       		.uleb128 0x11
 1955 0098 01       		.uleb128 0x1
 1956 0099 12       		.uleb128 0x12
 1957 009a 06       		.uleb128 0x6
 1958 009b 40       		.uleb128 0x40
 1959 009c 18       		.uleb128 0x18
 1960 009d 9742     		.uleb128 0x2117
 1961 009f 19       		.uleb128 0x19
 1962 00a0 00       		.byte	0
 1963 00a1 00       		.byte	0
 1964 00a2 0C       		.uleb128 0xc
 1965 00a3 2E       		.uleb128 0x2e
 1966 00a4 01       		.byte	0x1
 1967 00a5 3F       		.uleb128 0x3f
 1968 00a6 19       		.uleb128 0x19
 1969 00a7 03       		.uleb128 0x3
 1970 00a8 0E       		.uleb128 0xe
 1971 00a9 3A       		.uleb128 0x3a
 1972 00aa 0B       		.uleb128 0xb
 1973 00ab 3B       		.uleb128 0x3b
 1974 00ac 05       		.uleb128 0x5
 1975 00ad 27       		.uleb128 0x27
 1976 00ae 19       		.uleb128 0x19
 1977 00af 11       		.uleb128 0x11
 1978 00b0 01       		.uleb128 0x1
 1979 00b1 12       		.uleb128 0x12
 1980 00b2 06       		.uleb128 0x6
 1981 00b3 40       		.uleb128 0x40
 1982 00b4 18       		.uleb128 0x18
 1983 00b5 9742     		.uleb128 0x2117
 1984 00b7 19       		.uleb128 0x19
 1985 00b8 01       		.uleb128 0x1
 1986 00b9 13       		.uleb128 0x13
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 64


 1987 00ba 00       		.byte	0
 1988 00bb 00       		.byte	0
 1989 00bc 0D       		.uleb128 0xd
 1990 00bd 05       		.uleb128 0x5
 1991 00be 00       		.byte	0
 1992 00bf 03       		.uleb128 0x3
 1993 00c0 0E       		.uleb128 0xe
 1994 00c1 3A       		.uleb128 0x3a
 1995 00c2 0B       		.uleb128 0xb
 1996 00c3 3B       		.uleb128 0x3b
 1997 00c4 05       		.uleb128 0x5
 1998 00c5 49       		.uleb128 0x49
 1999 00c6 13       		.uleb128 0x13
 2000 00c7 02       		.uleb128 0x2
 2001 00c8 18       		.uleb128 0x18
 2002 00c9 00       		.byte	0
 2003 00ca 00       		.byte	0
 2004 00cb 0E       		.uleb128 0xe
 2005 00cc 2E       		.uleb128 0x2e
 2006 00cd 01       		.byte	0x1
 2007 00ce 3F       		.uleb128 0x3f
 2008 00cf 19       		.uleb128 0x19
 2009 00d0 03       		.uleb128 0x3
 2010 00d1 0E       		.uleb128 0xe
 2011 00d2 3A       		.uleb128 0x3a
 2012 00d3 0B       		.uleb128 0xb
 2013 00d4 3B       		.uleb128 0x3b
 2014 00d5 05       		.uleb128 0x5
 2015 00d6 27       		.uleb128 0x27
 2016 00d7 19       		.uleb128 0x19
 2017 00d8 49       		.uleb128 0x49
 2018 00d9 13       		.uleb128 0x13
 2019 00da 11       		.uleb128 0x11
 2020 00db 01       		.uleb128 0x1
 2021 00dc 12       		.uleb128 0x12
 2022 00dd 06       		.uleb128 0x6
 2023 00de 40       		.uleb128 0x40
 2024 00df 18       		.uleb128 0x18
 2025 00e0 9742     		.uleb128 0x2117
 2026 00e2 19       		.uleb128 0x19
 2027 00e3 01       		.uleb128 0x1
 2028 00e4 13       		.uleb128 0x13
 2029 00e5 00       		.byte	0
 2030 00e6 00       		.byte	0
 2031 00e7 0F       		.uleb128 0xf
 2032 00e8 34       		.uleb128 0x34
 2033 00e9 00       		.byte	0
 2034 00ea 03       		.uleb128 0x3
 2035 00eb 0E       		.uleb128 0xe
 2036 00ec 3A       		.uleb128 0x3a
 2037 00ed 0B       		.uleb128 0xb
 2038 00ee 3B       		.uleb128 0x3b
 2039 00ef 05       		.uleb128 0x5
 2040 00f0 49       		.uleb128 0x49
 2041 00f1 13       		.uleb128 0x13
 2042 00f2 02       		.uleb128 0x2
 2043 00f3 18       		.uleb128 0x18
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 65


 2044 00f4 00       		.byte	0
 2045 00f5 00       		.byte	0
 2046 00f6 10       		.uleb128 0x10
 2047 00f7 34       		.uleb128 0x34
 2048 00f8 00       		.byte	0
 2049 00f9 03       		.uleb128 0x3
 2050 00fa 0E       		.uleb128 0xe
 2051 00fb 3A       		.uleb128 0x3a
 2052 00fc 0B       		.uleb128 0xb
 2053 00fd 3B       		.uleb128 0x3b
 2054 00fe 05       		.uleb128 0x5
 2055 00ff 49       		.uleb128 0x49
 2056 0100 13       		.uleb128 0x13
 2057 0101 02       		.uleb128 0x2
 2058 0102 17       		.uleb128 0x17
 2059 0103 00       		.byte	0
 2060 0104 00       		.byte	0
 2061 0105 11       		.uleb128 0x11
 2062 0106 05       		.uleb128 0x5
 2063 0107 00       		.byte	0
 2064 0108 03       		.uleb128 0x3
 2065 0109 0E       		.uleb128 0xe
 2066 010a 3A       		.uleb128 0x3a
 2067 010b 0B       		.uleb128 0xb
 2068 010c 3B       		.uleb128 0x3b
 2069 010d 05       		.uleb128 0x5
 2070 010e 49       		.uleb128 0x49
 2071 010f 13       		.uleb128 0x13
 2072 0110 02       		.uleb128 0x2
 2073 0111 17       		.uleb128 0x17
 2074 0112 00       		.byte	0
 2075 0113 00       		.byte	0
 2076 0114 12       		.uleb128 0x12
 2077 0115 898201   		.uleb128 0x4109
 2078 0118 01       		.byte	0x1
 2079 0119 11       		.uleb128 0x11
 2080 011a 01       		.uleb128 0x1
 2081 011b 31       		.uleb128 0x31
 2082 011c 13       		.uleb128 0x13
 2083 011d 01       		.uleb128 0x1
 2084 011e 13       		.uleb128 0x13
 2085 011f 00       		.byte	0
 2086 0120 00       		.byte	0
 2087 0121 13       		.uleb128 0x13
 2088 0122 0F       		.uleb128 0xf
 2089 0123 00       		.byte	0
 2090 0124 0B       		.uleb128 0xb
 2091 0125 0B       		.uleb128 0xb
 2092 0126 49       		.uleb128 0x49
 2093 0127 13       		.uleb128 0x13
 2094 0128 00       		.byte	0
 2095 0129 00       		.byte	0
 2096 012a 14       		.uleb128 0x14
 2097 012b 26       		.uleb128 0x26
 2098 012c 00       		.byte	0
 2099 012d 49       		.uleb128 0x49
 2100 012e 13       		.uleb128 0x13
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 66


 2101 012f 00       		.byte	0
 2102 0130 00       		.byte	0
 2103 0131 15       		.uleb128 0x15
 2104 0132 0B       		.uleb128 0xb
 2105 0133 01       		.byte	0x1
 2106 0134 11       		.uleb128 0x11
 2107 0135 01       		.uleb128 0x1
 2108 0136 12       		.uleb128 0x12
 2109 0137 06       		.uleb128 0x6
 2110 0138 00       		.byte	0
 2111 0139 00       		.byte	0
 2112 013a 16       		.uleb128 0x16
 2113 013b 34       		.uleb128 0x34
 2114 013c 00       		.byte	0
 2115 013d 03       		.uleb128 0x3
 2116 013e 0E       		.uleb128 0xe
 2117 013f 3A       		.uleb128 0x3a
 2118 0140 0B       		.uleb128 0xb
 2119 0141 3B       		.uleb128 0x3b
 2120 0142 0B       		.uleb128 0xb
 2121 0143 49       		.uleb128 0x49
 2122 0144 13       		.uleb128 0x13
 2123 0145 3F       		.uleb128 0x3f
 2124 0146 19       		.uleb128 0x19
 2125 0147 02       		.uleb128 0x2
 2126 0148 18       		.uleb128 0x18
 2127 0149 00       		.byte	0
 2128 014a 00       		.byte	0
 2129 014b 17       		.uleb128 0x17
 2130 014c 2E       		.uleb128 0x2e
 2131 014d 00       		.byte	0
 2132 014e 3F       		.uleb128 0x3f
 2133 014f 19       		.uleb128 0x19
 2134 0150 3C       		.uleb128 0x3c
 2135 0151 19       		.uleb128 0x19
 2136 0152 6E       		.uleb128 0x6e
 2137 0153 0E       		.uleb128 0xe
 2138 0154 03       		.uleb128 0x3
 2139 0155 0E       		.uleb128 0xe
 2140 0156 3A       		.uleb128 0x3a
 2141 0157 0B       		.uleb128 0xb
 2142 0158 3B       		.uleb128 0x3b
 2143 0159 0B       		.uleb128 0xb
 2144 015a 00       		.byte	0
 2145 015b 00       		.byte	0
 2146 015c 00       		.byte	0
 2147              		.section	.debug_loc,"",%progbits
 2148              	.Ldebug_loc0:
 2149              	.LLST0:
 2150 0000 08000000 		.4byte	.LVL1
 2151 0004 32000000 		.4byte	.LVL4
 2152 0008 0100     		.2byte	0x1
 2153 000a 54       		.byte	0x54
 2154 000b 00000000 		.4byte	0
 2155 000f 00000000 		.4byte	0
 2156              	.LLST1:
 2157 0013 08000000 		.4byte	.LVL6
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 67


 2158 0017 32000000 		.4byte	.LVL9
 2159 001b 0100     		.2byte	0x1
 2160 001d 54       		.byte	0x54
 2161 001e 00000000 		.4byte	0
 2162 0022 00000000 		.4byte	0
 2163              	.LLST2:
 2164 0026 04000000 		.4byte	.LVL13
 2165 002a 08000000 		.4byte	.LVL14
 2166 002e 0600     		.2byte	0x6
 2167 0030 70       		.byte	0x70
 2168 0031 00       		.sleb128 0
 2169 0032 08       		.byte	0x8
 2170 0033 7F       		.byte	0x7f
 2171 0034 1A       		.byte	0x1a
 2172 0035 9F       		.byte	0x9f
 2173 0036 00000000 		.4byte	0
 2174 003a 00000000 		.4byte	0
 2175              	.LLST3:
 2176 003e 00000000 		.4byte	.LVL15
 2177 0042 12000000 		.4byte	.LVL17
 2178 0046 0200     		.2byte	0x2
 2179 0048 30       		.byte	0x30
 2180 0049 9F       		.byte	0x9f
 2181 004a 12000000 		.4byte	.LVL17
 2182 004e 1A000000 		.4byte	.LVL18
 2183 0052 0100     		.2byte	0x1
 2184 0054 50       		.byte	0x50
 2185 0055 1A000000 		.4byte	.LVL18
 2186 0059 1E000000 		.4byte	.LVL19
 2187 005d 0200     		.2byte	0x2
 2188 005f 30       		.byte	0x30
 2189 0060 9F       		.byte	0x9f
 2190 0061 1E000000 		.4byte	.LVL19
 2191 0065 2C000000 		.4byte	.LFE9
 2192 0069 0100     		.2byte	0x1
 2193 006b 50       		.byte	0x50
 2194 006c 00000000 		.4byte	0
 2195 0070 00000000 		.4byte	0
 2196              	.LLST4:
 2197 0074 06000000 		.4byte	.LVL24
 2198 0078 1B000000 		.4byte	.LVL25-1
 2199 007c 0100     		.2byte	0x1
 2200 007e 50       		.byte	0x50
 2201 007f 00000000 		.4byte	0
 2202 0083 00000000 		.4byte	0
 2203              	.LLST5:
 2204 0087 00000000 		.4byte	.LVL26
 2205 008b 0A000000 		.4byte	.LVL28
 2206 008f 0100     		.2byte	0x1
 2207 0091 50       		.byte	0x50
 2208 0092 0A000000 		.4byte	.LVL28
 2209 0096 18000000 		.4byte	.LFE13
 2210 009a 0400     		.2byte	0x4
 2211 009c F3       		.byte	0xf3
 2212 009d 01       		.uleb128 0x1
 2213 009e 50       		.byte	0x50
 2214 009f 9F       		.byte	0x9f
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 68


 2215 00a0 00000000 		.4byte	0
 2216 00a4 00000000 		.4byte	0
 2217              	.LLST6:
 2218 00a8 08000000 		.4byte	.LVL27
 2219 00ac 0E000000 		.4byte	.LVL29
 2220 00b0 0100     		.2byte	0x1
 2221 00b2 53       		.byte	0x53
 2222 00b3 0E000000 		.4byte	.LVL29
 2223 00b7 18000000 		.4byte	.LFE13
 2224 00bb 0100     		.2byte	0x1
 2225 00bd 50       		.byte	0x50
 2226 00be 00000000 		.4byte	0
 2227 00c2 00000000 		.4byte	0
 2228              	.LLST7:
 2229 00c6 00000000 		.4byte	.LVL40
 2230 00ca 0A000000 		.4byte	.LVL42
 2231 00ce 0100     		.2byte	0x1
 2232 00d0 50       		.byte	0x50
 2233 00d1 0A000000 		.4byte	.LVL42
 2234 00d5 14000000 		.4byte	.LVL46
 2235 00d9 0100     		.2byte	0x1
 2236 00db 55       		.byte	0x55
 2237 00dc 14000000 		.4byte	.LVL46
 2238 00e0 18000000 		.4byte	.LVL47
 2239 00e4 0100     		.2byte	0x1
 2240 00e6 50       		.byte	0x50
 2241 00e7 18000000 		.4byte	.LVL47
 2242 00eb 20000000 		.4byte	.LVL48
 2243 00ef 0100     		.2byte	0x1
 2244 00f1 55       		.byte	0x55
 2245 00f2 20000000 		.4byte	.LVL48
 2246 00f6 24000000 		.4byte	.LFE20
 2247 00fa 0400     		.2byte	0x4
 2248 00fc F3       		.byte	0xf3
 2249 00fd 01       		.uleb128 0x1
 2250 00fe 50       		.byte	0x50
 2251 00ff 9F       		.byte	0x9f
 2252 0100 00000000 		.4byte	0
 2253 0104 00000000 		.4byte	0
 2254              	.LLST8:
 2255 0108 02000000 		.4byte	.LVL41
 2256 010c 0A000000 		.4byte	.LVL42
 2257 0110 0200     		.2byte	0x2
 2258 0112 30       		.byte	0x30
 2259 0113 9F       		.byte	0x9f
 2260 0114 0A000000 		.4byte	.LVL42
 2261 0118 10000000 		.4byte	.LVL44
 2262 011c 0100     		.2byte	0x1
 2263 011e 54       		.byte	0x54
 2264 011f 12000000 		.4byte	.LVL45
 2265 0123 14000000 		.4byte	.LVL46
 2266 0127 0100     		.2byte	0x1
 2267 0129 54       		.byte	0x54
 2268 012a 14000000 		.4byte	.LVL46
 2269 012e 18000000 		.4byte	.LVL47
 2270 0132 0200     		.2byte	0x2
 2271 0134 30       		.byte	0x30
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 69


 2272 0135 9F       		.byte	0x9f
 2273 0136 18000000 		.4byte	.LVL47
 2274 013a 20000000 		.4byte	.LVL48
 2275 013e 0100     		.2byte	0x1
 2276 0140 54       		.byte	0x54
 2277 0141 00000000 		.4byte	0
 2278 0145 00000000 		.4byte	0
 2279              	.LLST9:
 2280 0149 00000000 		.4byte	.LVL49
 2281 014d 08000000 		.4byte	.LVL50
 2282 0151 0100     		.2byte	0x1
 2283 0153 50       		.byte	0x50
 2284 0154 08000000 		.4byte	.LVL50
 2285 0158 14000000 		.4byte	.LVL54
 2286 015c 0100     		.2byte	0x1
 2287 015e 56       		.byte	0x56
 2288 015f 14000000 		.4byte	.LVL54
 2289 0163 1C000000 		.4byte	.LVL55
 2290 0167 0100     		.2byte	0x1
 2291 0169 50       		.byte	0x50
 2292 016a 1C000000 		.4byte	.LVL55
 2293 016e 22000000 		.4byte	.LVL56
 2294 0172 0100     		.2byte	0x1
 2295 0174 56       		.byte	0x56
 2296 0175 22000000 		.4byte	.LVL56
 2297 0179 28000000 		.4byte	.LFE21
 2298 017d 0400     		.2byte	0x4
 2299 017f F3       		.byte	0xf3
 2300 0180 01       		.uleb128 0x1
 2301 0181 50       		.byte	0x50
 2302 0182 9F       		.byte	0x9f
 2303 0183 00000000 		.4byte	0
 2304 0187 00000000 		.4byte	0
 2305              	.LLST10:
 2306 018b 00000000 		.4byte	.LVL49
 2307 018f 08000000 		.4byte	.LVL50
 2308 0193 0100     		.2byte	0x1
 2309 0195 51       		.byte	0x51
 2310 0196 08000000 		.4byte	.LVL50
 2311 019a 14000000 		.4byte	.LVL54
 2312 019e 0400     		.2byte	0x4
 2313 01a0 F3       		.byte	0xf3
 2314 01a1 01       		.uleb128 0x1
 2315 01a2 51       		.byte	0x51
 2316 01a3 9F       		.byte	0x9f
 2317 01a4 14000000 		.4byte	.LVL54
 2318 01a8 1C000000 		.4byte	.LVL55
 2319 01ac 0100     		.2byte	0x1
 2320 01ae 51       		.byte	0x51
 2321 01af 1C000000 		.4byte	.LVL55
 2322 01b3 28000000 		.4byte	.LFE21
 2323 01b7 0400     		.2byte	0x4
 2324 01b9 F3       		.byte	0xf3
 2325 01ba 01       		.uleb128 0x1
 2326 01bb 51       		.byte	0x51
 2327 01bc 9F       		.byte	0x9f
 2328 01bd 00000000 		.4byte	0
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 70


 2329 01c1 00000000 		.4byte	0
 2330              	.LLST11:
 2331 01c5 00000000 		.4byte	.LVL49
 2332 01c9 08000000 		.4byte	.LVL50
 2333 01cd 0200     		.2byte	0x2
 2334 01cf 30       		.byte	0x30
 2335 01d0 9F       		.byte	0x9f
 2336 01d1 08000000 		.4byte	.LVL50
 2337 01d5 10000000 		.4byte	.LVL52
 2338 01d9 0100     		.2byte	0x1
 2339 01db 54       		.byte	0x54
 2340 01dc 12000000 		.4byte	.LVL53
 2341 01e0 14000000 		.4byte	.LVL54
 2342 01e4 0100     		.2byte	0x1
 2343 01e6 54       		.byte	0x54
 2344 01e7 14000000 		.4byte	.LVL54
 2345 01eb 1C000000 		.4byte	.LVL55
 2346 01ef 0200     		.2byte	0x2
 2347 01f1 30       		.byte	0x30
 2348 01f2 9F       		.byte	0x9f
 2349 01f3 1C000000 		.4byte	.LVL55
 2350 01f7 22000000 		.4byte	.LVL56
 2351 01fb 0100     		.2byte	0x1
 2352 01fd 54       		.byte	0x54
 2353 01fe 00000000 		.4byte	0
 2354 0202 00000000 		.4byte	0
 2355              	.LLST12:
 2356 0206 00000000 		.4byte	.LVL57
 2357 020a 0B000000 		.4byte	.LVL58-1
 2358 020e 0100     		.2byte	0x1
 2359 0210 50       		.byte	0x50
 2360 0211 0B000000 		.4byte	.LVL58-1
 2361 0215 20000000 		.4byte	.LFE22
 2362 0219 0400     		.2byte	0x4
 2363 021b F3       		.byte	0xf3
 2364 021c 01       		.uleb128 0x1
 2365 021d 50       		.byte	0x50
 2366 021e 9F       		.byte	0x9f
 2367 021f 00000000 		.4byte	0
 2368 0223 00000000 		.4byte	0
 2369              	.LLST13:
 2370 0227 06000000 		.4byte	.LVL61
 2371 022b 1C000000 		.4byte	.LVL62
 2372 022f 0100     		.2byte	0x1
 2373 0231 53       		.byte	0x53
 2374 0232 1C000000 		.4byte	.LVL62
 2375 0236 24000000 		.4byte	.LFE23
 2376 023a 0100     		.2byte	0x1
 2377 023c 50       		.byte	0x50
 2378 023d 00000000 		.4byte	0
 2379 0241 00000000 		.4byte	0
 2380              	.LLST14:
 2381 0245 06000000 		.4byte	.LVL63
 2382 0249 1B000000 		.4byte	.LVL64-1
 2383 024d 0100     		.2byte	0x1
 2384 024f 50       		.byte	0x50
 2385 0250 00000000 		.4byte	0
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 71


 2386 0254 00000000 		.4byte	0
 2387              	.LLST15:
 2388 0258 00000000 		.4byte	.LVL65
 2389 025c 3C000000 		.4byte	.LVL70
 2390 0260 0100     		.2byte	0x1
 2391 0262 50       		.byte	0x50
 2392 0263 3C000000 		.4byte	.LVL70
 2393 0267 58000000 		.4byte	.LFE25
 2394 026b 0400     		.2byte	0x4
 2395 026d F3       		.byte	0xf3
 2396 026e 01       		.uleb128 0x1
 2397 026f 50       		.byte	0x50
 2398 0270 9F       		.byte	0x9f
 2399 0271 00000000 		.4byte	0
 2400 0275 00000000 		.4byte	0
 2401              	.LLST16:
 2402 0279 22000000 		.4byte	.LVL66
 2403 027d 28000000 		.4byte	.LVL67
 2404 0281 0100     		.2byte	0x1
 2405 0283 53       		.byte	0x53
 2406 0284 34000000 		.4byte	.LVL68
 2407 0288 3A000000 		.4byte	.LVL69
 2408 028c 0100     		.2byte	0x1
 2409 028e 53       		.byte	0x53
 2410 028f 00000000 		.4byte	0
 2411 0293 00000000 		.4byte	0
 2412              	.LLST17:
 2413 0297 00000000 		.4byte	.LVL71
 2414 029b 07000000 		.4byte	.LVL72-1
 2415 029f 0100     		.2byte	0x1
 2416 02a1 50       		.byte	0x50
 2417 02a2 07000000 		.4byte	.LVL72-1
 2418 02a6 14000000 		.4byte	.LVL74
 2419 02aa 0400     		.2byte	0x4
 2420 02ac F3       		.byte	0xf3
 2421 02ad 01       		.uleb128 0x1
 2422 02ae 50       		.byte	0x50
 2423 02af 9F       		.byte	0x9f
 2424 02b0 14000000 		.4byte	.LVL74
 2425 02b4 17000000 		.4byte	.LVL75-1
 2426 02b8 0100     		.2byte	0x1
 2427 02ba 50       		.byte	0x50
 2428 02bb 17000000 		.4byte	.LVL75-1
 2429 02bf 22000000 		.4byte	.LFE26
 2430 02c3 0400     		.2byte	0x4
 2431 02c5 F3       		.byte	0xf3
 2432 02c6 01       		.uleb128 0x1
 2433 02c7 50       		.byte	0x50
 2434 02c8 9F       		.byte	0x9f
 2435 02c9 00000000 		.4byte	0
 2436 02cd 00000000 		.4byte	0
 2437              		.section	.debug_aranges,"",%progbits
 2438 0000 EC000000 		.4byte	0xec
 2439 0004 0200     		.2byte	0x2
 2440 0006 00000000 		.4byte	.Ldebug_info0
 2441 000a 04       		.byte	0x4
 2442 000b 00       		.byte	0
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 72


 2443 000c 0000     		.2byte	0
 2444 000e 0000     		.2byte	0
 2445 0010 00000000 		.4byte	.LFB2
 2446 0014 38000000 		.4byte	.LFE2-.LFB2
 2447 0018 00000000 		.4byte	.LFB3
 2448 001c 3C000000 		.4byte	.LFE3-.LFB3
 2449 0020 00000000 		.4byte	.LFB4
 2450 0024 0C000000 		.4byte	.LFE4-.LFB4
 2451 0028 00000000 		.4byte	.LFB5
 2452 002c 0C000000 		.4byte	.LFE5-.LFB5
 2453 0030 00000000 		.4byte	.LFB6
 2454 0034 0C000000 		.4byte	.LFE6-.LFB6
 2455 0038 00000000 		.4byte	.LFB7
 2456 003c 0C000000 		.4byte	.LFE7-.LFB7
 2457 0040 00000000 		.4byte	.LFB8
 2458 0044 10000000 		.4byte	.LFE8-.LFB8
 2459 0048 00000000 		.4byte	.LFB9
 2460 004c 2C000000 		.4byte	.LFE9-.LFB9
 2461 0050 00000000 		.4byte	.LFB10
 2462 0054 12000000 		.4byte	.LFE10-.LFB10
 2463 0058 00000000 		.4byte	.LFB11
 2464 005c 18000000 		.4byte	.LFE11-.LFB11
 2465 0060 00000000 		.4byte	.LFB12
 2466 0064 24000000 		.4byte	.LFE12-.LFB12
 2467 0068 00000000 		.4byte	.LFB13
 2468 006c 18000000 		.4byte	.LFE13-.LFB13
 2469 0070 00000000 		.4byte	.LFB14
 2470 0074 0C000000 		.4byte	.LFE14-.LFB14
 2471 0078 00000000 		.4byte	.LFB15
 2472 007c 0C000000 		.4byte	.LFE15-.LFB15
 2473 0080 00000000 		.4byte	.LFB1
 2474 0084 3C000000 		.4byte	.LFE1-.LFB1
 2475 0088 00000000 		.4byte	.LFB0
 2476 008c 1C000000 		.4byte	.LFE0-.LFB0
 2477 0090 00000000 		.4byte	.LFB16
 2478 0094 0C000000 		.4byte	.LFE16-.LFB16
 2479 0098 00000000 		.4byte	.LFB17
 2480 009c 14000000 		.4byte	.LFE17-.LFB17
 2481 00a0 00000000 		.4byte	.LFB18
 2482 00a4 0C000000 		.4byte	.LFE18-.LFB18
 2483 00a8 00000000 		.4byte	.LFB19
 2484 00ac 18000000 		.4byte	.LFE19-.LFB19
 2485 00b0 00000000 		.4byte	.LFB20
 2486 00b4 24000000 		.4byte	.LFE20-.LFB20
 2487 00b8 00000000 		.4byte	.LFB21
 2488 00bc 28000000 		.4byte	.LFE21-.LFB21
 2489 00c0 00000000 		.4byte	.LFB22
 2490 00c4 20000000 		.4byte	.LFE22-.LFB22
 2491 00c8 00000000 		.4byte	.LFB23
 2492 00cc 24000000 		.4byte	.LFE23-.LFB23
 2493 00d0 00000000 		.4byte	.LFB24
 2494 00d4 24000000 		.4byte	.LFE24-.LFB24
 2495 00d8 00000000 		.4byte	.LFB25
 2496 00dc 58000000 		.4byte	.LFE25-.LFB25
 2497 00e0 00000000 		.4byte	.LFB26
 2498 00e4 22000000 		.4byte	.LFE26-.LFB26
 2499 00e8 00000000 		.4byte	0
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 73


 2500 00ec 00000000 		.4byte	0
 2501              		.section	.debug_ranges,"",%progbits
 2502              	.Ldebug_ranges0:
 2503 0000 00000000 		.4byte	.LFB2
 2504 0004 38000000 		.4byte	.LFE2
 2505 0008 00000000 		.4byte	.LFB3
 2506 000c 3C000000 		.4byte	.LFE3
 2507 0010 00000000 		.4byte	.LFB4
 2508 0014 0C000000 		.4byte	.LFE4
 2509 0018 00000000 		.4byte	.LFB5
 2510 001c 0C000000 		.4byte	.LFE5
 2511 0020 00000000 		.4byte	.LFB6
 2512 0024 0C000000 		.4byte	.LFE6
 2513 0028 00000000 		.4byte	.LFB7
 2514 002c 0C000000 		.4byte	.LFE7
 2515 0030 00000000 		.4byte	.LFB8
 2516 0034 10000000 		.4byte	.LFE8
 2517 0038 00000000 		.4byte	.LFB9
 2518 003c 2C000000 		.4byte	.LFE9
 2519 0040 00000000 		.4byte	.LFB10
 2520 0044 12000000 		.4byte	.LFE10
 2521 0048 00000000 		.4byte	.LFB11
 2522 004c 18000000 		.4byte	.LFE11
 2523 0050 00000000 		.4byte	.LFB12
 2524 0054 24000000 		.4byte	.LFE12
 2525 0058 00000000 		.4byte	.LFB13
 2526 005c 18000000 		.4byte	.LFE13
 2527 0060 00000000 		.4byte	.LFB14
 2528 0064 0C000000 		.4byte	.LFE14
 2529 0068 00000000 		.4byte	.LFB15
 2530 006c 0C000000 		.4byte	.LFE15
 2531 0070 00000000 		.4byte	.LFB1
 2532 0074 3C000000 		.4byte	.LFE1
 2533 0078 00000000 		.4byte	.LFB0
 2534 007c 1C000000 		.4byte	.LFE0
 2535 0080 00000000 		.4byte	.LFB16
 2536 0084 0C000000 		.4byte	.LFE16
 2537 0088 00000000 		.4byte	.LFB17
 2538 008c 14000000 		.4byte	.LFE17
 2539 0090 00000000 		.4byte	.LFB18
 2540 0094 0C000000 		.4byte	.LFE18
 2541 0098 00000000 		.4byte	.LFB19
 2542 009c 18000000 		.4byte	.LFE19
 2543 00a0 00000000 		.4byte	.LFB20
 2544 00a4 24000000 		.4byte	.LFE20
 2545 00a8 00000000 		.4byte	.LFB21
 2546 00ac 28000000 		.4byte	.LFE21
 2547 00b0 00000000 		.4byte	.LFB22
 2548 00b4 20000000 		.4byte	.LFE22
 2549 00b8 00000000 		.4byte	.LFB23
 2550 00bc 24000000 		.4byte	.LFE23
 2551 00c0 00000000 		.4byte	.LFB24
 2552 00c4 24000000 		.4byte	.LFE24
 2553 00c8 00000000 		.4byte	.LFB25
 2554 00cc 58000000 		.4byte	.LFE25
 2555 00d0 00000000 		.4byte	.LFB26
 2556 00d4 22000000 		.4byte	.LFE26
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 74


 2557 00d8 00000000 		.4byte	0
 2558 00dc 00000000 		.4byte	0
 2559              		.section	.debug_line,"",%progbits
 2560              	.Ldebug_line0:
 2561 0000 C5020000 		.section	.debug_str,"MS",%progbits,1
 2561      02005F00 
 2561      00000201 
 2561      FB0E0D00 
 2561      01010101 
 2562              	.LASF10:
 2563 0000 75696E74 		.ascii	"uint16\000"
 2563      313600
 2564              	.LASF64:
 2565 0007 43794578 		.ascii	"CyExitCriticalSection\000"
 2565      69744372 
 2565      69746963 
 2565      616C5365 
 2565      6374696F 
 2566              	.LASF45:
 2567 001d 74784461 		.ascii	"txDataByte\000"
 2567      74614279 
 2567      746500
 2568              	.LASF50:
 2569 0028 73747269 		.ascii	"string\000"
 2569      6E6700
 2570              	.LASF7:
 2571 002f 6C6F6E67 		.ascii	"long long unsigned int\000"
 2571      206C6F6E 
 2571      6720756E 
 2571      7369676E 
 2571      65642069 
 2572              	.LASF42:
 2573 0046 55415254 		.ascii	"UART_Start\000"
 2573      5F537461 
 2573      727400
 2574              	.LASF43:
 2575 0051 55415254 		.ascii	"UART_SetTxInterruptMode\000"
 2575      5F536574 
 2575      5478496E 
 2575      74657272 
 2575      7570744D 
 2576              	.LASF6:
 2577 0069 6C6F6E67 		.ascii	"long long int\000"
 2577      206C6F6E 
 2577      6720696E 
 2577      7400
 2578              	.LASF0:
 2579 0077 7369676E 		.ascii	"signed char\000"
 2579      65642063 
 2579      68617200 
 2580              	.LASF60:
 2581 0083 74785065 		.ascii	"txPeriod\000"
 2581      72696F64 
 2581      00
 2582              	.LASF4:
 2583 008c 6C6F6E67 		.ascii	"long int\000"
 2583      20696E74 
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 75


 2583      00
 2584              	.LASF48:
 2585 0095 55415254 		.ascii	"UART_PutChar\000"
 2585      5F507574 
 2585      43686172 
 2585      00
 2586              	.LASF26:
 2587 00a2 55415254 		.ascii	"UART_ReadRxData\000"
 2587      5F526561 
 2587      64527844 
 2587      61746100 
 2588              	.LASF9:
 2589 00b2 75696E74 		.ascii	"uint8\000"
 2589      3800
 2590              	.LASF46:
 2591 00b8 55415254 		.ascii	"UART_ReadControlRegister\000"
 2591      5F526561 
 2591      64436F6E 
 2591      74726F6C 
 2591      52656769 
 2592              	.LASF12:
 2593 00d1 646F7562 		.ascii	"double\000"
 2593      6C6500
 2594              	.LASF36:
 2595 00d8 61646472 		.ascii	"addressMode\000"
 2595      6573734D 
 2595      6F646500 
 2596              	.LASF23:
 2597 00e4 636F6E74 		.ascii	"control\000"
 2597      726F6C00 
 2598              	.LASF41:
 2599 00ec 55415254 		.ascii	"UART_Init\000"
 2599      5F496E69 
 2599      7400
 2600              	.LASF58:
 2601 00f6 7265744D 		.ascii	"retMode\000"
 2601      6F646500 
 2602              	.LASF31:
 2603 00fe 55415254 		.ascii	"UART_GetByte\000"
 2603      5F476574 
 2603      42797465 
 2603      00
 2604              	.LASF8:
 2605 010b 756E7369 		.ascii	"unsigned int\000"
 2605      676E6564 
 2605      20696E74 
 2605      00
 2606              	.LASF56:
 2607 0118 55415254 		.ascii	"UART_ClearTxBuffer\000"
 2607      5F436C65 
 2607      61725478 
 2607      42756666 
 2607      657200
 2608              	.LASF54:
 2609 012b 55415254 		.ascii	"UART_PutCRLF\000"
 2609      5F507574 
 2609      43524C46 
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 76


 2609      00
 2610              	.LASF5:
 2611 0138 6C6F6E67 		.ascii	"long unsigned int\000"
 2611      20756E73 
 2611      69676E65 
 2611      6420696E 
 2611      7400
 2612              	.LASF52:
 2613 014a 55415254 		.ascii	"UART_PutArray\000"
 2613      5F507574 
 2613      41727261 
 2613      7900
 2614              	.LASF62:
 2615 0158 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2615      74657243 
 2615      72697469 
 2615      63616C53 
 2615      65637469 
 2616              	.LASF33:
 2617 016f 73697A65 		.ascii	"size\000"
 2617      00
 2618              	.LASF3:
 2619 0174 73686F72 		.ascii	"short unsigned int\000"
 2619      7420756E 
 2619      7369676E 
 2619      65642069 
 2619      6E7400
 2620              	.LASF51:
 2621 0187 62756649 		.ascii	"bufIndex\000"
 2621      6E646578 
 2621      00
 2622              	.LASF24:
 2623 0190 696E7453 		.ascii	"intSrc\000"
 2623      726300
 2624              	.LASF61:
 2625 0197 55415254 		.ascii	"UART_SetTxAddressMode\000"
 2625      5F536574 
 2625      54784164 
 2625      64726573 
 2625      734D6F64 
 2626              	.LASF47:
 2627 01ad 55415254 		.ascii	"UART_ReadTxStatus\000"
 2627      5F526561 
 2627      64547853 
 2627      74617475 
 2627      7300
 2628              	.LASF63:
 2629 01bf 55415254 		.ascii	"UART_IntClock_Start\000"
 2629      5F496E74 
 2629      436C6F63 
 2629      6B5F5374 
 2629      61727400 
 2630              	.LASF37:
 2631 01d3 746D7043 		.ascii	"tmpCtrl\000"
 2631      74726C00 
 2632              	.LASF59:
 2633 01db 746D7053 		.ascii	"tmpStat\000"
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 77


 2633      74617400 
 2634              	.LASF17:
 2635 01e3 73697A65 		.ascii	"sizetype\000"
 2635      74797065 
 2635      00
 2636              	.LASF16:
 2637 01ec 6C6F6E67 		.ascii	"long double\000"
 2637      20646F75 
 2637      626C6500 
 2638              	.LASF39:
 2639 01f8 61646472 		.ascii	"address\000"
 2639      65737300 
 2640              	.LASF38:
 2641 0200 55415254 		.ascii	"UART_SetRxAddress1\000"
 2641      5F536574 
 2641      52784164 
 2641      64726573 
 2641      733100
 2642              	.LASF40:
 2643 0213 55415254 		.ascii	"UART_SetRxAddress2\000"
 2643      5F536574 
 2643      52784164 
 2643      64726573 
 2643      733200
 2644              	.LASF30:
 2645 0226 72785374 		.ascii	"rxStatus\000"
 2645      61747573 
 2645      00
 2646              	.LASF65:
 2647 022f 55415254 		.ascii	"UART_IntClock_Stop\000"
 2647      5F496E74 
 2647      436C6F63 
 2647      6B5F5374 
 2647      6F7000
 2648              	.LASF68:
 2649 0242 433A5C55 		.ascii	"C:\\Users\\marco\\OneDrive\\Documenti\\PSoC Creator"
 2649      73657273 
 2649      5C6D6172 
 2649      636F5C4F 
 2649      6E654472 
 2650 0270 5C50726F 		.ascii	"\\Prove_PSOC\\LED_GUI.cydsn\000"
 2650      76655F50 
 2650      534F435C 
 2650      4C45445F 
 2650      4755492E 
 2651              	.LASF67:
 2652 028a 47656E65 		.ascii	"Generated_Source\\PSoC5\\UART.c\000"
 2652      72617465 
 2652      645F536F 
 2652      75726365 
 2652      5C50536F 
 2653              	.LASF55:
 2654 02a8 55415254 		.ascii	"UART_GetTxBufferSize\000"
 2654      5F476574 
 2654      54784275 
 2654      66666572 
 2654      53697A65 
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 78


 2655              	.LASF15:
 2656 02bd 72656738 		.ascii	"reg8\000"
 2656      00
 2657              	.LASF35:
 2658 02c2 55415254 		.ascii	"UART_SetRxAddressMode\000"
 2658      5F536574 
 2658      52784164 
 2658      64726573 
 2658      734D6F64 
 2659              	.LASF1:
 2660 02d8 756E7369 		.ascii	"unsigned char\000"
 2660      676E6564 
 2660      20636861 
 2660      7200
 2661              	.LASF44:
 2662 02e6 55415254 		.ascii	"UART_WriteTxData\000"
 2662      5F577269 
 2662      74655478 
 2662      44617461 
 2662      00
 2663              	.LASF2:
 2664 02f7 73686F72 		.ascii	"short int\000"
 2664      7420696E 
 2664      7400
 2665              	.LASF57:
 2666 0301 55415254 		.ascii	"UART_SendBreak\000"
 2666      5F53656E 
 2666      64427265 
 2666      616B00
 2667              	.LASF66:
 2668 0310 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2668      43313120 
 2668      352E342E 
 2668      31203230 
 2668      31363036 
 2669 0343 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2669      20726576 
 2669      6973696F 
 2669      6E203233 
 2669      37373135 
 2670 0376 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2670      66756E63 
 2670      74696F6E 
 2670      2D736563 
 2670      74696F6E 
 2671              	.LASF53:
 2672 039e 62797465 		.ascii	"byteCount\000"
 2672      436F756E 
 2672      7400
 2673              	.LASF25:
 2674 03a8 72784461 		.ascii	"rxData\000"
 2674      746100
 2675              	.LASF18:
 2676 03af 55415254 		.ascii	"UART_Enable\000"
 2676      5F456E61 
 2676      626C6500 
 2677              	.LASF27:
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 79


 2678 03bb 55415254 		.ascii	"UART_ReadRxStatus\000"
 2678      5F526561 
 2678      64527853 
 2678      74617475 
 2678      7300
 2679              	.LASF14:
 2680 03cd 63686172 		.ascii	"char\000"
 2680      00
 2681              	.LASF13:
 2682 03d2 63686172 		.ascii	"char8\000"
 2682      3800
 2683              	.LASF22:
 2684 03d8 55415254 		.ascii	"UART_SetRxInterruptMode\000"
 2684      5F536574 
 2684      5278496E 
 2684      74657272 
 2684      7570744D 
 2685              	.LASF29:
 2686 03f0 55415254 		.ascii	"UART_GetChar\000"
 2686      5F476574 
 2686      43686172 
 2686      00
 2687              	.LASF20:
 2688 03fd 656E6162 		.ascii	"enableInterrupts\000"
 2688      6C65496E 
 2688      74657272 
 2688      75707473 
 2688      00
 2689              	.LASF69:
 2690 040e 55415254 		.ascii	"UART_initVar\000"
 2690      5F696E69 
 2690      74566172 
 2690      00
 2691              	.LASF32:
 2692 041b 55415254 		.ascii	"UART_GetRxBufferSize\000"
 2692      5F476574 
 2692      52784275 
 2692      66666572 
 2692      53697A65 
 2693              	.LASF28:
 2694 0430 73746174 		.ascii	"status\000"
 2694      757300
 2695              	.LASF19:
 2696 0437 55415254 		.ascii	"UART_Stop\000"
 2696      5F53746F 
 2696      7000
 2697              	.LASF11:
 2698 0441 666C6F61 		.ascii	"float\000"
 2698      7400
 2699              	.LASF49:
 2700 0447 55415254 		.ascii	"UART_PutString\000"
 2700      5F507574 
 2700      53747269 
 2700      6E6700
 2701              	.LASF21:
 2702 0456 55415254 		.ascii	"UART_WriteControlRegister\000"
 2702      5F577269 
ARM GAS  C:\Users\marco\AppData\Local\Temp\cclFrlvk.s 			page 80


 2702      7465436F 
 2702      6E74726F 
 2702      6C526567 
 2703              	.LASF34:
 2704 0470 55415254 		.ascii	"UART_ClearRxBuffer\000"
 2704      5F436C65 
 2704      61725278 
 2704      42756666 
 2704      657200
 2705              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
